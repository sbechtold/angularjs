"use strict";angular.module("redbox.framework.directives",["ngResource","ngAnimate","ngTouch","ngSanitize","ui.router","adp.ng.logging","adp.ng.language","redbox.shared.constants","redbox.shared.utils","redbox.shared.services","adp.ng.ui.alert-message","adp.ng.ui.button","adp.ng.ui.card","adp.ng.ui.containers","adp.ng.ui.dashboard","adp.ng.ui.form","adp.ng.ui.loading","adp.ng.ui.pokerchip","adp.ng.ui.modal","adp.ng.ui.popover","adp.ng.ui.select","adp.ng.ui.tabs"]),angular.module("redbox.framework",["ngResource","adp.ng.logging","adp.ng.utilities","redbox.framework.menu","redbox.framework.accessibility","redbox.shared.services","redbox.onboarding","redbox.connections.worker","redbox.shared.utils","redbox.tour","redbox.talent","oc.lazyLoad","redbox.supportlink"]).config(["$stateProvider",function($stateProvider){$stateProvider.state("mobileError",{url:"/mobileError",views:{main:{templateUrl:"app/framework/views/mobile-error.html",resolve:{data:["$language",function($language){return $language.resourceBundlesLoaded()}]}}}})}]),angular.module("redbox.framework.checklists",["redbox.framework.directives","redbox.onboarding.display","adp.ng.logging","as.sortable"]),angular.module("redbox.framework.components",["ngSanitize","adp.ng.language","adp.ng.ui.modal","adp.ng.ui.slidein","ui.bootstrap","redbox.shared.utils","angulartics","ngLoad","redbox.ext.shared.utils"]),angular.module("redbox.framework.menu",["adp.ng.logging","redbox.shared.services","redbox.connections.worker","redbox.timeline"]),angular.module("redbox.framework.meta",["adp.ng.logging","adp.ng.meta","redbox.shared.filters"]),angular.module("redbox.framework.api",["adp.ng.logging","adp.ng.language","angulartics","redbox.ext.shared.constants"]),angular.module("redbox.framework.tasks",["redbox.notifications","redbox.framework.tasks.factory","redbox.framework","redbox.shared.utils","redbox.shared.services","redbox.workflow"]),angular.module("redbox.framework.tasks.factory",["redbox.framework.tasks","redbox.notifications","adp.ng.logging","redbox.company.policies","adp.ng.meta","redbox.framework.meta"]),angular.module("redbox.framework").controller("redbox.framework.VideoCtrl",["$sce","redbox.framework.VideoService",function($sce,VideoService){function onChanges(){var parsedUrl=VideoService.getEmbedUrl(vm.url);parsedUrl?(vm.error=!1,vm.parsedUrl=$sce.trustAsResourceUrl(parsedUrl)):vm.onError&&_.isFunction(vm.onError)?(vm.error=!0,vm.onError()):vm.error=!0}var vm=this;angular.extend(vm,{$onChanges:onChanges,error:!1})}]).component("adpVideo",{controller:"redbox.framework.VideoCtrl",controllerAs:"videoCtrl",templateUrl:"app/framework/components/adp-video/video-component.html",bindings:{url:"<",onError:"&"}}),function(){angular.module("redbox.framework").component("audioEyeConfig",{templateUrl:"app/framework/components/audio-eye-config-component/audio-eye-config.html",controller:["$q","$language","redbox.framework.accessibility.AudioEyeService",function($q,$language,audioEyeService){function enableAudioEye(isEnabled){audioEyeService.setAudioEyeUserPreference(isEnabled).then(function(success){isEnabled&&audioEyeService.loadAudioEye()}).catch(function(error){$ctrl.showError=!0})}var $ctrl=this;$ctrl.enableAudioEye=enableAudioEye,$ctrl.showError=!1,$ctrl.language=$language,$ctrl.AUDIO_EYE_URL="https://www.audioeye.com/"}]})}(),angular.module("redbox.framework.components").component("redboxList",{bindings:{list:"<",listDetails:"<?",listOptions:"<?"},controller:"redbox.framework.components.ListCtrl",controllerAs:"listCtrl",templateUrl:"app/framework/components/list-component/list-component.html"}).controller("redbox.framework.components.ListCtrl",["$q","$timeout",function($q,$timeout){function setDefault(property,value){void 0===vm[property]&&(vm[property]=value)}function toggleRow(row){return row.viewState?void delete row.viewState:(row.viewState={},row.viewState.loading=!0,void $q.when(row.loadDetails()).then(function(){row.viewState.error&&delete row.viewState.error}).catch(function(e){row.viewState.error=e}).finally(function(){$timeout(function(){row.viewState.expanded=!0},100),row.viewState.loading=!1}))}var vm=this,emptyData={headers:{items:[]},rows:{items:[]}};vm.toggleRow=toggleRow,vm.listDetails=_.get(vm,"listDetails",!0),vm.listOptions=_.get(vm,"listOptions",!0),setDefault("list",emptyData)}]),function(){function ensureModuleExists(moduleName){try{angular.module(moduleName)}catch(ex){return angular.module(moduleName,[]),!1}return!0}var appTplsExist=ensureModuleExists("redbox.framework.app.templates");ensureModuleExists("redbox.benefits.Benefits"),ensureModuleExists("redbox.admin"),ensureModuleExists("redbox.retirement"),ensureModuleExists("redbox.talent"),ensureModuleExists("redbox.pay"),ensureModuleExists("redbox.aline"),ensureModuleExists("redbox.time"),ensureModuleExists("redbox.time.Time"),ensureModuleExists("redbox.time.punch"),ensureModuleExists("redbox.time.laboraccounts"),ensureModuleExists("redbox.time.timeoff"),ensureModuleExists("redbox.time.managertimeoff"),ensureModuleExists("redbox.time.managerSchedule"),ensureModuleExists("redbox.timeline"),ensureModuleExists("redbox.datacloud.analytics"),ensureModuleExists("redbox.supportlink"),ensureModuleExists("redbox.settings"),ensureModuleExists("redbox.tour"),ensureModuleExists("redbox.manageractions.transfer"),ensureModuleExists("redbox.e2e.components"),angular.module("redbox",["ngResource","ngAnimate","ngCookies","ngSanitize","ui.router","angulartics","angulartics.google.analytics","angularMoment","adp.ng.language","adp.ng.logging","adp.ng.utilities","redbox.shell","redbox.shared.filters","redbox.ext.shared.filters","redbox.framework","redbox.shared.constants","redbox.framework.app.templates","redbox.framework.initializer","redbox.branding","redbox.framework.directives","redbox.shared.interceptors","redbox.ext.shared.interceptors","redbox.feedback","redbox.dashboard","redbox.framework.tasks","redbox.settings","redbox.admin","redbox.framework.api","redbox.framework.footer","redbox.framework.menu","redbox.framework.accessibility","redbox.tour","redbox.framework.components","redbox.pay","redbox.aline","redbox.time","redbox.time.timeoff","redbox.time.managertimeoff","redbox.time.managerSchedule","redbox.connections","redbox.connections.worker","redbox.benefits.Benefits","redbox.company","redbox.company.news","redbox.company.rssFeed","redbox.onboarding","redbox.onboarding.dashboard","redbox.talent","redbox.retirement","redbox.datacloud.analytics","redbox.demo","redbox.e2e.components"]).config(["$uiViewScrollProvider","$locationProvider","$urlRouterProvider","$httpProvider","$languageProvider","redbox.ext.shared.interceptors.TemplateUrlInterceptorProvider","redbox.ext.shared.interceptors.SessionTimeoutInterceptorProvider","redbox.ext.shared.interceptors.AJAXLoadingInterceptorProvider","redbox.ext.shared.interceptors.ActAsInterceptorProvider","redbox.ext.shared.services.SessionServiceProvider","adp.ng.utilities.RuntimeInstanceConfigServiceProvider",function($uiViewScrollProvider,$locationProvider,$urlRouterProvider,$httpProvider,$languageProvider,templateUrlInterceptorProvider,sessionTimeoutInterceptorProvider,ajaxLoadingInterceptorProvider,actAsInterceptorProvider,sessionServiceProvider,runtimeInstanceConfigService){$locationProvider.html5Mode(!1);var languageProviderConfig={resourceBundleNames:["shared","framework","company","connections","reporting","onboarding","wizard"],urlTemplate:"ext/resources/i18n/messages-{name}_{lang}.json",preferredLanguage:"en-US",storageKey:"ADPLangLocaleCookie",cookieDomain:".adp.com",scopeVariable:"lang",availableLanguages:[{locale:"en-US",name:"English",momentLocale:"en"},{locale:"es-US",name:"Spanish",momentLocale:"es"},{locale:"fr-CA",name:"French Canadian",momentLocale:"fr-ca"},{locale:"zh-CN",name:"Chinese",momentLocale:"zh-cn"},{locale:"nl-NL",name:"Dutch",momentLocale:"nl"},{locale:"pt-BR",name:"Portuguese - Brazil",momentLocale:"pt-br"},{locale:"de-DE",name:"German",momentLocale:"de"},{locale:"en-GB",name:"English - UK",momentLocale:"en-gb"},{locale:"fr-FR",name:"French",momentLocale:"fr"},{locale:"it-IT",name:"Italian",momentLocale:"it"}]};$languageProvider.config(languageProviderConfig),templateUrlInterceptorProvider.config({basePath:"redbox"}),sessionTimeoutInterceptorProvider.config({timeoutService:"redbox.shared.services.SessionTimeoutService"}),ajaxLoadingInterceptorProvider.config({excludeWildCardPaths:["/onboarding","/profile","connections/orgchart","connections/newhires","admin/onboarding","/benefits","/timecard","/teamtimecards","/monitoring","/retirement","/pay","/aline","/yourteam"],excludeExactPaths:["/connections/directory","/dashboard","/talent"]}),sessionServiceProvider.config({protectedResourceUrl:"app/framework/views/session-timeout.html"}),runtimeInstanceConfigService.config({locale:"en-US",countryDialing:"1"}),appTplsExist&&$httpProvider.interceptors.push("redbox.ext.shared.interceptors.TemplateUrlInterceptor"),actAsInterceptorProvider.config({whiteListUrls:["/redboxapi/events/core/v1/act-as.stop"],noAlertUrls:["/redboxapi/core/events/v1/profile/tour.change","/core/v1/search/click"]}),$httpProvider.interceptors.push("redbox.ext.shared.interceptors.ActAsInterceptor"),$httpProvider.interceptors.push("redbox.shared.interceptors.JSONInterceptor"),$httpProvider.interceptors.push("redbox.shared.interceptors.ROLEInterceptor"),$httpProvider.interceptors.push("redbox.shared.interceptors.LocalMockApiInterceptor"),$httpProvider.interceptors.push("redbox.shared.interceptors.GAErrorLoggingInterceptor"),$httpProvider.interceptors.push("redbox.ext.shared.interceptors.AJAXLoadingInterceptor"),$httpProvider.interceptors.push("redbox.ext.shared.interceptors.SessionTimeoutInterceptor"),$httpProvider.interceptors.push("redbox.ext.shared.interceptors.HttpTimeoutInterceptor"),$uiViewScrollProvider.useAnchorScroll(),$httpProvider.useApplyAsync(!0),$urlRouterProvider.deferIntercept()}]).run(["redbox.framework.initializer.AppInitializerService",function(appInitializerService){appInitializerService.initialize()}])}(),function(){angular.module("redbox.framework.components").controller("redbox.framework.components.AdpTimePickerCtrl",[function(){function initNgModel(){"12h"===vm.timeFormat?vm.setClockOptions({clockType:"12h"}):vm.setClockOptions({clockType:"24h"}),vm.ngModel&&(vm.ngModel.$formatters.unshift(momentObjFormatter),vm.ngModel.$parsers.unshift(parseInput),vm.ngModel.$validators.timeFormat=timeFormatValidator)}function canonicalTimeFormat(textBoxValue){if(!textBoxValue)return textBoxValue;if(0===textBoxValue.length)return textBoxValue;var digitString=_.take(_.filter(textBoxValue,function(char){return char>="0"&&char<="9"}),4).join(""),newValue=textBoxValue||"";return 3!==digitString.length&&4!==digitString.length||textBoxValue.indexOf(":")===-1&&(newValue=insertColon(textBoxValue,digitString.length)),newValue=_.trim(newValue.replace(/\s{2,}/g," ")),vm.parseTime(newValue),vm.isValidTimeFormat(newValue)?vm.formatTime(vm.parsedMoment):textBoxValue}function setClockOptions(config){var type=(config||{}).clockType;clockConfiguration="24h"===type?clockSettings.Military:clockSettings.TwelveHour,vm.placeholder=getPlaceholderText()}function isValidTimeFormat(timeString){return vm.parsedMoment||vm.parseTime(timeString),vm.parsedMoment.isValid()}function changeTime(currentTime,canonicalTime){if(!canonicalTime)return null;vm.parsedMoment||vm.parseTime(canonicalTime);var momentTime=vm.parsedMoment;return isValidMomentObject(currentTime)?(currentTime.set("hour",momentTime.hour()),currentTime.set("minute",momentTime.minute()),currentTime):momentTime}function formatTime(momentObj){return momentObj.format(clockConfiguration.timeFormat)}function parseTime(timeString){var defaultDate=vm.defaultDate||moment(),momentDateAndTime=defaultDate.format("YYYY-MM-DD")+" "+timeString;vm.parsedMoment=moment(momentDateAndTime,validTimeFormats,"en-US",STRICT_PARSING)}function parseInput(momentObj){return vm.ngModel.$isEmpty(momentObj)?null:moment.isMoment(momentObj)?(savedDate.date&&(momentObj.date(savedDate.date),momentObj.month(savedDate.month),momentObj.year(savedDate.year)),momentObj):"string"==typeof momentObj?(vm.canonicalTimeFormat(momentObj),vm.parsedMoment):void 0}function timeFormatValidator(modelValue,viewValue){var isRequired=vm.ngRequired||!1,isEmpty=vm.ngModel.$isEmpty(modelValue);return(!isRequired||!isEmpty)&&(!(isRequired||!isEmpty)||modelValue.isValid())}function momentObjFormatter(initialModelValue){var textBoxValue=moment.isMoment(initialModelValue)?vm.formatTime(initialModelValue):"";return controlHasFocus||(vm.inputVal=textBoxValue),moment.isMoment(initialModelValue)&&(savedDate.date=initialModelValue.date(),savedDate.month=initialModelValue.month(),savedDate.year=initialModelValue.year()),initialModelValue}function reformatDisplayValue(){var canonicalTime=vm.canonicalTimeFormat(vm.inputVal);vm.inputVal=canonicalTime,vm.ngModel.$setViewValue(canonicalTime);var time=vm.changeTime(vm.ngModel.$modelValue,canonicalTime);vm.allowEmpty&&null===time?vm.ngModel.$setViewValue(null):null!==time&&vm.ngModel.$setViewValue(time),controlHasFocus=!1}function timeBlurCallback(){vm.reformatDisplayValue(),"function"==typeof vm.blurCallback&&vm.blurCallback()}function setControlFocus(){controlHasFocus=!0}function updateModelWhenInputChanges(){vm.ngModel.$setViewValue(vm.inputVal)}function getPlaceholderText(){return clockConfiguration.placeholder}function insertColon(timestring,digitlength){var ret=timestring;return 3===digitlength&&(ret=timestring.substr(0,1)+":"+timestring.substr(1)),4===digitlength&&(ret=timestring.substr(0,2)+":"+timestring.substr(2)),ret}function isValidMomentObject(time){return!_.isUndefined(time)&&!_.isNull(time)&&moment.isMoment(time)}var STRICT_PARSING=!0,validTimeFormats=["YYYY-MM-DD HH:mm","YYYY-MM-DD HH:mm a","YYYY-MM-DD HH:mma","YYYY-MM-DD h:mm a","YYYY-MM-DD h:mma","YYYY-MM-DD hh:mm","YYYY-MM-DD h:mm","YYYY-MM-DD h:m","YYYY-MM-DD H:","YYYY-MM-DD h:","YYYY-MM-DD Ha","YYYY-MM-DD H a","YYYY-MM-DD H"],clockConfiguration={},clockSettings={TwelveHour:{clockType:"12h",placeholder:"hh:mm AM",timeFormat:"h:mm A"},Military:{clockType:"24h",placeholder:"hh:mm",timeFormat:"HH:mm"}},vm=this,controlHasFocus=!1,savedDate={date:null,month:null,year:null};angular.extend(vm,{defaultDate:vm.defaultDate||moment(),$onInit:initNgModel,canonicalTimeFormat:canonicalTimeFormat,setClockOptions:setClockOptions,isValidTimeFormat:isValidTimeFormat,changeTime:changeTime,formatTime:formatTime,parseTime:parseTime,reformatDisplayValue:reformatDisplayValue,timeBlurCallback:timeBlurCallback,setControlFocus:setControlFocus,updateModelWhenInputChanges:updateModelWhenInputChanges,id:_.uniqueId("adp-timepicker-")})}]).component("adpTimepicker",{bindings:{labelText:"@",timeFormat:"@",defaultDate:"=?",ngRequired:"=ngRequired",ngDisabled:"=ngDisabled",blurCallback:"&"},require:{ngModel:"^ngModel"},controller:"redbox.framework.components.AdpTimePickerCtrl",controllerAs:"adpTimePickerCtrl",templateUrl:"app/framework/js/components/timepicker/timepicker.html"})}(),function(){function safeInject($scope,$element,$attrs,controller,$transclude){$scope.item?$transclude($scope,function(clone){$element.append(clone)}):$element.empty()}var ngmod=angular.module("redbox.framework.directives");ngmod.directive("transcludeInjectTag",[function(){return{restrict:"A",link:function($scope,$element,$attrs,controller,$transclude){if(!$transclude)throw new Error("Illegal use of transcludeInject  No directive that requires a transclusion found.");var injectTag=_.get($attrs,"transcludeInjectTag","").toUpperCase();$transclude($scope,function(clone){for(var i=0;i<clone.length;i++)injectTag===clone[i].tagName&&($element.empty(),$element.append(clone[i]))})}}}]),ngmod.directive("adp-carousel-item",function(){return{restrict:"E",transclude:!0,replace:!0,link:safeInject}}),ngmod.directive("navigation-page-icon",function(){return{restrict:"E",transclude:!0,link:safeInject}}),ngmod.directive("adpCarouselWidget",["$injector",function($injector){function widgetLink(scope,element){scope.vm.animNotInProgress=function(){return 0===element.find(".carousel-item.ng-hide-remove").length}}function carouselController($scope){function onArrayUpdate(){currentIndex=vm.listAdapter&&vm.listAdapter.getCurrentIndex()||0,vm.listAdapter=new ArrayAdapterFactory.ArrayNavigator(vm.items,currentIndex),vm.api&&vm.api.onReady&&vm.api.onReady(vm.listAdapter)}function setCarouselOptions(){vm.options=vm.options||{},_.defaults(vm.options,{pageIndicatorStyle:"page-count",pageLimit:6})}var currentIndex,vm=this;vm.moreThanOnePage=function(){return vm.listAdapter&&vm.listAdapter.getLength()>1},$scope.$watchCollection("vm.items",onArrayUpdate),$scope.$watchCollection("vm.options",setCarouselOptions),$scope.$watch("vm.api",function(apiObj){apiObj&&apiObj.onReady&&apiObj.onReady(vm.listAdapter)})}var ArrayAdapterFactory=$injector.get("redbox.framework.ArrayNavigator.ArrayNavigatorService");return{restrict:"E",transclude:!0,scope:{items:"=",options:"=",api:"="},controller:["$scope",carouselController],controllerAs:"vm",link:widgetLink,bindToController:!0,templateUrl:"app/framework/views/adp-carousel-widget.html"}}])}(),function(){function AdpCarouselCardDirective(){return{restrict:"E",scope:!1,link:function($scope,$element,$attrs){angular.isDefined($scope.$parent)&&angular.isDefined($scope.$parent.update)&&$scope.$parent.update()}}}angular.module("redbox.framework.directives").directive("adpCarouselCard",AdpCarouselCardDirective)}(),function(){function AdpCarouselDirective($timeout){var directive={};return directive.scope=!0,directive.restrict="E",directive.controller=["$scope","$element","$attrs",function($scope,$element,$attrs){var transitionClassNames={single:$attrs.carouselTransitionSingle||"single",multiple:$attrs.carouselTransitionMultiple||"multiple"};$scope.cardSelector=$attrs.carouselCardSelector,$scope.cardIndicatorsEnabled="true"===$attrs.carouselEnableCardIndicators,$scope.cardIndicatorsSet="true"===$attrs.carouselCardIndicatorsSet,$scope.IndicatorHomeButton="true"===$attrs.carouselIndicatorHomeButton,$scope.IndicatorButtonSize=$attrs.carouselIndicatorButtonSize,$scope.hideOverflowCard="true"===$attrs.carouselHideOverflowCard,$scope.IndicatorSizeClass=12,$scope.cardsInEachSet=1;var activeTransitionClassNames=[];$scope.leftNavElement=null,$scope.rightNavElement=null,$scope.indicatorButtonContainer=null,$scope.indicatorButtons=[],$scope.deckWrapEnabled="true"===$attrs.carouselEnableWrap,$scope.totalCardsWidth=null,$scope.parentContainerWidth=null,$scope.carouselMode=$attrs.carouselMode,$scope.currentSlide=0;var indicatorButton,carouselNamespace="",getCarouselNamespace=function(obj){switch(typeof obj){case"string":carouselNamespace=obj,""!==carouselNamespace&&"-"!==carouselNamespace.substr(carouselNamespace.length-1)&&(carouselNamespace=carouselNamespace.concat("-"));break;case"function":getCarouselNamespace(function(){return obj($scope)})}};if(getCarouselNamespace($attrs.carouselNamespace),$scope.IndicatorButtonSize)switch($scope.IndicatorButtonSize){case"sm":case"small":$scope.IndicatorSizeClass="sm";break;case"md":case"medium":case"default":$scope.IndicatorSizeClass="md";break;case"lg":case"large":$scope.IndicatorSizeClass="lg"}$scope.$watch("currentCardIdx",function(newVal,oldVal){newVal!==oldVal&&$scope.$emit(carouselNamespace+"carouselCurrentCard",{currentIdx:$scope.currentCardIdx,cards:$scope.cards})}),$scope.update=function(){$scope.cards=$element.find($scope.cardSelector),0!==$scope.cards.length&&($scope.rootCardElement=angular.element($scope.cards[$scope.currentSlide]),$scope.currentCardIdx=$scope.currentSlide,$scope.oldCardIdx=$scope.currentSlide,$scope.currentCard=$scope.cards[$scope.currentCardIdx],addSwipeListner(),$scope.updateCardLayout())};var addSwipeListner=function(){$scope.startX=0,$scope.posX=0,$element.on("touchstart",function(e){$scope.startX=e.originalEvent.touches[0].pageX}),$element.on("touchmove",function(e){$scope.posX=e.originalEvent.touches[0].pageX}),$element.on("touchend",function(e){$scope.posX>0&&($scope.startX-200>$scope.posX?$scope.nextCard(4):$scope.startX+200<$scope.posX?$scope.previousCard(4):$scope.startX-100>$scope.posX?$scope.nextCard():$scope.startX+100<$scope.posX&&$scope.previousCard(),$scope.startX=0,$scope.posX=0)})};$scope.applyCardTransition=function(element,className){element.addClass(className),activeTransitionClassNames.indexOf(className)===-1&&activeTransitionClassNames.push(className)},$scope.removeCardTransitions=function(){if(0!==activeTransitionClassNames.length){var classNames=activeTransitionClassNames.join(" ");$scope.cards.removeClass(classNames),activeTransitionClassNames=[]}},$scope.updateIndicatorButtons=function(){var carouselBoundingRect=$element[0].getBoundingClientRect();$scope.cardIndicatorsSet?(angular.forEach($scope.cards,function(card,cardIdx){var cardBoundingRect=card.getBoundingClientRect(),idicatorIdx=Math.floor(cardIdx/$scope.cardsInEachSet);cardBoundingRect.right<carouselBoundingRect.right&&cardBoundingRect.left>carouselBoundingRect.left?$scope.indicatorButtons[idicatorIdx].active||($scope.indicatorButtons[idicatorIdx].active=!0,$scope.indicatorButtons[idicatorIdx].element.removeClass("inactive").addClass("active"),$scope.indicatorButtons[idicatorIdx].element.removeClass("hidden")):($scope.indicatorButtons[idicatorIdx].active&&($scope.indicatorButtons[idicatorIdx].active=!1,$scope.indicatorButtons[idicatorIdx].element.removeClass("active").addClass("inactive")),$scope.hideOverflowCard&&!angular.element(card).hasClass("hide-overflow")&&angular.element(card).addClass("hide-overflow"))}),$scope.indicatorButtons.length>0&&($scope.indicatorButtons[0].active?$scope.leftNavElement.addClass("disabled"):$scope.leftNavElement.removeClass("disabled"),$scope.indicatorButtons[$scope.indicatorButtons.length-1].active?$scope.rightNavElement.addClass("disabled"):$scope.rightNavElement.removeClass("disabled"))):(angular.forEach($scope.cards,function(card,cardIdx){var cardBoundingRect=card.getBoundingClientRect();cardBoundingRect.right<carouselBoundingRect.right&&cardBoundingRect.left>carouselBoundingRect.left?($scope.indicatorButtons[cardIdx].active=!0,$scope.indicatorButtons[cardIdx].element.removeClass("inactive").addClass("active")):($scope.indicatorButtons[cardIdx].active=!1,$scope.indicatorButtons[cardIdx].element.removeClass("active").addClass("inactive"))}),$scope.indicatorButtons.length>0&&($scope.indicatorButtons[0].active?$scope.leftNavElement.addClass("disabled"):$scope.leftNavElement.removeClass("disabled"),$scope.indicatorButtons[$scope.indicatorButtons.length-1].active?$scope.rightNavElement.addClass("disabled"):$scope.rightNavElement.removeClass("disabled")))},$scope.updateCardLayout=function(options){if(angular.isDefined($scope.cards)&&0!==$scope.cards.length){var renderIndicatorButtons=angular.isDefined($scope.cards)&&$scope.indicatorButtons.length!==$scope.cards.length;$scope.cardIndicatorsEnabled&&renderIndicatorButtons&&($scope.indicatorButtonContainer.empty(),$scope.indicatorButtons=[]);var cardWidth=$scope.rootCardElement.outerWidth(!0),carouselWidth=$element.outerWidth(!0),cardOffset=cardWidth*$scope.currentCardIdx;0!==cardOffset&&(cardOffset=-cardOffset),cardOffset+=15,"single"===$scope.carouselMode?(angular.element($scope.cards.width($element.width()-65)),cardOffset+=parseInt($scope.leftNavElement.outerWidth(!0))):$scope.hideOverflowCard&&(cardOffset+=parseInt($scope.leftNavElement.outerWidth(!0)));var withTransitions=!0;angular.isDefined(options)&&options.hasOwnProperty("withTransitions")&&(withTransitions=options.withTransitions);var moveDistance=Math.abs($scope.currentCardIdx-$scope.oldCardIdx),transitionBaseName=transitionClassNames.single,transitionTimeMills=500;moveDistance>2&&(transitionBaseName=transitionClassNames.multiple,transitionTimeMills=1e3);var hanlderFun=function($event){$scope.$apply(function(){$scope.currentCardIdx=parseInt(angular.element($event.currentTarget).attr("data-card-idx"),10)*$scope.cardsInEachSet,$scope.currentCard=$scope.cards[$scope.currentCardIdx],$scope.updateCardLayout({withTransitions:!0})})};if($scope.cardIndicatorsSet){if(cardWidth&&carouselWidth){$scope.cardsInEachSet=Math.floor(carouselWidth/cardWidth),0===$scope.cardsInEachSet&&($scope.cardsInEachSet=1),$scope.cardsInEachSet=Math.floor(carouselWidth/cardWidth),$scope.cardSetCount=Math.ceil($scope.cards.length/$scope.cardsInEachSet);for(var i=0;i<$scope.cardSetCount;i++)if($scope.cardIndicatorsEnabled&&renderIndicatorButtons){var indicatorElement="";indicatorElement=$scope.IndicatorHomeButton&&0===i?angular.element('<div class="carousel-indicator-home-button '+$scope.IndicatorSizeClass+'"><i class="fa fa-home"></i></div>'):angular.element('<div class="carousel-indicator-button '+$scope.IndicatorSizeClass+'"></div>'),indicatorElement.attr("data-card-idx",i),indicatorElement.on("click",hanlderFun),$scope.indicatorButtonContainer.append(indicatorElement),$scope.leftNavElement.removeClass("hide"),$scope.rightNavElement.removeClass("hide"),indicatorButton={active:!1,element:indicatorElement},$scope.indicatorButtons.push(indicatorButton)}angular.forEach($scope.cards,function(card,cardIdx){var parentOffset=angular.element(card.parentElement).offset(),cardElement=angular.element(card);$scope.hideOverflowCard&&angular.element(card).hasClass("hide-overflow")&&angular.element(card).removeClass("hide-overflow"),withTransitions&&($scope.currentCardIdx>$scope.oldCardIdx?($scope.applyCardTransition(cardElement,transitionBaseName),$scope.applyCardTransition(cardElement,"prev")):($scope.applyCardTransition(cardElement,transitionBaseName),$scope.applyCardTransition(cardElement,"next"))),"single"===$scope.carouselMode?cardElement.offset({left:parentOffset.left+cardOffset-15}):cardElement.offset({left:parentOffset.left+cardOffset}),cardOffset+=cardElement.outerWidth(!0)})}}else angular.forEach($scope.cards,function(card,cardIdx){var parentOffset=angular.element(card.parentElement).offset(),cardElement=angular.element(card);withTransitions&&($scope.currentCardIdx>$scope.oldCardIdx?($scope.applyCardTransition(cardElement,transitionBaseName),$scope.applyCardTransition(cardElement,"prev")):($scope.applyCardTransition(cardElement,transitionBaseName),$scope.applyCardTransition(cardElement,"next"))),"single"===$scope.carouselMode?cardElement.offset({left:parentOffset.left+cardOffset-15}):cardElement.offset({left:parentOffset.left+cardOffset}),cardOffset+=cardElement.outerWidth(!0),$scope.cardIndicatorsEnabled&&renderIndicatorButtons&&(indicatorElement="",indicatorElement=$scope.IndicatorHomeButton&&0===cardIdx?angular.element('<div class="carousel-indicator-home-button '+$scope.IndicatorSizeClass+'"><i class="fa fa-home"></i></div>'):angular.element('<div class="carousel-indicator-button '+$scope.IndicatorSizeClass+'"></div>'),indicatorElement.attr("data-card-idx",cardIdx),indicatorElement.on("click",function($event){$scope.$apply(function(){$scope.currentCardIdx=parseInt(angular.element($event.currentTarget).attr("data-card-idx"),10),$scope.currentCard=$scope.cards[$scope.currentCardIdx],$scope.$emit("ADP-CAROUSEL-SLIDE-EVENT",{slideNumber:$scope.currentCardIdx}),$scope.updateCardLayout({withTransitions:!0})})}),$scope.indicatorButtonContainer.append(indicatorElement),$scope.leftNavElement.removeClass("hide"),$scope.rightNavElement.removeClass("hide"),indicatorButton={active:!1,element:indicatorElement},$scope.indicatorButtons.push(indicatorButton))});withTransitions&&$timeout($scope.removeCardTransitions,transitionTimeMills),$scope.oldCardIdx=$scope.currentCardIdx,$scope.cardIndicatorsEnabled&&$timeout($scope.updateIndicatorButtons,550)}},$scope.nextCard=function(toMove){($scope.currentCardIdx!==$scope.cards.length-1||$scope.deckWrapEnabled)&&(toMove?$scope.currentCardIdx=$scope.currentCardIdx+toMove:$scope.currentCardIdx=$scope.currentCardIdx+$scope.cardsInEachSet,$scope.currentCardIdx>=$scope.cards.length&&($scope.currentCardIdx=$scope.cards.length-$scope.cardsInEachSet),$scope.$emit("ADP-CAROUSEL-SLIDE-EVENT",{slideNumber:$scope.currentCardIdx}),$scope.currentCard=$scope.cards[$scope.currentCardIdx],$scope.updateCardLayout({withTransitions:!0}))},$scope.previousCard=function(toMove){(0!==$scope.currentCardIdx||$scope.deckWrapEnabled)&&(toMove?$scope.currentCardIdx=$scope.currentCardIdx-toMove:$scope.currentCardIdx=$scope.currentCardIdx-$scope.cardsInEachSet,$scope.currentCardIdx<0&&($scope.currentCardIdx=0),$scope.$emit("ADP-CAROUSEL-SLIDE-EVENT",{slideNumber:$scope.currentCardIdx}),$scope.currentCard=$scope.cards[$scope.currentCardIdx],$scope.updateCardLayout({withTransitions:!0}))}}],directive.link={pre:function($scope,$element,$attrs){var useFAIcon=$attrs.carouselCardUseFaIcon;null===$scope.leftNavElement&&(useFAIcon?$scope.leftNavElement=angular.element('<div class="carousel-nav-container left hide"><i class="fa '+useFAIcon+'-left"></i></div>'):$scope.leftNavElement=angular.element('<div class="carousel-nav-container left hide"></div>'),$scope.leftNavElement.bind("click",function($event){return $scope.leftNavElement.hasClass("disabled")?($event.stopPropagation(),void $event.preventDefault()):void $scope.previousCard()}),$element.append($scope.leftNavElement)),null===$scope.rightNavElement&&(useFAIcon?$scope.rightNavElement=angular.element('<div class="carousel-nav-container right hide"><i class="fa '+useFAIcon+'-right"></i></div>'):$scope.rightNavElement=angular.element('<div class="carousel-nav-container right hide"></div>'),$scope.rightNavElement.bind("click",function($event){return $scope.rightNavElement.hasClass("disabled")?($event.preventDefault(),void $event.stopPropagation()):void $scope.nextCard()}),$element.append($scope.rightNavElement)),null===$scope.indicatorButtonContainer&&($scope.indicatorButtonContainer=angular.element('<div class="carousel-indicator-button-container"></div>'),$element.append($scope.indicatorButtonContainer)),$scope.updateCardLayout({withTransitions:!1}),$scope.update()}},directive}AdpCarouselDirective.WITH_TRANSITIONS=!0,AdpCarouselDirective.WITHOUT_TRANSITIONS=!1,AdpCarouselDirective.$inject=["$timeout"],angular.module("redbox.framework.directives").directive("adpCarousel",AdpCarouselDirective)}(),angular.module("redbox.framework.directives").directive("adpClickOutside",["$document",function($document){var link=function(scope,elem,attr){var handler=function(event){if(!elem[0].contains(event.target)){for(var avoidedClasses=attr.unlessContainsClass.split(" "),i=0;i<avoidedClasses.length;i++)if(event.target.classList.contains(avoidedClasses[i]))return;scope.$apply(attr.adpClickOutside)}};scope.$watch(function(watchedScope){return watchedScope.showEdit},function(value){value===parseInt(attr.clickIndex)?$document.on("click",handler):$document.off("click",handler)}),scope.$on("$destroy",function(){$document.off("click",handler)})};return{link:link,restrict:"A"}}]),function(){function companyLinkDisplay($window,$language,$adpModal){return{restrict:"E",scope:{model:"=",options:"="},controller:function($scope){var vm=this,directiveOptions={showLabel:!0};vm.options&&(directiveOptions=vm.options),directiveOptions.showLabel?vm.displayText=vm.model.label:vm.displayText=vm.model.linkUrl,vm.openLink=function(link){function goToLink(){$window.open(link.linkUrl,"link"+link.linkId)}function extractDomain(url){var domain;return domain=url.indexOf("://")>-1?url.split("/")[2]:url.split("/")[0],domain=domain.split(":")[0]}var content=extractDomain(link.linkUrl).indexOf("adp")===-1?$language.get("framework.LEAVING_COMPANY_LINKS_MODAL_EXPERIENCE")+"</br></br>"+$language.get("shared.LEAVING_ADP_MODAL_CONTENT"):$language.get("framework.LEAVING_COMPANY_LINKS_MODAL_EXPERIENCE");$adpModal.open({title:$language.get("framework.LEAVING_COMPANY_LINKS_MODAL_TITLE"),size:"md",closeable:!0,footer:!0,closeLabel:$language.get("shared.CONTINUE"),closeClick:goToLink,dismissLabel:$language.get("shared.CANCEL"),content:content,scope:$scope})}},controllerAs:"linkDisplayCtrl",bindToController:!0,
template:'<a href="" class="link-display" data-e2e="company-link-url" data-link="{{linkDisplayCtrl.model.linkUrl}}" ng-click="linkDisplayCtrl.openLink(linkDisplayCtrl.model)">{{linkDisplayCtrl.displayText}}</a>'}}angular.module("redbox.framework.directives").directive("companyLinkDisplay",["$window","$language","adp.ng.ui.modal.adpModalService",companyLinkDisplay])}(),angular.module("redbox.framework.directives").directive("adpDate",["$rootScope",function($rootScope){var link=function(scope,$el,attrs,ngModel){function initModel(){ngModel?initializeUsingNgModel():initializeUsingDefaultDateModel()}function initializeUsingNgModel(){ngModel.$formatters.unshift(function(obj){obj&&obj.month&&obj.day&&obj.year?(dateIsSet={month:!0,day:!0,year:!0},handleFormatter(obj),setDaysInMonth()):initializeUsingDefaultDateModel()})}function initializeUsingDefaultDateModel(){dateModel=moment("01-01-2015","MM-DD-YYYY",!0),dateModel.month(""),dateModel.date(""),dateModel.year("")}function updateDateModel(){var month=(dateModel.month()+1).toString(),day=dateModel.date().toString(),year=dateModel.year().toString();month=1===month.length&&"0"+month||month,day=1===day.length&&"0"+day||day,ngModel&&dateIsSet.month&&dateIsSet.day&&dateIsSet.year&&ngModel.$setViewValue({month:month,day:day,year:year}),updateSelectedValues(month)}function updateDateModelPart(part,value){"year"===part&&!moment([value]).isLeapYear()&&1===dateModel.month()&&dateModel.date()>28?(dateModel.month(1),dateModel.date(28),dateModel.year(value)):"day"===part?dateModel.date(value):dateModel[part](value)}function setDaysInMonth(){vm.days=_.range(1,dateModel.daysInMonth()+1)}function handleFormatter(obj){var month=parseInt(obj.month.replace(/^(0)/,""),10);dateStr=obj.month+"-"+obj.day+"-"+obj.year,dateModel=moment(dateStr,"MM-DD-YYYY"),updateSelectedValues(month)}function updateSelectedValues(month){vm.monthsModel.selected=dateIsSet.month&&vm.months[month-1]||vm.monthsModel.selected,vm.daysModel.selected=dateIsSet.day&&dateModel.date().toString()||vm.daysModel.selected,vm.yearsModel.selected=dateIsSet.year&&dateModel.year().toString()||vm.yearsModel.selected}var dateModel,dateStr,dateIsSet={month:!1,day:!1,year:!1},vm=scope.DateCtrl;scope.lang=$rootScope.lang,$el.addClass("adp-date"),initModel(),vm.updateSelectedDatePart=function(part,value){dateIsSet[part]=!0,updateDateModelPart(part,value),setDaysInMonth(),updateDateModel()}};return{link:link,restrict:"E",require:"?ngModel",scope:{numYearsToInclude:"@",numYearsToSubtractFromToday:"@",numYearsToAddToToday:"@",obfuscateYear:"@",yearsDescending:"@",showFieldLabels:"@",abbreviateMonths:"@",required:"@?"},templateUrl:"ext/framework/views/date-directive.html",bindToController:!0,controllerAs:"DateCtrl",controller:[function(){var years,vm=this,now=moment().year(),include=vm.numYearsToInclude||10,subtract=!vm.numYearsToAddToToday&&parseInt(vm.numYearsToSubtractFromToday||0,10)||0,add=!vm.numYearsToSubtractFromToday&&parseInt(vm.numYearsToAddToToday||0,10)||0,months="true"===vm.abbreviateMonths&&moment.monthsShort()||moment.months(),days=_.range(1,32),minYear=now-(include-1),maxYear=now+1-subtract+add,diff=maxYear-minYear;diff<include&&("true"===vm.yearsDescending?minYear-=include-diff:maxYear+=include-diff),years=_.range(minYear,maxYear),years="true"===vm.yearsDescending&&years.reverse()||years,vm.months=months,vm.days=days,vm.years=years,vm.monthsModel={selected:""},vm.daysModel={selected:""},vm.yearsModel={selected:""},vm.required=void 0!==vm.required||void 0}]}}]),function(){function FilterCtrl($scope,$rootScope){var vm=this;vm.searchValue="",vm.clearSearch=function(){vm.searchValue=""},vm.clearFilter=function(){vm.searchValue="",$rootScope.$broadcast("clear-filter")},$scope.$watch(function(scope){return scope.filterCtrl.searchValue},function(newValue){$scope.searchModel=newValue})}function FilterDirective($language){function link(scope,element,attr){function getBoolValue(value,def){return"number"==typeof value?value>0:"string"==typeof value?"true"===value.toLowerCase():"boolean"==typeof value?value:def}var vm=scope.filterCtrl;vm.hasSearch=getBoolValue(scope.hasSearch,!1),vm.hasSearchIcon=getBoolValue(scope.hasSearchIcon,!0),vm.filterTitle=$language.get("shared.FILTERS"),vm.filterClear=$language.get("shared.FILTER_CLEAR_ALL"),vm.filterSearchPlaceholder=attr.placeholder||$language.get("framework.SEARCH_SITE")}return{restrict:"E",transclude:!0,templateUrl:"ext/framework/views/filter-directive.html",link:link,scope:{searchModel:"=?",hasSearch:"@?",hasSearchIcon:"@?"},controller:"redbox.framework.directives.AdpFilterCtrl",controllerAs:"filterCtrl"}}function FilterGroupDirective($language){function link(scope,element,attr){function getIcon(icon){return icon?_.startsWith(icon,"fa-")||_.startsWith(icon,"adp-")?"fa "+icon:"fa fa-"+icon:"fa fa-th-list"}function processModel(){angular.isArray(scope.model)&&angular.forEach(scope.model,function(item){angular.isUndefined(item.active)&&(item.active=!1),item.name||(item.label?scope.modelProperty="label":item.title&&(scope.modelProperty="title"))})}scope.tagControl="adp-filter-group",scope.iconClass=getIcon(scope.icon),scope.expanded=!scope.startCollapsed||!scope.collapsable||!scope.startCollapsed,scope.modelProperty="name",scope.showMore=!1,scope.moreText=$language.get("shared.MORE"),scope.closeText=$language.get("shared.CLOSE"),scope.expandFilter=function(){scope.expanded=!scope.expanded},scope.changeExpandItems=function(){scope.showMore=!scope.showMore},function(){scope.model&&processModel()}()}return{restrict:"E",transclude:!0,templateUrl:"ext/framework/views/filter-group-directive.html",link:link,scope:{title:"@",id:"@",model:"=?",multiSelect:"=?",icon:"@?",collapsable:"=?",startCollapsed:"=?",limit:"=?"}}}function FilterItemCtrl($scope,$rootScope){var vm=this;$scope.$on("clear-filter",function(event,groupId){(groupId&&groupId===$scope.groupId||!groupId)&&($scope.model=!1)}),vm.changeActive=function(){vm.multiSelect||$scope.model||$rootScope.$broadcast("clear-filter",$scope.groupId),$scope.model=!$scope.model},function(){for(var parent=$scope.$parent;(!parent.tagControl||"adp-filter-group"!==parent.tagControl)&&parent.$parent;)parent=parent.$parent;vm.multiSelect=parent.multiSelect||!1}()}function FilterItemDirective(){return{restrict:"E",transclude:!0,templateUrl:"ext/framework/views/filter-item-directive.html",controller:"redbox.framework.directives.AdpFilterItemCtrl",controllerAs:"filterItemCtrl",scope:{model:"=",groupId:"@bindToGroup"}}}angular.module("redbox.framework.directives").controller("redbox.framework.directives.AdpFilterCtrl",FilterCtrl).directive("adpFilter",FilterDirective).directive("adpFilterGroup",FilterGroupDirective).controller("redbox.framework.directives.AdpFilterItemCtrl",FilterItemCtrl).directive("adpFilterItem",FilterItemDirective),FilterCtrl.$inject=["$scope","$rootScope"],FilterDirective.$inject=["$language"],FilterGroupDirective.$inject=["$language"],FilterItemCtrl.$inject=["$scope","$rootScope"],FilterItemDirective.$inject=[]}(),angular.module("redbox.framework.directives").directive("adpPicture",["redbox.ext.shared.services.ProfileService","redbox.ext.shared.services.UserIdentityService","redbox.shared.services.StaticUrlService","redbox.shared.services.ImpersonationService",function(ProfileService,UserIdentity,StaticUrlService,ImpersonationService){var link=function(scope,element,attr){function setImage(url){var image=new window.Image;$(image).load(function(){element.css("background-image","url("+url+")"),element.find(".initials").addClass("invisible")}).error(function(){showInitials()}).attr("src",url)}function setCssClasses(){var mainClass;switch(scope.size){case"md":case"medium":mainClass="adp-icon-picture-md";break;case"lg":case"large":mainClass="adp-icon-picture-lg";break;case"xl":case"x-large":mainClass="adp-icon-picture-xl";break;default:mainClass="adp-icon-picture-sm"}switch(scope.border){case void 0:break;case"medium":mainClass+=" border-medium";break;case"dark":mainClass+=" border-dark";break;case"light":mainClass+=" border-light";break;case"true":mainClass+=" border-medium"}"true"===scope.borderOutset&&(mainClass+=" outset"),scope.mainClass=mainClass}function showInitials(){element.css("background-image","none"),element.find(".initials").removeClass("invisible")}function showSilhouette(){setImage(StaticUrlService.format("app/framework/img/silhouette-profile.jpg"))}function getInitials(name){var strArr,abbr="";try{strArr=name.split(" "),abbr=strArr[0][0]+(strArr.length>1?strArr[strArr.length-1][0]:"")}catch(e){abbr="??"}return abbr}var isLoggedInUser=!1;scope.id=attr.id||"",scope.size=attr.size||"sm",scope.url=attr.url||void 0,scope.name=attr.name||"",scope.group="true"===attr.group,scope.aoid=attr.aoid||void 0,scope.title=attr.name||"",scope.setImage=setImage,scope.deferred=!!attr.deferred,setCssClasses(),scope.group&&(scope.url=StaticUrlService.format("app/framework/img/group_icon_white.png"),setImage(scope.url)),scope.$on("adp-picture.change-image",function(e,data){scope.aoid===data.aoid&&(scope.url=data.url,setImage(scope.url))}),scope.$on("adp-picture.remove-image",function(e,data){scope.aoid===data.aoid&&(scope.url="",element.css("background-image","none"),isLoggedInUser?showSilhouette():showInitials())}),attr.$observe("border",function(value){scope.border=value,setCssClasses()}),attr.$observe("borderOutset",function(value){scope.borderOutset=value,setCssClasses()}),attr.$observe("url",function(value){scope.url=value,scope.url&&scope.url.length>0&&setImage(scope.url)}),attr.$observe("name",function(value){value&&value.length>0&&(scope.name=value,scope.initials=getInitials(scope.name),scope.aoid||showInitials())}),attr.$observe("jobTitle",function(value){value&&value.length>0&&(scope.jobTitle=value)}),attr.$observe("aoid",function(value){value&&value.length>0&&UserIdentity.getAoid().then(function(aoid){isLoggedInUser=aoid===value,scope.deferred||ProfileService.getProfileForAssociate(value).then(function(profile){!scope.name&&profile&&profile.name&&(scope.name=profile.name.formatted,scope.initials=getInitials(scope.name)),profile&&profile.images&&profile.images.profile?setImage(ImpersonationService.addActingSessionIdParamSync(profile.images.profile.binaryHref)):isLoggedInUser?showSilhouette():showInitials()},function(){isLoggedInUser?showSilhouette():showInitials()}),scope.aoid=value})})};return{link:link,templateUrl:"ext/framework/views/icon-picture-directive.html",restrict:"E",scope:{content:"=",border:"@?",borderOutset:"@?"},replace:!0}}]),angular.module("redbox.framework.directives").directive("adpIconStack",[function(){var link=function(scope,element,attr){function getOpacity(opacity){var opacityNumber=1;return opacity?(opacity.indexOf("%")>0?(opacity=opacity.replace("%",""),opacityNumber=parseFloat(opacity)/100):opacityNumber=parseFloat(opacity),opacityNumber):opacityNumber}function getIconColor(color,type){return"solid"===type?"fa-inverse":color}function getColor(color){return/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/i.test(color)?color:null}function getType(type){return"solid"===type?"fa fa-circle":"fa fa-circle-thin adp-icon-stack-ring"}function getStackIcon(icon,type,iconColor,iconSize){var cardCls="adp-icon-stack-sm";if(iconSize)switch(iconSize.toLowerCase()){case"sm":cardCls="adp-icon-stack-sm";break;case"md":cardCls="adp-icon-stack-md";break;case"lg":cardCls="adp-icon-stack-lg"}return""!==icon&&(icon=icon.indexOf("adp-")>-1||icon.indexOf("fa-")>-1?"fa "+icon:"fa fa-"+icon,icon=icon+" "+cardCls+" "+iconColor),icon}scope.iconSize=attr.iconSize,scope.backgroundColor=attr.backgroundColor||attr.color||"brand-primary-color",scope.iconColor=attr.iconColor||getIconColor(attr.color,attr.type),scope.color=getColor(attr.color),scope.opacity=getOpacity(attr.opacity),scope.type=attr.type,scope.icon=getStackIcon(attr.icon,scope.type,scope.iconColor,scope.iconSize),scope.container=getType(attr.type)};return{link:link,templateUrl:"ext/framework/views/icon-stack-directive.html",restrict:"E",scope:{},replace:!0}}]),function(){function adpIeBanner(IEBannerService){function IeAlertBannerCtrl(){var vm=this;vm.isIeBannerVisible=IEBannerService.getIsIeBannerVisible(),vm.isUsingUnsupportedIeVersion=IEBannerService.getIsUsingUnsupportedIeVersion(),vm.ieAccordion={isOpen:!1},vm.bannerClick=function(){IEBannerService.setIsIeBannerVisible(!1),vm.isIeBannerVisible=IEBannerService.getIsIeBannerVisible()}}return{restrict:"E",replace:!0,templateUrl:"ext/framework/views/ie-banner.html",controller:IeAlertBannerCtrl,controllerAs:"bannerCtrl",bindToController:!0}}angular.module("redbox.framework.directives").directive("adpIeBanner",adpIeBanner),adpIeBanner.$inject=["redbox.shared.services.IEBannerService"]}(),angular.module("redbox.framework.directives").directive("adpImageCrop",["$document",function(){return{restrict:"A",replace:!0,link:function(scope,element,attrs){var imageUrl=attrs.image||"",scale=attrs.zoom||100,originalScale=attrs.zoom,allowEditing=!0,hasImage=!1,imageX=0,imageY=0,LINE_WIDTH=6,LINE_COLOR_DARK="#086274",LINE_COLOR_LIGHT="#1e92af",clip={x:10,y:10,w:125,h:125},draggingCrop=!1,draggingImage=!1,canvas=element[0],context=canvas.getContext("2d"),image=new window.Image;image.src=imageUrl,image.onload=function(){scale=originalScale;var diffWidth=image.width*(.01*scale)-image.width,diffHeight=image.height*(.01*scale)-image.height;imageX=canvas.width/2-image.width*(.01*scale)/2,imageY=canvas.height/2-image.height*(.01*scale)/2,clip.x=(2*imageX+image.width*(.01*scale))/2-clip.w/2,clip.y=(2*imageY+image.height*(.01*scale))/2-clip.h/2,imageX+=diffWidth/2,imageY+=diffHeight/2,methods.draw(!0),hasImage=!0,scope.$emit("adp-image-crop.dirty")},imageUrl&&""!==imageUrl||(clip.x=canvas.width/2-clip.w/2,clip.y=canvas.height/2-clip.h/2),attrs.$observe("image",function(value){value&&value.length>0&&(image.src=value)});var mouseX=0,mouseY=0,mouseInCrop=!1;$(element).on("mousemove touchmove",function(event){event.stopPropagation();var e=event;e.originalEvent.targetTouches&&(e=e.originalEvent.targetTouches[0]),void 0===e.offsetX&&(e.offsetX=e.pageX-$(canvas).offset().left,e.offsetY=e.pageY-$(canvas).offset().top),e.offsetX>=clip.x&&e.offsetX<=clip.x+clip.w&&e.offsetY>=clip.y&&e.offsetY<=clip.y+clip.h?(mouseInCrop=!0,methods.draw(!0)):(mouseInCrop=!1,methods.draw(!0))}),$(canvas).on("mouseleave",function(){mouseInCrop=!1,methods.draw(!0)}),$(element).on("mousedown touchstart",function(event){event.stopPropagation();var e=event;e.originalEvent.targetTouches&&(e=e.originalEvent.targetTouches[0]),void 0===e.offsetX&&(e.offsetX=e.pageX-$(canvas).offset().left,e.offsetY=e.pageY-$(canvas).offset().top),e.offsetX>=clip.x&&e.offsetX<=clip.x+clip.w&&e.offsetY>=clip.y&&e.offsetY<=clip.y+clip.h?(draggingCrop=!0,mouseX=e.offsetX-clip.x,mouseY=e.offsetY-clip.y):(draggingImage=!0,mouseX=e.offsetX-imageX,mouseY=e.offsetY-imageY)}),$(element).on("mouseup",function(e){e.stopPropagation(),draggingCrop=!1,draggingImage=!1}),$(element).on("mousemove touchmove",function(event){var e=event;if(e.originalEvent.targetTouches&&(e=e.originalEvent.targetTouches[0]),void 0===e.offsetX&&(e.offsetX=e.pageX-$(canvas).offset().left,e.offsetY=e.pageY-$(canvas).offset().top),draggingCrop){var cropDiffX=e.offsetX-clip.x,cropDiffY=e.offsetY-clip.y;clip.x=clip.x+cropDiffX-mouseX,clip.y=clip.y+cropDiffY-mouseY,methods.draw(!0),hasImage&&scope.$emit("adp-image-crop.dirty")}if(draggingImage){var imageDiffX=e.offsetX-imageX,imageDiffY=e.offsetY-imageY;imageX=imageX+imageDiffX-mouseX,imageY=imageY+imageDiffY-mouseY,methods.draw(!0)}}),attrs.$observe("zoom",function(zoom){scale=zoom,methods.draw(!0),hasImage&&scope.$emit("adp-image-crop.dirty")}),scope.$on("adp-image-crop.crop",function(){methods.crop()}),scope.$on("adp-image-crop.allowEditing",function(event,data){methods.allowEditing(data)});var methods={draw:function(drawCropCircle){if(allowEditing){context.clearRect(0,0,canvas.width,canvas.height),context.save();var diffWidth=image.width*(.01*scale)-image.width,diffHeight=image.height*(.01*scale)-image.height;context.drawImage(image,imageX-diffWidth/2,imageY-diffHeight/2,image.width*(.01*scale),image.height*(.01*scale)),context.restore(),drawCropCircle&&(context.save(),context.beginPath(),context.arc(clip.x+clip.w/2,clip.y+clip.h/2,clip.w/2,0,2*Math.PI,!1),context.lineWidth=LINE_WIDTH,mouseInCrop?context.strokeStyle=LINE_COLOR_LIGHT:context.strokeStyle=LINE_COLOR_DARK,context.stroke(),context.restore())}},crop:function(){if(allowEditing){this.draw(!1);var imageData=context.getImageData(clip.x,clip.y,clip.w,clip.h),cropCanvas=document.createElement("canvas");cropCanvas.width=clip.w,cropCanvas.height=clip.h;var cropContext=cropCanvas.getContext("2d");cropContext.putImageData(imageData,0,0),scope.$emit("adp-image-crop.image",cropCanvas.toDataURL())}},allowEditing:function(value){allowEditing=!!value}}}}}]),function(){function adpImage(staticUrlService,impersonationService){function link($scope,$element,$attrs){var dataImageRegex=/^data:image/,url=dataImageRegex.test($attrs.imgSrc)?$attrs.imgSrc:staticUrlService.format($attrs.imgSrc);url.indexOf("/bin")>-1?$scope.src=impersonationService.addActingSessionIdParamSync(url):$scope.src=url,$element.removeAttr("data-img-src")}return{restrict:"E",replace:!0,scope:{src:"@"},template:'<img data-ng-src="{{src}}"/>',link:link}}angular.module("redbox.framework.directives").directive("adpImage",adpImage),adpImage.$inject=["redbox.shared.services.StaticUrlService","redbox.shared.services.ImpersonationService"]}(),function(){function adpImageFileSelector(){function imageFileSelectController($scope,$language,$timeout,$http,$q,imageUtilsService,IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS,allowedFileExtensions,loggerFactory){function setupChangeDetectionForModernBrowsers(){vm.isFileReaderApiSupported&&$timeout(function(){$(selectorDirectiveNode).on("change",SELECTOR_FILE_INPUT_ELEMENT,onModernBrowserFileSelectionChange),$scope.$on("$destroy",function(){$(selectorDirectiveNode).off("change",SELECTOR_FILE_INPUT_ELEMENT,onModernBrowserFileSelectionChange)})})}function delegateFnValidation(){function complainFunction(){logger.error("delegateFnValidation - missing required delegate function: SET_SELECTED_IMAGE_ENCODED_STR")}var requiredDelegateFn=parentCtrlDelegates[IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.SET_SELECTED_IMAGE_ENCODED_STR];requiredDelegateFn&&angular.isFunction(requiredDelegateFn)||(parentCtrlDelegates[IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.SET_SELECTED_IMAGE_ENCODED_STR]=complainFunction,complainFunction())}function getUiButtonTextLabel(){return uploadLinkLabel||(uploadLinkLabel=$language.get("shared.UPLOAD")),uploadLinkLabel}function openModernBrowserFileSelectionDialog(){logger.debug("openModernBrowserFileSelectionDialog"),vm.showUploadError=!1,angular.element(SELECTOR_FILE_INPUT_ELEMENT)[0].click()}function onModernBrowserFileSelectionChange(evt){var errorMessage,selectedFile=evt.target.files[0];logger.debug("onModernBrowserFileSelectionChange - selectedFile = ",selectedFile),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.INITIATE_IMAGE_SELECTION),errorMessage=vm.documents?imageUtilsService.validateFileForUpload(selectedFile,vm.maxFileSize):imageUtilsService.validateImageForUpload(selectedFile,vm.imageId),showErrorAlertWithMessage(errorMessage)||vm.convertBase64!==!0?showErrorAlertWithMessage(errorMessage)||vm.convertBase64!==!1||(callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.GET_SELECTED_FILE_OBJ,selectedFile),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.GET_SELECTED_FILE_NAME,selectedFile.name),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.GET_SELECTED_FILE_TYPE,selectedFile.type)):imageUtilsService.getBase64ImageUrlFromBrowserFileObj(selectedFile).then(function(base64ImageStr){logger.debug("onModernBrowserFileSelectionChange.getBase64ImageUrlFromBrowserFileObj length = ",base64ImageStr.length),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.SET_SELECTED_IMAGE_ENCODED_STR,base64ImageStr),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.GET_SELECTED_FILE_NAME,selectedFile.name),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.GET_SELECTED_FILE_TYPE,selectedFile.type),vm.base64ImgUrl=base64ImageStr}).catch(function(errorObj){logger.debug("onModernBrowserFileSelectionChange.getBase64ImageUrlFromBrowserFileObj error = ",errorObj),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.ERROR_HANDLER,errorObj.msg)})}function onIE9FileSelectionChange(){function ie9uploadErrorHandler(label,error){var isUsingIE9=!0,genericErrorMsg=$language.get("shared.OOPS_TRYAGAIN");logger.error(label+" error: ",JSON.stringify(error)),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.ERROR_HANDLER,genericErrorMsg,isUsingIE9)}function parseStringifiedImgObjFromXhrRspStr(responseString){var openBracketIdx,closeBracketIdx,resultLen,objectStr,parsedImageObj=null;try{logger.debug("parseStringifiedImgObjFromXhrRspStr - responseString.length = ",responseString.length),closeBracketIdx=responseString.lastIndexOf("}"),openBracketIdx=responseString.indexOf("{"),resultLen=closeBracketIdx-openBracketIdx+1,objectStr=responseString.substr(openBracketIdx,resultLen),parsedImageObj=JSON.parse(objectStr)}catch(error){logger.error("parseStringifiedImgObjFromXhrRspStr - responseString = ",responseString),logger.error("parseStringifiedImgObjFromXhrRspStr - exception = ",error)}return parsedImageObj}var errorMessage,fileUploadPath=document.getElementById("temp").value;callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.INITIATE_IMAGE_SELECTION),errorMessage=imageUtilsService.validateImageForUpload(fileUploadPath,vm.imageId),showErrorAlertWithMessage(errorMessage)||$("#ie9-form").ajaxSubmit({timeout:2e4,resetForm:!0,success:function(responseString){logger.debug("response",responseString);var imageObj,base64ImageStr;try{imageObj=parseStringifiedImgObjFromXhrRspStr(responseString),base64ImageStr=imageUtilsService.getBase64ImageUrlFromContentAndType(imageObj.contentType,imageObj.content),callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.SET_SELECTED_IMAGE_ENCODED_STR,base64ImageStr),vm.base64ImgUrl=base64ImageStr}catch(error){ie9uploadErrorHandler("ie9uploadErrorHandler.ajaxSubmit.successHandler.exception",error)}},uploadProgress:function(event,position,total,percentComplete){logger.debug(percentComplete+"% complete")},error:function(error){ie9uploadErrorHandler("onIE9FileSelectionChange.ajaxSubmit.error",error)}})}function showErrorAlertWithMessage(errorMessage){var hasError=!1;return errorMessage&&errorMessage.length>0&&(hasError=!0,callParentCtrlDelegate(IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS.ERROR_HANDLER,errorMessage)),hasError}function callParentCtrlDelegate(funcId){var args;angular.isString(funcId)&&parentCtrlDelegates[funcId]&&angular.isFunction(parentCtrlDelegates[funcId])&&(args=Array.prototype.slice.call(arguments,1),parentCtrlDelegates[funcId].apply(this,args))}var logger=loggerFactory.getLogger("redbox.framework.directives.adpImageFileSelector"),vm=this,API_ROUTE_IE9_MULTIPART_IFRAME_POST="/redboxapi/core/tools/v1/formToBase64",selectorDirectiveNode="div.adp-file-selector",SELECTOR_FILE_INPUT_ELEMENT="input.hidden-file-input",parentCtrlDelegates=vm.controllerDelegates(),uploadLinkLabel=null;$scope.onIE9FileSelectionChange=onIE9FileSelectionChange,vm.openModernBrowserFileSelectionDialog=openModernBrowserFileSelectionDialog,vm.getUiButtonTextLabel=getUiButtonTextLabel,vm.docFileExtionsList=allowedFileExtensions.documents,vm.nodeId="id"+(new Date).getTime(),vm.iframeMultipartPostAction=API_ROUTE_IE9_MULTIPART_IFRAME_POST,vm.isFileReaderApiSupported=imageUtilsService.isModernBrowserWithFileAPIs,function(){selectorDirectiveNode="#"+vm.nodeId,delegateFnValidation(),setupChangeDetectionForModernBrowsers()}()}return imageFileSelectController.$inject=["$scope","$language","$timeout","$http","$q","redbox.shared.utils.ImageUtils","redbox.shared.utils.IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS","redbox.shared.constants.AllowedUploadableFileExtensionsConstant","adp.ng.logging.LoggerFactory"],{restrict:"E",replace:!0,transclude:!0,scope:{imageId:"@",controllerDelegates:"&"},controller:imageFileSelectController,controllerAs:"imageFileSelectCtrl",link:function(scope,elem,attr,ctrl,$transclude){ctrl.uiButtonActionType=attr.uiButtonActionType||"upload",ctrl.uiButtonTextLabel=attr.uiButtonTextLabel||ctrl.getUiButtonTextLabel(),ctrl.documents="true"===attr.documents,ctrl.convertBase64="false"!==attr.convertBase64,ctrl.allowedFileExtensions="image/*",ctrl.maxFileSize=attr.maxFileSize?parseInt(attr.maxFileSize):5,ctrl.documents&&ctrl.docFileExtionsList.forEach(function(value,index){ctrl.allowedFileExtensions=ctrl.allowedFileExtensions+",application/"+ctrl.docFileExtionsList[index]}),$transclude(function(clone){function hasTranscludedContent(cloneObj){return cloneObj&&cloneObj.length>0&&(cloneObj.length>1||cloneObj[0].outerHTML||cloneObj.text().trim().length>0)}ctrl.hasTranscludedContent=hasTranscludedContent(clone)})},bindToController:!0,templateUrl:"ext/framework/views/image-file-selector-directive.html"}}angular.module("redbox.framework.directives").constant("redbox.shared.utils.IMAGE_FILE_SELECT_DELEGATE_FUNCTIONS",{INITIATE_IMAGE_SELECTION:"initiateImageSelection",SET_SELECTED_IMAGE_ENCODED_STR:"setSelectedImageEncodedUrlStr",GET_SELECTED_IMAGE_FILE_NAME:"getSelectedImageFileName",GET_SELECTED_FILE_NAME:"getSelectedFileName",GET_SELECTED_FILE_OBJ:"getSelectedFileObj",GET_SELECTED_FILE_TYPE:"getSelectedFileType",ERROR_HANDLER:"imageSelectionErrorHandler"}).directive("adpImageFileSelector",adpImageFileSelector)}(),angular.module("redbox.framework.directives").directive("adpMiniMe",["$language",function($language){return{restrict:"EA",scope:{aoid:"=",name:"=",size:"=?"},templateUrl:"app/framework/views/mini-me.html",link:function(scope,elem,attrs){scope.size=attrs.size||"small",scope.defaultName=$language.get("framework.MENU_HEADER_LABEL"),scope.hideIcon=attrs.hideIcon||!1}}}]),angular.module("redbox.framework.directives").directive("adpNaturalForm",["$compile","$rootScope",function($compile,$rootScope){var link=function(scope,$el,attr,ctrl){function parse(){var parts=scope.data.text.split(delimiter),index=0;template+="</div>",angular.forEach(parts,function(part,idx){if(part.match(/\[([a-zA-Z]+)\]/)){var option,optionId=part.replace("[","").replace("]","");if(angular.forEach(scope.data.options,function(_option,_index){_option.id===optionId&&(option=_option)}),"select"===option.type){var temp2=angular.copy(option);temp2.value=temp2.list[temp2.value].label,scope.editValues.push(temp2),template+=createSelectTemplate(temp2.value,option.id,temp2,index++)}else scope.editValues.push(option),template+=createTextTemplate(option.value,option.id,index++)}else template+=part}),template+='<div><div class="nl-form-length-valid" data-ng-show="!maxLengthExceeded">{{formLength}}</div>',template+='<div class="nl-form-length-invalid" data-ng-show="maxLengthExceeded">{{formLength}}</div></div>'}function createTextTemplate(text,option,index){var temp="<span class=\"nl-form-option\" ng-click=\"changeOption($event, '[option]', [index], 'text')\" ";temp+='data-ng-show="showEdit !== [index]">[text]</span>',temp+='<input name="text[index]" ng-required="true" adp-textbox="text" alternate="true"',temp+='data-ng-show="showEdit === [index]" data-ng-model="editValues[[index]].value" ',temp+='adp-click-outside="saveCurrentOption()" unless-contains-class="nl-form-option" click-index="[index]" ',temp+='ng-keyup="calculateFormLength(editValues[[index]].value);" />';var t=temp.replace(/\[option\]/g,option).replace(/\[index\]/g,index).replace(/\[text\]/g,_.escape(text));return t}function createSelectTemplate(text,option,select,index){ctrl.scope.select.list=select.list,ctrl.scope.editValues=scope.editValues;var temp='<span class="nl-form-option" data-ng-show="showEdit !== [index]" ';temp+="ng-click=\"changeOption($event, '[option]', [index], 'select')\">[text]</span>",temp+='<ui-select adp-alternate="true" ng-change="calculateFormLength(editValues[[index]].value)" ',temp+='adp-click-outside="saveCurrentOption()" unless-contains-class="nl-form-option" click-index="[index]" ',temp+='ng-model="editValues[[index]].value" data-ng-show="showEdit === [index]">',temp+='<ui-select-match placeholder="{{select.list.selected}}">{{$select.selected.label}}</ui-select-match>',temp+='<ui-select-choices repeat="item.label as item in select.list">',temp+='<a href="#">{{item.label}}</a>',temp+="</ui-select-choices>",temp+="</ui-select>";var t=temp.replace(/\[option\]/g,option).replace(/\[index\]/g,index).replace(/\[text\]/g,_.escape(text));return t}function hasChanges(currentText){var originalText=scope.originalData.readForm();return originalText!==currentText}var form,typeMaxLengths={whatIDo:140},delimiter="//",template='<div class="nl-parent">',textType="text",selectedOption={};scope.data&&scope.data.text&&scope.data.text.length>0&&(scope.showEdit=-1,scope.editValues=[],scope.originalData=angular.copy(scope.data),parse(),form=$compile(angular.element(template))(scope),$el.append(form),scope.formLength=typeMaxLengths[scope.data.type]-scope.data.readForm().length,scope.maxLengthExceeded=scope.formLength<0),scope.$watch("formLength",function(){scope.maxLengthExceeded=scope.formLength<0,$rootScope.$broadcast("form-max-length-update",[scope.data.type,scope.maxLengthExceeded])}),scope.calculateFormLength=function(value){var maxLength=typeMaxLengths[scope.data.type],text=value||"",currentText=scope.data.readFormOnTheFly(selectedOption.option,text);scope.formLength=maxLength-currentText.length,$rootScope.$broadcast("form-has-changes",[scope.data.type,hasChanges(currentText)])},scope.changeOption=function(obj,option,index,type){scope.showEdit>-1&&!scope.maxLengthExceeded&&(selectedOption.type===textType?scope.saveText(scope.showEdit):scope.saveSelect(scope.showEdit)),scope.maxLengthExceeded||(selectedOption.target=obj.target,selectedOption.option=option,selectedOption.type=type,scope.showEdit=index)},scope.saveCurrentOption=function(){selectedOption.type&&scope.showEdit>-1&&!scope.maxLengthExceeded&&(selectedOption.type===textType?scope.saveText(scope.showEdit):scope.saveSelect(scope.showEdit))},scope.saveText=function(index){selectedOption.target.innerHTML=_.escape(scope.editValues[index].value),scope.data.options[index].value=scope.editValues[index].value,scope.showEdit=-1,scope.changeCallback&&scope.changeCallback({value:scope.data})},scope.cancelText=function(index){scope.editValues[index].value=scope.data.options[index].value,scope.showEdit=-1,scope.formLength=typeMaxLengths[scope.data.type]-scope.data.readForm().length},scope.saveSelect=function(index){selectedOption.target.innerHTML=scope.editValues[index].value,angular.forEach(scope.editValues[index].list,function(item){if(item.label===scope.editValues[index].value){var selectedIndex=0;angular.forEach(scope.data.options,function(_option,_index){_option.id===selectedOption.option&&(selectedIndex=_index)}),scope.data.options[selectedIndex].value=item.value}}),scope.showEdit=-1,scope.changeCallback&&scope.changeCallback({value:scope.data})},scope.cancelSelect=function(){scope.showEdit=-1,scope.formLength=typeMaxLengths[scope.data.type]-scope.data.readForm().length},scope.$on("adp-natural-form.close-text-edit",function(){scope.showEdit=-1}),scope.$on("adp-natural-form.close-select-edit",function(){scope.showEdit=-1})};return{link:link,restrict:"E",controller:["$scope",function($scope){$scope.select={list:[]},$scope.editValues={},this.scope=$scope}],scope:{data:"=formData",changeCallback:"&"}}}]),angular.module("redbox.framework.directives").directive("adpPagination",["$compile",function($compile){var link=function(scope,elem,attr){scope.$watch(function(){return attr},function(){if(attr.hasOwnProperty("listData")&&attr.listData>1){var template=parse(),pagination=$compile(angular.element(template))(scope);elem.append(pagination)}});var parse=function(){for(var template='<div class="pager-icons">',i=0;i<attr.listData;i++)template+='<div class="page-icon-wrapper">',
template+='<i class="fa fa-circle page-icon" ',template+="  data-ng-class=\"{'page-icon-active': "+attr.bulletActiveIf.replace("$index",i)+'}" ',template+='  data-ng-click="'+attr.bulletClick.replace("$index",i)+'"></i></div>';return template+="</div>"}};return{link:link,restrict:"E"}}]),angular.module("redbox.framework.directives").controller("redbox.framework.directives.PictureRingCtrl",["$location","redbox.framework.directives.PictureRingConstants",function($location,constants){function setRingStyle(){var itemsLength=vm.items.length;return itemsLength<constants.MIN?constants.CLASS_PREFIX+constants.MIN+" "+vm.size:itemsLength>constants.MAX?constants.CLASS_PREFIX+constants.MAX+" "+vm.size:constants.CLASS_PREFIX+itemsLength+" "+vm.size}function openProfile(aoid){$location.path(constants.PROFILE_PREFIX+aoid)}function setDefault(property,value){void 0===vm[property]&&(vm[property]=value)}var vm=this;angular.extend(vm,{max:constants.MAX,setRingStyle:setRingStyle,openProfile:openProfile}),setDefault("linkToProfile",!0),setDefault("showLabel",!0),setDefault("size","md")}]).directive("adpPictureRing",[function(){return{controller:"redbox.framework.directives.PictureRingCtrl",controllerAs:"PictureRingCtrl",bindToController:!0,restrict:"E",scope:{linkToProfile:"=?",items:"=",label:"@?",showLabel:"=?",size:"=?"},templateUrl:"ext/framework/views/picture-ring.html",link:function(scope,element){}}}]).constant("redbox.framework.directives.PictureRingConstants",{CLASS_PREFIX:"set-of-",MIN:3,MAX:6,PROFILE_PREFIX:"/profile/"}),function(){angular.module("redbox.framework.directives").controller("redbox.framework.directives.PopoverLinksCtrl",["$scope",function($scope){var vm=this;vm.popoverID=_.uniqueId("popover-links-"),$scope.$on("$destroy",function(){$("."+vm.popoverID).remove()})}]),angular.module("redbox.framework.directives").directive("adpPopoverLinks",[function(){return{restrict:"AE",scope:!0,transclude:!0,controller:"redbox.framework.directives.PopoverLinksCtrl",controllerAs:"popoverLinksCtrl",templateUrl:"ext/framework/views/popover-links-directive.html",bindToController:!0}}])}(),function(){function adpProgressBar($timeout,$language){function link(scope,element){var progressBar=element[0].querySelector(".progress-bar"),counter=element[0].querySelector(".counter");scope.$watch(angular.bind(this,function(){return scope.adpProgressBarCtrl.progression}),function(value){scope.adpProgressBarCtrl.displayProgress(counter),progressBar.style.width=scope.adpProgressBarCtrl.getProgress(value).progressBar},!0)}function adpProgressBarCtrl(){var vm=this;vm.progressBarTypes={percentageProgress:"percentage",stepProgress:"steps",segmentedStepProgress:"segmented"},vm.isSegmented=vm.type===vm.progressBarTypes.segmentedStepProgress;var getColors=function(color){var colors={textColor:"brand-primary-color",barColor:"brand-primary-bgcolor"};return void 0!==color&&(colors.textColor=color,colors.barColor=color+"-bg"),colors};vm.colors=getColors(vm.color),vm.type===vm.progressBarTypes.percentageProgress&&(vm.progressVals={num:"",refreshInterval:"",duration:"",steps:"",step:"",countTo:"",value:"",increment:""}),vm.calculate=function(){vm.progressVals.refreshInterval=30,vm.progressVals.step=0,vm.progressVals.timoutId=null,vm.progressVals.countTo=parseInt(vm.progression)||0,vm.progressVals.value=vm.progressVals.num>0?vm.progressVals.num:0,vm.progressVals.duration=1500,vm.progressVals.steps=Math.ceil(vm.progressVals.duration/vm.progressVals.refreshInterval),vm.progressVals.increment=(vm.progressVals.countTo-vm.progressVals.value)/vm.progressVals.steps,vm.progressVals.num=vm.progressVals.value},vm.tick=function(element){vm.timoutId=$timeout(function(){vm.progressVals.num+=vm.progressVals.increment,vm.progressVals.step++,vm.progressVals.step>=vm.progressVals.steps?($timeout.cancel(vm.progressVals.timoutId),vm.progressVals.num=vm.progressVals.countTo,element.textContent=vm.progressVals.countTo+"%"):(element.textContent=Math.round(vm.progressVals.num)+"%",vm.tick(element))},vm.progressVals.refreshInterval)},vm.getNextStep=function(element){for(var i=0;i<vm.progression.length;i++)if(vm.type===vm.progressBarTypes.stepProgress)vm.progression[i].isCompleted===!1?vm.isCompleted=!1:(element&&(element.textContent=$language.get("shared.STEP")+" "+vm.getProgress(vm.progression).step+" "+$language.get("shared.OF")+" "+vm.progression.length),vm.isCompleted=!0);else if(vm.type===vm.progressBarTypes.segmentedStepProgress&&vm.progression[i].isCompleted===!0){var nextTaskIndex=i+1;nextTaskIndex<vm.progression.length?vm.currentStep=vm.progression[nextTaskIndex].name:vm.isCompleted=!0}},vm.getProgress=function(data){var progress={progressBar:data+"%"};if(vm.type===vm.progressBarTypes.stepProgress){var completed=0;angular.forEach(data,function(value){value.isCompleted===!0&&completed++}),progress={progressBar:completed/data.length*100+"%",step:completed}}return progress},vm.displayProgress=function(element){vm.type===vm.progressBarTypes.percentageProgress?(vm.calculate(),vm.tick(element)):vm.getNextStep(element)}}return{restrict:"E",replace:!0,scope:{type:"=",title:"=",progression:"=",completionMessage:"=?",color:"=?"},controllerAs:"adpProgressBarCtrl",bindToController:!0,templateUrl:"ext/framework/views/progress-bar.html",link:link,controller:adpProgressBarCtrl}}angular.module("redbox.framework.directives").directive("adpProgressBar",adpProgressBar),adpProgressBar.$inject=["$timeout","$language"]}(),angular.module("redbox.framework.directives").directive("adpShortName",[function(){return{scope:{name:"=",defaultName:"@"},template:'<div class="given-name">{{name.givenName}}</div><div class="family-name">{{name.familyInitial}}</div>',restrict:"E",link:function(scope){scope.$watch("name",function(){if(_.has(scope,"name.familyName")){var familyNames=scope.name.familyName.split(" ");scope.name.familyInitial=(_.map(familyNames,function(familyName){return _.head(familyName)}).join("")+".").slice(0,2)}else!_.has(scope,"name.givenName")&&scope.defaultName&&(scope.name={givenName:scope.defaultName})})}}}]),angular.module("redbox.framework.directives").controller("redbox.framework.directives.AdpTextEditorCtrl",["$element",function($element){var vm=this;vm.getCount=function(){return vm.charLimit&&vm.charLimit-$element.find("textarea")[0].value.length},vm.isOverCharLimit=function(){return vm.getCount()<=0}}]).directive("adpTextEditor",[function(){return{scope:{charLimit:"=",name:"@"},require:"ngModel",restrict:"E",controller:"redbox.framework.directives.AdpTextEditorCtrl",controllerAs:"adpTextEditorCtrl",bindToController:!0,templateUrl:"ext/framework/views/text-editor-directive.html",link:function(scope,el,attrs,ctrl){el.addClass("adp-text-editor"),scope.$watch(function(){return scope.textModel},function(newValue,oldValue){newValue!==oldValue&&ctrl.$setViewValue(newValue)}),scope.$watch(function(){return ctrl.$viewValue},function(newVal){void 0!==newVal&&(scope.textModel=newVal)})}}}]),angular.module("redbox.framework.directives").controller("redbox.framework.directives.TimelineCtrl",["$language",function($language){function addDay(event){return{isDayToday:event.isEventToday,isPast:event.eventDate.isBefore(vm.today,"day"),month:event.eventDate.month(event.eventDate.month()).format("MMM"),day:event.eventDate.date(),date:event.eventDate,events:[event]}}var vm=this,storedEvents=[],sortMethod="asc",currentFilter=null;vm.lang=$language,vm.years=[],vm.placeholder="",vm.init=function(events,sort,placeholder,showTodayNode,today){var _events=events||storedEvents,_sortMethod=sort||sortMethod;vm.years=[],vm.placeholder=placeholder,storedEvents=[],vm.today=today,showTodayNode&&vm.addEvent({eventDate:vm.today.startOf("day"),eventSort:"",isEventToday:!0},!1),vm.addEvents(_events),vm.sort(_sortMethod),currentFilter&&vm.filter(currentFilter)},vm.addEvents=function(events){angular.forEach(events,function(value){vm.addEvent(value)})},vm.addEvent=function(event,storeEvent){event.date=event.eventDate;var isDayAdded=!1,day=null;angular.forEach(vm.years,function(_year){event.eventDate.isSame(_year.date,"year")&&(_year.days.filter(function(_day){event.eventDate.isSame(_day.date,"day")&&(isDayAdded=!0,_day.events.push(event),day=_day)}),isDayAdded||(day=addDay(event),day.isPast&&(_year.isPast=!0),_year.days.push(day)))});var isYearAdded=!1;vm.years.filter(function(_year){event.eventDate.isSame(_year.date,"year")&&(isYearAdded=!0)}),isYearAdded||vm.years.push({year:event.eventDate.year(),date:event.eventDate,days:[addDay(event)]}),void 0!==storeEvent&&storeEvent!==!0||storedEvents.push(event)},vm.sort=function(sort){sortMethod=sort;var sortByDateAsc=function(lhs,rhs){return lhs.isEventToday?-1:rhs.isEventToday?1:lhs.date>rhs.date?1:lhs.date<rhs.date?-1:0},sortByDateDesc=function(lhs,rhs){return lhs.isEventToday?-1:rhs.isEventToday?1:lhs.date<rhs.date?1:lhs.date>rhs.date?-1:0},sortFunction="asc"===sortMethod?sortByDateAsc:sortByDateDesc;vm.years.sort(sortFunction),angular.forEach(vm.years,function(year){year.days.sort(sortFunction),angular.forEach(year.days,function(day){1===day.events.length?(day.events[0].placeholder="",day.events[0].placeholder=vm.placeholder):day.events=_.sortBy(day.events,"eventSort"),day.events[0].icon&&(day.icon=day.events[0].icon)})})},vm.filter=function(year){currentFilter=year,vm.years.filter(function(_year){_year.year===year&&(vm.years=[_year])})},vm.clearTimeline=function(){currentFilter=null,storedEvents=[],vm.years=[]}}]),angular.module("redbox.framework.directives").directive("adpTimeline",function(){return{restrict:"E",transclude:!0,replace:!0,require:["adpTimeline","ngModel"],controller:"redbox.framework.directives.TimelineCtrl",controllerAs:"$timeline",templateUrl:"ext/framework/views/timeline-directive.html",scope:{events:"=?events",api:"=?api",displayNav:"=?displayNav",onPreviousCallback:"=onPreviousCallback",onNextCallback:"=onNextCallback",sort:"@?sort",placeholder:"@?placeholder",showTodayNode:"@?showTodayNode",showExpandable:"@?showExpandable",today:"=?today"},compile:function(tElement,tAttrs){return{pre:function(scope,element,attrs,ctrls){var $timeline=ctrls[0],ngModel=ctrls[1];ngModel.$formatters.push(function(modelValue){return modelValue}),ngModel.$render=function(){ngModel.$viewValue&&ngModel.$viewValue.length>0?$timeline.init(ngModel.$viewValue,null,scope.placeholder,scope.showTodayNode,scope.today):ngModel.$viewValue&&0===ngModel.$viewValue.length&&$timeline.clearTimeline()},ngModel.$parsers.push(function(viewValue){return viewValue}),scope.sort=scope.sort||"asc",scope.placeholder=scope.placeholder||"",scope.displayNav=scope.displayNav||!1,scope.showTodayNode=scope.$eval(scope.showTodayNode)||!1,scope.today=scope.today||moment(),attrs.$observe("showTodayNode",function(){var newVal=scope.$eval(attrs.showTodayNode);scope.showTodayNode!==newVal&&ngModel.$viewValue&&ngModel.$viewValue.length>0&&(scope.showTodayNode=newVal,$timeline.init(ngModel.$viewValue,null,scope.placeholder,scope.showTodayNode,scope.today)),scope.showTodayNode=newVal}),scope.$watch("api",function(newVal){if(void 0!==newVal&&!newVal.hasOwnProperty("addEvent")){var api=scope.api;api.addEvent=function(event){$timeline.addEvent(event),$timeline.sort(scope.sort)},api.addEvents=function(events){$timeline.addEvents(events),$timeline.sort(scope.sort)},api.reloadTimeline=function(){$timeline.init(ngModel.$viewValue,null,scope.placeholder,scope.showTodayNode,scope.today)},api.clearTimeline=function(){$timeline.clearTimeline()},api.sortTimeline=function(sortMethod){$timeline.sort(sortMethod)},api.filterTimeline=function(year){$timeline.clearTimeline(),$timeline.init(ngModel.$viewValue,null,scope.placeholder,scope.showTodayNode,scope.today),$timeline.filter(year)},api.getYears=function(){return $timeline.years},api.hasOwnProperty("addEvent")&&api.hasOwnProperty("onReady")&&api.onReady.call()}})}}}}}),angular.module("redbox.framework.directives").directive("adpTimelineContent",["$language",function($language){return{require:"^adpTimeline",restrict:"E",replace:!0,transclude:!0,compile:function(tElement,tAttrs){return function(scope,element,attrs,ctrls,transcludeFn){transcludeFn(scope.$parent,function(clone){if(element.empty(),scope.$parent.event&&scope.$parent.event.isEventToday){var todayOutput="<span>"+$language.get("shared.TODAY")+"</span>";scope.$parent.event.placeholder&&""!==scope.$parent.event.placeholder&&(todayOutput+='<div class="today-placeholder">'+scope.$parent.event.placeholder+"</div>"),element.append('<div class="primary bolder uppercase">'+todayOutput+"</div>")}else element.append(clone)})}},template:"<ng-transclude></ng-transclude>"}}]),function(){function menuService($q,loggerFactory,impersonationService){function showMenu(){var deferred=$q.defer();return impersonationService.getSession().then(function(impersonationSession){impersonationSession&&impersonationSession.actingOnBehalfOf?(logger.debug("Admin menu not available during impersonation session"),deferred.resolve(!1)):deferred.resolve(!0)}).catch(function(){deferred.reject(!1)}),deferred.promise}var logger=loggerFactory.getLogger("redbox.framework.AdminMenuService");return{showMenu:showMenu}}angular.module("redbox.framework").factory("redbox.framework.AdminMenuService",menuService),menuService.$inject=["$q","adp.ng.logging.LoggerFactory","redbox.shared.services.ImpersonationService"]}(),function(){function appInitializerService($rootScope,$http,$q,$timeout,$language,$window,$urlRouter,$state,$analytics,appConstant,loggerFactory,userPermissionService,clientService,sessionStoreService,brandingService,templateService,onboardingService,userIdentityService,menuService,languageUtils,userPreferencesService,landingPageService,serverPingService,impersonationService,moduleBootstrapService,configService,runtimeInstanceConfigService,clientDeviceService,$adpModal,audioEyeService){function initialize(){var promises=[];logger.info("Beginning app initialization"),hideView(),configureRootScope(),configureModernizr(),configureHeaders(),startServerPing(),registerListeners(),removeTouchClickDelay(),logger.info("Base initialization complete."),promises.push(verifyClient()),promises.push(loadPermissions()),promises.push(getImpersonationSession()),$q.all(promises).then(moduleBootstrapService.init).then(configureGoogleAnalytics).then(configureSoftwareSettings).then(addClientAliasToCache).then(loadUserPreferences).then(applyBranding).then($language.resourceBundlesLoaded).then(showShell).then(enableRouter).then(goToLandingPage).catch(function(error){logger.error("App initialization failed",error),trackFailure(_.get(error,"message")),clientDeviceService.isNative()?applyBranding().then($language.resourceBundlesLoaded).then(showShell).then(enableRouter).then(function(){$state.go("mobileError").then(function(){showView(),$timeout(function(){MobileApp.readyApp()},500)}).catch(logger.error)}):sessionStoreService.logout(_.get(error,"code"))})}function configureHeaders(){logger.info("Configuring common headers"),$http.defaults.headers.common["Accept-Language"]=$language.getLocale().name,$rootScope.$on("$languageChangeSuccess",function(){$http.defaults.headers.common["Accept-Language"]=$language.getLocale().name}),impersonationService.addActingSessionIdHeaderSync()}function configureModernizr(){Modernizr.cssanimations&&Modernizr.csstransitions&&Modernizr.csstransforms3d&&Modernizr.csstransforms?$.setDisabledByDefault(!1):$.setDisabledByDefault(!0)}function verifyClient(){return logger.info("Retrieving client",clientService.getClient()),clientService.getClient().then(function(_client){return clientService.hasProductCode(_client,"RDBX")?void(client=_client):(logger.warn("Client does not have permission to redbox; they will be logged out."),$q.reject({message:"Client does not have permission to redbox",code:ERROR_UNAUTH}))}).catch(function(error){return logger.error("Error occurred verifying client permission to redbox",error),$q.reject({message:"/redboxapi/core/v1/client failed",code:ERROR_UNAUTH})})}function loadPermissions(){return logger.info("Retrieving user permissions"),userPermissionService.init().then(function(){logger.info("User permissions retrieved successfully")}).catch(function(error){return logger.error("Error occurred retrieving user permissions",error),clientDeviceService.isNative()||alert("Could not establish session. Logging out."),$q.reject({message:"/core/v1/user-profile failed"})})}function addClientAliasToCache(){logger.info("Add client alias to cache"),clientService.addAliasToCache(client.alias)}function hideView(){logger.info("Hiding view"),$(".stage").show().fadeOut(0)}function showView(){logger.info("Showing default view"),$(".stage").fadeIn(function(){$(this).addClass("show").removeAttr("style")})}function configureSoftwareSettings(){logger.info("Configuring redbox installation settings."),configService.getAll().then(function(configs){if(configs){var settings=_.pick(configs,function(value,key,object){return _.contains(["locale","countryDialing"],key)});logger.debug("Redbox installation settings: ",JSON.stringify(settings)),runtimeInstanceConfigService.setConfig(settings||{})}}).catch(function(e){logger.error("Error occurred while configuring redbox software settings",JSON.stringify(e))})}function configureGoogleAnalytics(){$window.ga&&(logger.info("Configuring GA. Retrieving user identity for Google Analytics tracking."),userIdentityService.getAoid().then(function(aoid){logger.info("User identity retrieved successfully. Setting up Google Analytics with aoid."),$window.ga("set","&uid",aoid)}).catch(function(error){logger.error("Error occurred retrieving user identity",JSON.stringify(error))}))}function configureRootScope(){logger.info("Configuring rootScope"),$rootScope.org={},$rootScope.apps=[],$rootScope.$state=$state,$rootScope.isWebView=MobileApp.isWebView()}function registerListeners(){function preventLocationAndStateChange(e,newUrl,oldUrl){if($rootScope.slideInCnt||$rootScope.modalCount)return e.preventDefault(),!1}var appTitle,headerItem,getHeaderValue=function(page){if(page&&page.length>0){var translateProperty="framework.MENU_"+page.replace(/\s+/g,"").toUpperCase(),translateValue=$language.get(translateProperty);return translateValue}return""};logger.info("Registering listeners"),MobileApp.addNavigationListener($state),MobileApp.addProcessActionListener($state),$rootScope.$on("$locationChangeStart",preventLocationAndStateChange),$rootScope.$on("$stateChangeStart",preventLocationAndStateChange),$rootScope.$on("$languageChangeSuccess",function(){$language.getMessage(appTitle).then(function(message){$window.document.title=message||appConstant.title}),$rootScope.headerValue=getHeaderValue(headerItem),languageUtils.findMomentLocale($language.getLocale()).then(function(locale){logger.debug("moment locale?",locale),moment.locale(locale)})}),$rootScope.$on("$stateChangeSuccess",function(event,toState){$language.getMessage(toState.title).then(function(message){$window.document.title=message||appConstant.title});var state=toState.name||"index",arr=state.split("."),name=arr[0];appTitle=toState.title,$language.getMessage(appTitle).then(function(message){$window.document.title=message||appConstant.title}),$rootScope.headerValue="","settings"!==state&&"profile"!==state||(headerItem=state,$rootScope.headerValue=getHeaderValue(state)),menuService.getAllApps().then(function(apps){for(var i=0;i<apps.length;i++){var item=apps[i];if(item.id===name){headerItem=item.name,$rootScope.headerValue=getHeaderValue(item.name);break}}}),window.scrollTo(0,0),$(".page-sidebar .menu li a").removeClass("active");for(var items=$(".page-sidebar .menu li"),g=0;g<items.length;g++){var tag=$(items[g]);if(tag.hasClass(name)){tag.children("a").addClass("active");break}}onboardingService.inOnboarding()?$rootScope.hideFeedback=!0:impersonationService.getSession().then(function(impersonationSession){(impersonationSession&&impersonationSession.actingOnBehalfOf||impersonationSession.actingAs)&&(isImpersonating=!0,impersonationSession.actingOnBehalfOf&&($rootScope.hideFeedback=!0))})})}function removeTouchClickDelay(){$window.FastClick&&$window.FastClick.attach(document.body)}function applyBranding(){return logger.info("Applying branding",JSON.stringify(client)),brandingService.applyBranding(_.get(client,"alias"))}function loadUserPreferences(){return logger.info("Loading user preferences"),userPreferencesService.getPreferences()}function showShell(){$rootScope.appInitialized=!0}function enableRouter(){return $timeout(function(){$urlRouter.listen(),$urlRouter.sync()})}function goToLandingPage(){var inOnboarding=onboardingService.inOnboarding();inOnboarding?templateService.getTemplate().then(function(){landingPageCall()}):landingPageCall()}function landingPageCall(){landingPageService.goToLandingPage().finally(function(){logger.info("App initialization complete. Sending user to landing page"),MobileApp.readyApp(),showView(),checkAudioEyePreference()})}function startServerPing(){serverPingService.start()}function getImpersonationSession(){return impersonationService.getSession().then(function(impersonationSession){$rootScope.impersonationSession=impersonationSession}).catch(function(error){return logger.error("Error occurred retrieving impersonation session",error),$q.reject({message:"/redboxapi/identity/v1/self call failure",code:ERROR_UNAUTH})})}function checkAudioEyePreference(){if(isImpersonating)logger.error("Audio Eye Opt In/Out Modal is not shown while impersonating");else{var audioEyeModal;audioEyeService.getAudioEyeUserPreference().then(function(audioEyeUserPreference){audioEyeUserPreference.isAudioEyeModalRequired?(audioEyeModal=$adpModal.open({title:$language.get("framework.AUDIOEYE_MODAL_TITLE"),component:"audioEyeConfig",footer:!1,closeable:!1}),$rootScope.$watch(function(){return audioEyeService.isDecisionMade()},function(newVal,oldVal){newVal&&audioEyeModal.$close()})):audioEyeUserPreference.isAudioEyeEnabledByUser&&audioEyeService.loadAudioEye()}).catch(function(error){logger.error("Error retrieving audio eye user preference",error)})}}function trackFailure(event){event&&$analytics.eventTrack(event,{category:"App Initialization Failure",label:clientDeviceService.isNative()?"Native":"Desktop|Tablet|Mobile"})}var client,logger=loggerFactory.getLogger("redbox.framework.AppInitializerService"),ERROR_UNAUTH="ERROR_UNAUTH",isImpersonating=!1;return{initialize:initialize}}angular.module("redbox.framework.initializer",["ngResource","ui.router","adp.ng.language","adp.ng.logging","adp.ng.utilities","angulartics","angulartics.google.analytics","redbox.branding","redbox.onboarding.common","redbox.framework.landingpage","redbox.framework.accessibility","redbox.shared.constants","redbox.shared.services","redbox.ext.shared.utils"]).factory("redbox.framework.initializer.AppInitializerService",appInitializerService),appInitializerService.$inject=["$rootScope","$http","$q","$timeout","$language","$window","$urlRouter","$state","$analytics","redbox.shared.constants.AppConstant","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserPermissionService","redbox.shared.services.ClientService","redbox.ext.shared.services.SessionService","redbox.branding.BrandingService","redbox.onboarding.template.TemplateService","redbox.onboarding.common.OnboardingService","redbox.ext.shared.services.UserIdentityService","redbox.framework.menu.MenuService","redbox.ext.shared.utils.LanguageUtils","redbox.ext.shared.services.UserPreferenceService","redbox.framework.landingpage.LandingPageService","redbox.shared.services.ServerPingService","redbox.shared.services.ImpersonationService","redbox.framework.ModuleBootstrapService","redbox.shared.services.ConfigService","adp.ng.utilities.RuntimeInstanceConfigService","adp.ng.utilities.ClientDeviceService","adp.ng.ui.modal.adpModalService","redbox.framework.accessibility.AudioEyeService"]}(),angular.module("redbox.framework.ArrayNavigator",[]).factory("redbox.framework.ArrayNavigator.ArrayNavigatorService",[function(){function ArrayNavigator(array,index){this._array=array||[],this._currentIndex=index&&limitCurrentIndex.bind(this,index)()||0,this._changeListeners=[],this._transitionDirection=TRANSITION_DIRECTIONS.NONE}function hasNext(){return this._currentIndex<this.getLength()-1}function hasPrevious(){return this._currentIndex>0}function gotoNext(){this.hasNext()&&(this._currentIndex++,this._transitionDirection=TRANSITION_DIRECTIONS.FORWARD,notifyChangeListeners.bind(this)())}function gotoPrevious(){this.hasPrevious()&&(this._currentIndex--,this._transitionDirection=TRANSITION_DIRECTIONS.BACKWARD,notifyChangeListeners.bind(this)())}function gotoIndex(index){return index>=0&&index<this._array.length&&(this._transitionDirection=index>this._currentIndex?TRANSITION_DIRECTIONS.FORWARD:index<this._currentIndex?TRANSITION_DIRECTIONS.BACKWARD:TRANSITION_DIRECTIONS.NONE,this._currentIndex=index,notifyChangeListeners.bind(this)(),!0)}function getCurrentIndex(){return this._currentIndex}function limitCurrentIndex(index){var length=this.getLength()-1;return index>length?length:index}function getCurrentItem(){return this._array[this._currentIndex]}function addChangeListener(listener){var self=this,currentListenerIndex=self._changeListeners.length;return self._changeListeners.push(listener),function(){self._changeListeners[currentListenerIndex]=null}}function notifyChangeListeners(){var self=this;_.forEach(self._changeListeners,function(listener){listener&&listener()})}function getLength(){return this._array.length}function getArray(){return this._array}function getTransitionDirection(){return this._transitionDirection}var TRANSITION_DIRECTIONS={FORWARD:"forward",NONE:"none",BACKWARD:"back"};return angular.extend(ArrayNavigator.prototype,{hasNext:hasNext,hasPrevious:hasPrevious,gotoNext:gotoNext,gotoPrevious:gotoPrevious,gotoIndex:gotoIndex,getCurrentIndex:getCurrentIndex,getCurrentItem:getCurrentItem,addChangeListener:addChangeListener,getLength:getLength,getArray:getArray,getTransitionDirection:getTransitionDirection,TRANSITION_DIRECTIONS:TRANSITION_DIRECTIONS}),angular.extend(ArrayNavigator,{TRANSITION_DIRECTIONS:TRANSITION_DIRECTIONS}),{ArrayNavigator:ArrayNavigator}}]),function(){function audioEyeService($q,userPreferenceService,clientDeviceService,loggerFactory){function loadAudioEye(){clientDeviceService.isDesktop()&&LibUtils.load(AUDIO_EYE_URL,function(){logger.debug("AudioEye script loaded",AUDIO_EYE_URL)})}function getAudioEyeUserPreference(){var isUserOnMobileExperience=clientDeviceService.isNative()||clientDeviceService.isMobile()||clientDeviceService.isTablet();return userPreferenceService.getPreference(userPreferenceService.KEYS.ENABLE_AUDIO_EYE).then(function(isAudioEyeEnabled){var userAudioEyeSelection=_.get(isAudioEyeEnabled,"value",null),hasUserMadeAudioEyeSelection=_.isBoolean(userAudioEyeSelection),audioEyeUserPreference={isAudioEyeModalRequired:!isUserOnMobileExperience&&!hasUserMadeAudioEyeSelection,isAudioEyeEnabledByUser:hasUserMadeAudioEyeSelection&&userAudioEyeSelection};return audioEyeUserPreference}).catch(function(error){return logger.warn("Error occurred retrieving enableAudioEye preference",error),$q.reject(error)})}function setAudioEyeUserPreference(value){return _.isBoolean(value)?(decisionMade=!0,userPreferenceService.setPreference(userPreferenceService.KEYS.ENABLE_AUDIO_EYE,value)):void logger.error("Enable AudioEye user preference value can only be a boolean of true/false",value)}function removeAudioEyeUserPreference(){userPreferenceService.deletePreference(userPreferenceService.KEYS.ENABLE_AUDIO_EYE)}function isDecisionMade(){return decisionMade}var logger=loggerFactory.getLogger("redbox.framework.audioEye.AudioEyeService"),AUDIO_EYE_URL="//ws.audioeye.com/ae.js",decisionMade=!1;return{getAudioEyeUserPreference:getAudioEyeUserPreference,setAudioEyeUserPreference:setAudioEyeUserPreference,loadAudioEye:loadAudioEye,isDecisionMade:isDecisionMade,removeAudioEyeUserPreference:removeAudioEyeUserPreference}}angular.module("redbox.framework.accessibility",["redbox.ext.shared.services","adp.ng.utilities"]).factory("redbox.framework.accessibility.AudioEyeService",audioEyeService),audioEyeService.$inject=["$q","redbox.ext.shared.services.UserPreferenceService","adp.ng.utilities.ClientDeviceService","adp.ng.logging.LoggerFactory"]}(),function(){function landingPageService($q,$location,$state,$window,menuService,userPreferenceService,onboardingService,loggerFactory,clientDeviceService){function getDefaultLandingPage(){return getLandingPages().then(function(landingPages){return landingPages[0]})}function getLandingPages(){return menuService.getUserApps().then(function(apps){var _apps=_.cloneDeep(apps);return _apps.map(function(app){return app.isAbstract&&(app.url+=".index"),{prefKey:userPreferenceService.KEYS.PREFERRED_LANDING_PAGE,url:app.url.replace("#/",""),langKey:app.langKey}})})}function getPreferredLandingPage(){return getLandingPages().then(function(landingPages){return userPreferenceService.getPreference(userPreferenceService.KEYS.PREFERRED_LANDING_PAGE).then(function(preference){return _.find(landingPages,function(landingPage){return!(!preference||!preference.value)&&landingPage.url===preference.value})})})}function goToLandingPage(){function isPageRefresh(){return $window.location.href.match(/\/#\/[a-zA-Z]/)}var onboardingStatus,landingPages,landingPage,ONBOARDING_PAGE="onboarding.welcome";return clientDeviceService.isNative()?$q.resolve():onboardingService.getOnboardingStatus().then(function(_onboardingStatus){return onboardingStatus=_onboardingStatus,getLandingPages()}).then(function(_landingPages){return landingPages=_landingPages,getPreferredLandingPage()}).then(function(preferredLandingPage){if(logger.debug("$state.current",$state.current),!isPageRefresh()&&(landingPage=onboardingStatus.preboarding&&!onboardingStatus.rehire?ONBOARDING_PAGE:onboardingStatus.onboarding?landingPages[0].url:preferredLandingPage?preferredLandingPage.url:"/"===$location.path()||0===$location.path().length?landingPages[0].url:$state.current,!_.get(landingPage,"abstract")))return $state.go(landingPage)})}function setPreferredLandingPage(value){return userPreferenceService.setPreference(userPreferenceService.KEYS.PREFERRED_LANDING_PAGE,value)}function deletePreferredLandingPage(){return userPreferenceService.deletePreference(userPreferenceService.KEYS.PREFERRED_LANDING_PAGE)}var logger=loggerFactory.getLogger("redbox.framework.landingpage.LandingPageService");return{deletePreferredLandingPage:deletePreferredLandingPage,getDefaultLandingPage:getDefaultLandingPage,getLandingPages:getLandingPages,getPreferredLandingPage:getPreferredLandingPage,goToLandingPage:goToLandingPage,setPreferredLandingPage:setPreferredLandingPage}}angular.module("redbox.framework.landingpage",["adp.ng.logging","redbox.framework.menu","redbox.onboarding.common","redbox.shared.services","adp.ng.utilities"]).factory("redbox.framework.landingpage.LandingPageService",landingPageService),landingPageService.$inject=["$q","$location","$state","$window","redbox.framework.menu.MenuService","redbox.ext.shared.services.UserPreferenceService","redbox.onboarding.common.OnboardingService","adp.ng.logging.LoggerFactory","adp.ng.utilities.ClientDeviceService"]}(),function(){function moduleBootstrapService($q,$injector,$http,$ocLazyLoad,$language,appConstant,loggerFactory,clientDeviceService,profileService,userPermissionService){function getFilesToLoad(modules){var filesToLoad={jsCssFiles:[],messageBundles:[]},filterDuplicates=function(files){return files.filter(function(file,index,self){return self.indexOf(file)===index})};return modules.filter(function(module){return moduleNames.indexOf(module.id)>=0}).forEach(function(module){module.depends&&module.depends.forEach(function(moduleId){filesToLoad.jsCssFiles.push.apply(filesToLoad.jsCssFiles,appConstant.modules[moduleId]),filesToLoad.messageBundles.push(moduleId)}),filesToLoad.jsCssFiles.push.apply(filesToLoad.jsCssFiles,appConstant.modules[module.id]),"admin"!==module.id&&filesToLoad.messageBundles.push(module.id)}),filesToLoad.jsCssFiles=filterDuplicates(filesToLoad.jsCssFiles).sort(),
filesToLoad.messageBundles=filterDuplicates(filesToLoad.messageBundles).sort(),filesToLoad}function loadFiles(filesToLoad){return logger.info("loading files:",filesToLoad),$language.addResourceBundles(filesToLoad.messageBundles).then(function(){return $ocLazyLoad.load(filesToLoad.jsCssFiles)})}function getModules(){return $http.get("app/framework/module-bootstrap.json").then(function(results){return results.data})}function checkAdditionalPermissions(modules){var promises=[];return modules.forEach(function(module,i){!function(_module,_i){var service;_module.performAdditionalChecks&&(service=$injector.get(_module.performAdditionalChecks),promises.push(service.showMenu().then(function(show){show||delete modules[_i]})))}(module,i)}),$q.all(promises).then(function(){return modules})}var logger=loggerFactory.getLogger("redbox.framework.ModuleBootstrapService"),moduleNames=Object.keys(appConstant.modules);this.init=function(){function userPermissionsFilter(modules){return modules.filter(function(module){return module.permission?userPermissionService.hasPermissionsOne(module.permission):!module.isArcotRequired||profile.isPractitioner})}function nativeFilter(modules){var isNative=clientDeviceService.isNative();return modules.filter(function(module){return!isNative||module.nativeEnabled})}if(!moduleNames.length)return $q.when();var profile;return profileService.get().then(function(_profile){profile=_profile}).then(userPermissionService.init).then(getModules).then(checkAdditionalPermissions).then(userPermissionsFilter).then(nativeFilter).then(getFilesToLoad).then(loadFiles)}}angular.module("redbox.framework").service("redbox.framework.ModuleBootstrapService",moduleBootstrapService),moduleBootstrapService.$inject=["$q","$injector","$http","$ocLazyLoad","$language","redbox.shared.constants.AppConstant","adp.ng.logging.LoggerFactory","adp.ng.utilities.ClientDeviceService","redbox.ext.shared.services.ProfileService","redbox.ext.shared.services.UserPermissionService"]}(),function(){function ScrollService($timeout){function currentYPosition(){return self.pageYOffset?self.pageYOffset:document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop?document.body.scrollTop:0}function elmYPosition(eID){for(var elm=document.getElementById(eID),y=elm.offsetTop,node=elm;node.offsetParent&&node.offsetParent!==document.body;)node=node.offsetParent,y+=node.offsetTop;return y}this.scrollToElement=function(elementId){$timeout(function(){$("html, body").animate({scrollTop:$("#"+elementId).offset().top},1e3)},250)},this.scrollToNative=function(elementId,speed){var startY=currentYPosition(),stopY=elmYPosition(elementId),distance=stopY>startY?stopY-startY:startY-stopY;if(distance<100)return void scrollTo(0,stopY);var speed=Math.round(distance/100);speed>=20&&(speed=20);var step=Math.round(distance/100),leapY=stopY>startY?startY+step:startY-step,timer=0;if(stopY>startY)for(var i=startY;i<stopY;i+=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY+=step,leapY>stopY&&(leapY=stopY),timer++;else for(var i=startY;i>stopY;i-=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY-=step,leapY<stopY&&(leapY=stopY),timer++}}angular.module("redbox.framework").service("redbox.framework.ScrollService",ScrollService),ScrollService.$inject=["$timeout"]}(),angular.module("redbox.framework").service("redbox.framework.VideoService",[function(){function getEmbedUrl(url){var youtubeId=getYoutubeVideoId(url),vimeoId=getVimeoVideoId(url);return youtubeId?getConcatUrl(youtubeId,"youtube"):vimeoId?getConcatUrl(vimeoId,"vimeo"):""}function isValidYoutube(url){return!!getYoutubeVideoId(url)}function isValidVimeo(url){return!!getVimeoVideoId(url)}function isValidUrl(url){return!!getYoutubeVideoId(url)||!!getVimeoVideoId(url)}function getYoutubeVideoId(url){if(!url)return"";var regExp=/^.*(?:(?:youtu\.be\/|v\/|vi\/|u\/\w\/|embed\/)|(?:(?:watch)?\?v(?:i)?=|\&v(?:i)?=))([^#\&\?]*).*/,match=url.match(regExp);return match&&11===match[1].length?match[1]:""}function getVimeoVideoId(url){if(!url)return"";var regExp=/(?:https?:\/\/)?(?:www\.)?(?:player.)?vimeo.com\/(?:channels\/(?:\w+\/)?|groups\/([^\/]*)\/videos\/|video\/|album\/(\d+)\/video\/|)(\d+)(?:$|\/|\?)/,match=url.match(regExp);return match&&match[3]?match[3]:""}function getConcatUrl(videoId,type){switch(type){case"youtube":return"https://www.youtube.com/embed/"+videoId;case"vimeo":return"https://player.vimeo.com/video/"+videoId}}var VideoService={getEmbedUrl:getEmbedUrl,isValidYoutube:isValidYoutube,isValidVimeo:isValidVimeo,isValidUrl:isValidUrl};return VideoService}]),angular.module("redbox.framework.checklists").constant("redbox.framework.checklists.ChecklistConstant",{URL_PREFIX:"/redboxapi/hr/v1/associates/checklists",COMPLETE:"complete",INCOMPLETE:"incomplete",CHECKLIST_MODEL:{creatorAoid:void 0,assigneeAoid:void 0,orgoid:void 0,updatedDate:void 0,tasks:[],groupId:void 0},CHECKLIST_TASK_MODEL:{id:void 0,name:void 0,dueDate:void 0,completed:void 0},CHECKLIST_UPDATE_OVERDUE_TASK_EVENT:"checklistUpdateOverdueTaskEvent"}),angular.module("redbox.framework.checklists").factory("redbox.framework.checklists.ChecklistService",["$http","$rootScope","$q","adp.ng.logging.LoggerFactory","redbox.onboarding.display.DisplayService","redbox.framework.checklists.ChecklistConstant",function($http,$rootScope,$q,LoggerFactory,DisplayService,constants){function Checklist(attrs){this.attrs=attrs}function saveTask(task){var url="/redboxapi/events/hr/v1/checklists/tasks.update",taskToPost={assigneeAoid:task.assigneeAoid,taskId:task.id,groupId:task.groupId,completed:task.completed};return $http.post(url,taskToPost).then(function(response){return response.data})}function getChecklistSummariesForAoids(aoids,groupId){return _.isEmpty(aoids)?$q.when([]):getChecklistSummaries(aoids,groupId)}function getChecklistSummaries(aoids,groupId,filters){var queryString="?",url="/redboxapi/hr/v1/checklists/"+groupId;return _.isEmpty(filters)||(queryString+="filters="+filters.join(",")),_.isEmpty(aoids)||(queryString+="&aoids="+aoids.join(",")),$http.get(url+queryString).then(function(result){return result.data})}function getChecklist(aoid,groupId,bustCache){var myDeferred;if(!aoid||!groupId)return $q.reject("aoid and groupId are required arguments.");if(!deferredChecklist[aoid]||bustCache){myDeferred=deferredChecklist[aoid]=$q.defer();var url="/redboxapi/hr/v1/associates/"+aoid+"/checklists/"+groupId;$http.get(url).then(function(result){myDeferred.resolve(new Checklist(result.data))}).catch(function(error){myDeferred.reject(error),logger.error("Error retrieving checklist for "+aoid+": "+error)})}return deferredChecklist[aoid].promise}function createChecklist(data){return new Checklist(data||getChecklistModel())}function createChecklistsFromTemplate(aoids,groupId){if(!aoids||!groupId)return $q.reject("aoids and groupId are required arguments.");if(!_.isArray(aoids)||0===aoids.length)return $q.reject("aoids must be an array with at least one item.");var url="/redboxapi/events/hr/v1/checklists.create",postData={assigneeAoids:aoids,groupId:groupId};return $http.post(url,postData).then(function(rsp){return _.map(rsp.data.events[0].data.transform.checklists,function(cl){return new Checklist(cl)})}).catch(function(e){return logger.error("Error creating checklists for "+groupId+": "+aoids+": "+JSON.stringify(e)),$q.reject(e)})}function viewIndividualChecklist(aoid,groupId){var deferred=$q.defer();return DisplayService.open(getIndividualChecklistSlideInConfig(aoid,groupId),deferred.resolve),deferred.promise}function getChecklistModel(){return _.assign({},constants.CHECKLIST_MODEL)}function getChecklistTaskModel(){return _.assign({},constants.CHECKLIST_TASK_MODEL)}function getIndividualChecklistSlideInConfig(aoid,groupId){var $scope=$rootScope.$new();$scope.aoid=aoid,$scope.groupId=groupId;var config={type:"slidein",parameters:{scope:$scope,contentTemplate:"app/onboarding/modules/admin/views/onboarding-checklist-individual-view.html"}};return config}var deferredChecklist={},logger=LoggerFactory.getLogger("redbox.framework.checklists.ChecklistService");return Checklist.prototype.getTasks=function(){return this.attrs.tasks},Checklist.prototype.setTasks=function(arg){var tasks=arg||[];tasks=_.isArray(tasks)?tasks:[tasks],_.remove(this.attrs.tasks,function(){return!0}),tasks.forEach(function(t){this.attrs.tasks.push(t)},this)},Checklist.prototype.addTask=function(task){this.attrs.tasks.push(task||getChecklistTaskModel())},Checklist.prototype.getTotalTasks=function(){return _.get(this.attrs,"tasks.length")},{createChecklist:createChecklist,createChecklistsFromTemplate:createChecklistsFromTemplate,getChecklist:getChecklist,getChecklistSummaries:getChecklistSummaries,getChecklistSummariesForAoids:getChecklistSummariesForAoids,viewIndividualChecklist:viewIndividualChecklist,saveTask:saveTask}}]),angular.module("redbox.framework.checklists").factory("redbox.framework.checklists.ChecklistTemplateService",["$http","$q","adp.ng.logging.LoggerFactory","redbox.framework.checklists.ChecklistTemplateServiceConstant",function($http,$q,LoggerFactory,constants){function ChecklistTemplate(attrs){this.attrs=attrs}function getChecklistTemplate(config){return!deferredChecklistTemplate||config&&config.bustCache?(deferredChecklistTemplate=$q.defer(),$http.get(constants.GET_URL).then(function(result){deferredChecklistTemplate.resolve(result.data[0]&&new ChecklistTemplate(result.data[0]))}).catch(function(error){deferredChecklistTemplate.reject(error),logger.error("Error retrieving checklist template")}),deferredChecklistTemplate.promise):deferredChecklistTemplate.promise}function saveChecklistTemplate(checklist){var checklistData=transformChecklistData(checklist);return $http.post(constants.UPDATE_URL,checklistData)}function deleteChecklistTemplate(id){return $http.post(constants.DELETE_URL,{_id:id})}function transformChecklistData(checklist){var transformedChecklist={};return transformedChecklist.checklistTemplate={},angular.extend(transformedChecklist.checklistTemplate,checklist.attrs),transformedChecklist}var deferredChecklistTemplate,logger=LoggerFactory.getLogger("redbox.framework.checklists.ChecklistTemplateService"),ChecklistTemplateService={ChecklistTemplate:ChecklistTemplate,getChecklistTemplate:getChecklistTemplate,saveChecklistTemplate:saveChecklistTemplate,deleteChecklistTemplate:deleteChecklistTemplate};return ChecklistTemplateService}]).constant("redbox.framework.checklists.ChecklistTemplateServiceConstant",{GET_URL:"/redboxapi/hr/v1/checklist-templates/onboarding",UPDATE_URL:"/redboxapi/events/hr/v1/checklist-templates.update",DELETE_URL:"/redboxapi/events/hr/v1/checklist-templates.delete"}),angular.module("redbox.framework.checklists").controller("redbox.framework.checklists.ChecklistTaskEditCtrl",["redbox.framework.checklists.ChecklistTaskEditCtrlConstants","$language",function(ChecklistTaskEditCtrlConstants,$language){function onInit(){setDefault("dueDateOptions",ChecklistTaskEditCtrlConstants.DUE_DATE_OPTIONS),assignDueDateLangValues()}function assignDueDateLangValues(){_.forEach(vm.dueDateOptions,function(dueDate){dueDate.labelName=$language.get(dueDate.value)})}function setDefault(property,value){void 0===vm[property]&&(vm[property]=value)}function removeDetails(){delete vm.task.details}var vm=this;angular.extend(vm,{removeDetails:removeDetails,$onInit:onInit})}]).component("adpChecklistTaskEdit",{controller:"redbox.framework.checklists.ChecklistTaskEditCtrl as ChecklistTaskEditCtrl",templateUrl:"app/framework/modules/checklists/components/checklist-edit-task/checklist-edit-task-component.html",bindings:{task:"<",dueDateOptions:"<?",enableDetails:"<?",position:"@",taskNamePlaceholder:"@?",taskDetailsPlaceholder:"@?",setErrorTextForRequiredFields:"&"}}).constant("redbox.framework.checklists.ChecklistTaskEditCtrlConstants",{DUE_DATE_OPTIONS:[{key:0,value:"framework.CHECKLIST_DUE_DAY_1"},{key:1,value:"framework.CHECKLIST_DUE_DAY_2"},{key:6,value:"framework.CHECKLIST_DUE_DAY_7"},{key:13,value:"framework.CHECKLIST_DUE_DAY_14"},{key:29,value:"framework.CHECKLIST_DUE_DAY_30"},{key:59,value:"framework.CHECKLIST_DUE_DAY_60"},{key:89,value:"framework.CHECKLIST_DUE_DAY_90"}]}),angular.module("redbox.framework.checklists").controller("redbox.framework.checklists.ChecklistEditCtrl",["$language","$scope","redbox.framework.checklists.ChecklistEditCtrlConstants",function($language,$scope,ChecklistEditCtrlConstants){function taskHasPendingRemoveState(){return _.some(_.get(vm,["checklist","attrs","tasks"]),function(task){return _.get(task,"pendingRemove",!1)})}function setDefault(property,value){void 0===vm[property]&&(vm[property]=value)}function submitTemplateForm(){vm.saveAttempted=!0,vm.checklistTemplateForm.$valid?vm.saveFunction():(setDirtyChecklistForm(),setErrorTextForRequiredFields())}function setErrorTextForRequiredFields(){if(vm.checklistTemplateForm&&vm.checklistTemplateForm.$error){var nameError=!!_.find(vm.checklistTemplateForm.$error.required,{$name:"taskName"}),dateError=!!_.find(vm.checklistTemplateForm.$error.required,{$name:"dueDate"});nameError&&dateError?vm.saveErrorText=$language.get("framework.CHECKLIST_SAVE_ERROR_DATE_NAME"):dateError?vm.saveErrorText=$language.get("framework.CHECKLIST_SAVE_ERROR_DATE"):nameError&&(vm.saveErrorText=$language.get("framework.CHECKLIST_SAVE_ERROR_NAME"))}}function setDirtyChecklistForm(){_.forEach(vm.checklistTemplateForm.$error.required,function(field){field.$setDirty()})}function addTask(){vm.checklist.attrs.tasks.push({})}function isNewTaskDisabled(){return vm.checklist.attrs.tasks.length>0&&isLastTaskEmpty()}function isLastTaskEmpty(){return _.isEmpty(_.last(vm.checklist.attrs.tasks).name)}function maybeRemoveTask(index){shouldOpenConfirmationModal(index)?setPendingTaskRemoval(index):removeTask(index)}function shouldOpenConfirmationModal(index){return vm.checklist.attrs.tasks[index].name||vm.checklist.attrs.tasks[index].id}function setPendingTaskRemoval(index){vm.checklist.attrs.tasks[index].pendingRemove=!0}function taskIsPendingRemoval(index){return!!vm.checklist.attrs.tasks[index].pendingRemove}function removeTask(index){delete vm.checklist.attrs.tasks[index].pendingRemove,vm.checklist.attrs.tasks.splice(index,1),setErrorTextForRequiredFields()}function cancelRemoveTask(index){delete vm.checklist.attrs.tasks[index].pendingRemove}var vm=this;angular.extend(vm,{dragDrop:{containment:"#checklist-edit-tasks",containerPositioning:"relative"},submitTemplateForm:submitTemplateForm,addTask:addTask,removeTask:removeTask,cancelRemoveTask:cancelRemoveTask,maybeRemoveTask:maybeRemoveTask,taskIsPendingRemoval:taskIsPendingRemoval,isNewTaskDisabled:isNewTaskDisabled,setErrorTextForRequiredFields:setErrorTextForRequiredFields,taskHasPendingRemoveState:taskHasPendingRemoveState}),setDefault("saveAttempted",!1),setDefault("enableDrag",!0),setDefault("enableDetails",!0),setDefault("taskNamePlaceholderText",ChecklistEditCtrlConstants.DEFAULT_NAME_PLACEHOLDER_TEXT),setDefault("taskDetailsPlaceholderText",ChecklistEditCtrlConstants.DEFAULT_DETAILS_PLACEHOLDER_TEXT),$scope.$watch(function(){return vm.checklist.attrs.tasks},function(newTasks,oldTasks){newTasks.length!==oldTasks.length&&(vm.saveAttempted=!1)},!0)}]).component("adpChecklistEdit",{controller:"redbox.framework.checklists.ChecklistEditCtrl",controllerAs:"checklistEditCtrl",templateUrl:"app/framework/modules/checklists/components/checklist-edit/checklist-edit-component.html",bindings:{checklist:"<",enableDrag:"=?",enableDetails:"=?",saveFunction:"&?",taskNamePlaceholderText:"@?",taskDetailsPlaceholderText:"@?",controlsText:"@?",hasNoChangesToSave:"&"}}).constant("redbox.framework.checklists.ChecklistEditCtrlConstants",{DEFAULT_NAME_PLACEHOLDER_TEXT:"framework.CHECKLIST_ADD_TASK",DEFAULT_DETAILS_PLACEHOLDER_TEXT:"framework.CHECKLIST_ADD_DETAILS"}),angular.module("redbox.framework.checklists").component("adpChecklistTaskView",{controller:"redbox.framework.checklists.ChecklistTaskViewCtrl as checklistTaskViewCtrl",templateUrl:"app/framework/modules/checklists/components/checklist-task-view/checklist-task-view-component.html",bindings:{task:"<",assigneeAoid:"@",groupId:"@"}}).controller("redbox.framework.checklists.ChecklistTaskViewCtrl",["$scope","redbox.framework.checklists.ChecklistConstant","redbox.framework.checklists.ChecklistService",function($scope,ChecklistConstant,ChecklistService){function formatShortDate(date){return date&&moment(date).format("MMM D, YYYY")}function reloadChecklistSummaries(){$scope.$emit(ChecklistConstant.CHECKLIST_UPDATE_OVERDUE_TASK_EVENT)}var vm=this,today=moment().startOf("day");vm.task.completedDate=formatShortDate(vm.task.completedDate),angular.extend(vm,{shortDueDate:formatShortDate(vm.task.dueDate),daysOverdue:vm.task.overdue?today.diff(moment(vm.task.dueDate),"days"):void 0,toggleTaskState:function(){vm.task.assigneeAoid=vm.assigneeAoid,vm.task.groupId=vm.groupId,ChecklistService.saveTask(vm.task).then(function(data){var tasks=_.get(data,"events[0].data.transform.checklist.tasks");if(tasks){var currentTask=_.find(tasks,{id:vm.task.id});vm.daysOverdue=today.diff(moment(vm.task.dueDate),"days"),vm.task.completedDate=formatShortDate(currentTask.completedDate),currentTask.completed===!1&&vm.daysOverdue>0&&(vm.task.overdue=!0),vm.error=!1}}).then(reloadChecklistSummaries).catch(function(e){var updatedTaskState=vm.task.completed;vm.error=e||!0,vm.task.completed=!updatedTaskState})}})}]),angular.module("redbox.framework.checklists").component("adpChecklistView",{controllerAs:"ChecklistViewCtrl",templateUrl:"app/framework/modules/checklists/components/checklist-view/checklist-view-component.html",bindings:{checklist:"<"}}),angular.module("redbox.framework.menu").service("redbox.framework.menu.MenuAdminService",["$q","redbox.framework.menu.MenuService",function($q,menuService){this.shouldShow=function(){return $q.when(menuService.hasAdmin())}}]),angular.module("redbox.framework.menu").controller("redbox.framework.menu.MenuCtrl",["$scope","$rootScope","$state","$location","$q","$window","redbox.shared.constants.AppConstant","redbox.framework.menu.MenuService","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.services.ProfileService","redbox.ext.shared.services.UserIdentityService","adp.ng.logging.LoggerFactory",function($scope,$rootScope,$state,$location,$q,$window,appConstant,menuService,userPermission,profile,userIdentity,loggerFactory){function initMenuState(){$scope.menuState.isDesktop=$window.innerWidth>=appConstant.mdWidth,menuService.setMenu($scope.menuState.isDesktop)}var logger=loggerFactory.getLogger("redbox.framework.menu.MenuCtrl");$scope.profile={},$scope.menuState=menuService.menuState,$scope.toggleMenu=menuService.toggleMenu,$(window).resize(function(){var newIsDesktop=$window.innerWidth>=appConstant.mdWidth;newIsDesktop!==$scope.menuState.isDesktop&&initMenuState()}),$scope.isActive=function(appId){var regex=new RegExp("^/"+appId);return regex.test($location.path())},$scope.openMyProfile=function(){$scope.profile.hasWorkerProfile&&userIdentity.getAoid().then(function(aoid){aoid&&($location.path().indexOf("/profile/")!==-1?$state.go("profile.view",{associateOID:aoid},{reload:!0}):$location.path("/profile/"+aoid))})},$rootScope.$on("$updateMenu",function(){$scope.init()}),$scope.init=function(){var promises=[profile.get(),menuService.getUserApps(),userPermission.init()];$q.all(promises).then(function(responses){$scope.profile=responses[0],$scope.apps=responses[1],$scope.profile.hasWorkerProfile=userPermission.hasWorkerProfile()},function(errors){logger.error("Error occurred retrieving apps and permissions",errors)})},$scope.init(),initMenuState()}]),angular.module("redbox.framework.menu").directive("menuItem",["redbox.shared.constants.AppConstant","redbox.framework.menu.MenuService",function(appConstant,menuService){var linker=function(scope,element,attr){var disabled="true"===attr.disabled;disabled&&element.addClass("item-disabled"),element.click(function(e){var conW=$("#framework-container").width();disabled||conW<appConstant.mdWidth&&menuService.closeMenu()}),attr.$observe("disabled",function(val){disabled="true"===val,disabled?element.addClass("item-disabled"):element.removeClass("item-disabled")})};return{restrict:"A",link:linker,scope:{content:"="}}}]),angular.module("redbox.framework.menu").service("redbox.framework.menu.MenuService",["$http","$injector","$q","$rootScope","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.ProfileService","redbox.ext.shared.services.UserPermissionService",function($http,$injector,$q,$rootScope,loggerFactory,profile,userPermission){var allAppsDeferred,menuState={isOpen:!0},self=this,APPS_URL="app/framework/modules/menu/apps.json",logger=loggerFactory.getLogger("redbox.framework.menu.MenuService");this.hasDashboard=function(){return this.hasMenuItem("dashboard")},this.hasAdmin=function(){return this.hasMenuItem("admin")},this.hasMenuItem=function(id){var deferred=$q.defer();return this.getUserApps().then(function(apps){var hasId=_.find(apps,function(app){return app.id===id});deferred.resolve(void 0!==hasId)}).catch(function(error){logger.error("Error occurred retrieving apps",JSON.stringify(error)),deferred.reject(error)}),deferred.promise},this.getUserApps=function(){var deferred=$q.defer(),promises=[profile.get(),this.getAllApps(),userPermission.init()];return $q.all(promises).then(function(responses){var _profile=responses[0],apps=responses[1],tempApps=[],additionalMenuCheckPromises=[],removeDashboard=function(){var isAdmin=_.findWhere(tempApps,{name:"Admin"});userPermission.hasTime()||(3!==tempApps.length||void 0===isAdmin)&&2!==tempApps.length||(tempApps=_.reject(tempApps,function(tempApp){return"dashboard"===tempApp.id}))};angular.forEach(apps,function(app){var additionalMenuCheck=!1;if(app.permission?userPermission.hasPermissionsOne(app.permission)&&(app.performAdditionalChecks?additionalMenuCheck=!0:tempApps.push(app)):app.isArcotRequired?_profile.isPractitioner&&(app.performAdditionalChecks?additionalMenuCheck=!0:tempApps.push(app)):app.performAdditionalChecks?additionalMenuCheck=!0:tempApps.push(app),additionalMenuCheck){var additionalChecksService=$injector.get(app.performAdditionalChecks);additionalChecksService.showMenu&&!function(_app){additionalMenuCheckPromises.push(additionalChecksService.showMenu().then(function(showMenuFlag){showMenuFlag&&(tempApps.push(_app),tempApps.sort(compare))}))}(app)}}),additionalMenuCheckPromises.length>0?$q.all(additionalMenuCheckPromises).then(function(){removeDashboard(),deferred.resolve(tempApps)}):(removeDashboard(),deferred.resolve(tempApps))},function(errors){logger.error("Error occurred retrieving apps and permissions",JSON.stringify(errors)),deferred.reject(errors)}),deferred.promise},this.getAllApps=function(){return allAppsDeferred?allAppsDeferred.promise:(allAppsDeferred=$q.defer(),profile.get().then(function(profileResult){return self.getApps(APPS_URL).then(function(apps){allAppsDeferred.resolve(apps)}).catch(function(error){logger.error("getApps call failed",error),allAppsDeferred.reject(error)}),allAppsDeferred.promise}),allAppsDeferred.promise)},this.getApps=function(appsUrl){var deferred=$q.defer();return $http.get(appsUrl).then(function(results){var apps=results.data.list||[];angular.forEach(apps,function(app){app.isAbstract?app.sref=app.id+"."+(app.defaultChildState||"index"):app.sref=app.id,app.langKey="MENU_"+app.id.toUpperCase()}),deferred.resolve(apps)}).catch(function(error){logger.error("getApps call failed",error.data),deferred.reject(error.data)}),deferred.promise};var compare=function(a,b){return a.order<b.order?-1:a.order>b.order?1:0};this.menuState=menuState,this.openMenu=function(){self.setMenu(!0)},this.closeMenu=function(){self.setMenu(!1)},this.toggleMenu=function(){self.setMenu(!menuState.isOpen)},this.setMenu=function(isOpen){menuState.isOpen=isOpen,$rootScope.$$phase||$rootScope.$digest()}}]),angular.module("redbox.framework.meta").factory("redbox.framework.meta.META_CONSTANTS",["redbox.ext.shared.constants.SFFOConstant",function(SFFO){return{EVENTS:{ADDRESS_VALIDATE:{NAME:"addressValidate",SFFO:SFFO.payrollManagement.paycardManagement.addressManagement.address_validate.sffo,WORKFLOW_ENABLED:!1},LEGAL_ADDRESS_ADD:{NAME:"workerlegalAddressadd",SFFO:SFFO.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_add.sffo,WORKFLOW_ENABLED:!0},LEGAL_ADDRESS_CHANGE:{NAME:"workerlegalAddresschange",SFFO:SFFO.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_change.sffo,WORKFLOW_ENABLED:!0},PERSONAL_ADDRESS_CHANGE:{NAME:"workerpersonalAddresschange",SFFO:SFFO.workerInformationManagement.workerManagement.addressManagement.worker_personalAddress_change.sffo,WORKFLOW_ENABLED:!0},PERSONAL_EMAIL_ADD:{NAME:"workerpersonalCommunicationemailadd",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_add.sffo,WORKFLOW_ENABLED:!0},PERSONAL_EMAIL_CHANGE:{NAME:"workerpersonalCommunicationemailchange",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_change.sffo,WORKFLOW_ENABLED:!0},PERSONAL_EMAIL_REMOVE:{NAME:"workerpersonalCommunicationemailremove",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.connections.PROFILE_DELETE_EMAIL_CONFIRMATION}}</adp-alert>'}},PERSONAL_LANDLINE_ADD:{NAME:"workerpersonalCommunicationlandlineadd",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_add.sffo,WORKFLOW_ENABLED:!0},PERSONAL_LANDLINE_CHANGE:{NAME:"workerpersonalCommunicationlandlinechange",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_change.sffo,WORKFLOW_ENABLED:!0},PERSONAL_LANDLINE_REMOVE:{NAME:"workerpersonalCommunicationlandlineremove",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.connections.PROFILE_DELETE_PHONE_NUMBER_CONFIRMATION}}</adp-alert>'}},PERSONAL_MOBILE_ADD:{NAME:"workerpersonalCommunicationmobileadd",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_add.sffo,WORKFLOW_ENABLED:!0},PERSONAL_MOBILE_CHANGE:{NAME:"workerpersonalCommunicationmobilechange",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_change.sffo,WORKFLOW_ENABLED:!0},PERSONAL_MOBILE_REMOVE:{NAME:"workerpersonalCommunicationmobileremove",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.connections.PROFILE_DELETE_PHONE_NUMBER_CONFIRMATION}}</adp-alert>'}},BUSINESS_LANDLINE_ADD:{NAME:"workerbusinessCommunicationlandlineadd",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_add.sffo,WORKFLOW_ENABLED:!0},BUSINESS_LANDLINE_CHANGE:{NAME:"workerbusinessCommunicationlandlinechange",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_change.sffo,WORKFLOW_ENABLED:!0},BUSINESS_LANDLINE_REMOVE:{NAME:"workerbusinessCommunicationlandlineremove",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.connections.PROFILE_DELETE_PHONE_NUMBER_CONFIRMATION}}</adp-alert>'}},BUSINESS_MOBILE_ADD:{NAME:"workerbusinessCommunicationmobileadd",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_add.sffo,WORKFLOW_ENABLED:!0},BUSINESS_MOBILE_CHANGE:{NAME:"workerbusinessCommunicationmobilechange",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_change.sffo,WORKFLOW_ENABLED:!0},BUSINESS_MOBILE_REMOVE:{NAME:"workerbusinessCommunicationmobileremove",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.connections.PROFILE_DELETE_PHONE_NUMBER_CONFIRMATION}}</adp-alert>'}},BUSINESS_FAX_ADD:{NAME:"workerbusinessCommunicationfaxadd",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_add.sffo,WORKFLOW_ENABLED:!0},BUSINESS_FAX_CHANGE:{NAME:"workerbusinessCommunicationfaxchange",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_change.sffo,WORKFLOW_ENABLED:!0},BUSINESS_FAX_REMOVE:{NAME:"workerbusinessCommunicationfaxremove",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_remove.sffo,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.connections.PROFILE_DELETE_FAX_NUMBER_CONFIRMATION}}</adp-alert>'},WORKFLOW_ENABLED:!0},BUSINESS_EMAIL_ADD:{NAME:"workerbusinessCommunicationemailadd",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_add.sffo,WORKFLOW_ENABLED:!0},BUSINESS_EMAIL_CHANGE:{NAME:"workerbusinessCommunicationemailchange",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_change.sffo,WORKFLOW_ENABLED:!0},BUSINESS_EMAIL_REMOVE:{NAME:"workerbusinessCommunicationemailremove",SFFO:SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.connections.PROFILE_DELETE_EMAIL_CONFIRMATION}}</adp-alert>'}},BIRTHDATE_CHANGE:{NAME:"workerbirthdatechange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_birthdate_change.sffo,WORKFLOW_ENABLED:!1},RACE_CHANGE:{NAME:"workerracechange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_race_change.sffo,WORKFLOW_ENABLED:!1},ETHNICITY_CHANGE:{NAME:"workerethnicitychange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_ethnicity_change.sffo,WORKFLOW_ENABLED:!1},MILITARY_STATUS_CHANGE:{NAME:"workermilitaryStatuschange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_militaryStatus_change.sffo,WORKFLOW_ENABLED:!1},MILITARY_CLASSIFICATION_CHANGE:{NAME:"workermilitaryClassificationchange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_militaryClassification_change.sffo,WORKFLOW_ENABLED:!1},HIGHEST_EDUCATION_LEVEL_CHANGE:{NAME:"workerhighestEducationLevelchange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_highestEducationLevel_change.sffo,WORKFLOW_ENABLED:!1},DISABILITY_CHANGE:{NAME:"workerdisabilitychange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_disability_change.sffo,WORKFLOW_ENABLED:!1},GENDER_CHANGE:{NAME:"workergenderchange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_gender_change.sffo,WORKFLOW_ENABLED:!1},LEGAL_NAME_CHANGE:{NAME:"workerlegalNamechange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_legalName_change.sffo
},PREFERRED_NAME_CHANGE:{NAME:"workerpreferredNamechange",SFFO:SFFO.workerInformationManagement.workerManagement.associateManagement.worker_preferredName_change.sffo},PERSONAL_CONTACT_ADD:{NAME:"workerpersonalContactadd",SFFO:SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_add.sffo,WORKFLOW_ENABLED:!0},PERSONAL_CONTACT_CHANGE:{NAME:"workerpersonalContactchange",SFFO:SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_change.sffo,WORKFLOW_ENABLED:!0},PERSONAL_CONTACT_REMOVE:{NAME:"workerpersonalContactremove",SFFO:SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_remove.sffo,WORKFLOW_ENABLED:!0},LANGUAGE_ADD:{NAME:"languageadd",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.languageManagement.language_add.sffo,WORKFLOW_ENABLED:!0},LANGUAGE_CHANGE:{NAME:"languagechange",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.languageManagement.language_change.sffo,WORKFLOW_ENABLED:!0},LANGUAGE_REMOVE:{NAME:"languageremove",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.languageManagement.language_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.talent.TALENT_REMOVE_LANGUAGES_CONFIRMATION}}</adp-alert>'}},MEMBERSHIP_ADD:{NAME:"membershipadd",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_add.sffo,WORKFLOW_ENABLED:!0},MEMBERSHIP_CHANGE:{NAME:"membershipchange",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_change.sffo,WORKFLOW_ENABLED:!0},MEMBERSHIP_REMOVE:{NAME:"membershipremove",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.talent.TALENT_REMOVE_MEMBERSHIP_CONFIRMATION}}</adp-alert>'}},LICENSE_ADD:{NAME:"licenseadd",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_add.sffo,WORKFLOW_ENABLED:!0},LICENSE_CHANGE:{NAME:"licensechange",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_change.sffo,WORKFLOW_ENABLED:!0},LICENSE_REMOVE:{NAME:"licenseremove",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.talent.TALENT_REMOVE_LICENSE_CONFIRMATION}}</adp-alert>'}},CERTIFICATION_ADD:{NAME:"certificationadd",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_add.sffo,WORKFLOW_ENABLED:!0},CERTIFICATION_CHANGE:{NAME:"certificationchange",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_change.sffo,WORKFLOW_ENABLED:!0},CERTIFICATION_REMOVE:{NAME:"certificationremove",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.talent.TALENT_REMOVE_CERTIFICATION_CONFIRMATION}}</adp-alert>'}},COMPETENCY_ADD:{NAME:"competencyadd",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_add.sffo,WORKFLOW_ENABLED:!0},COMPETENCY_CHANGE:{NAME:"competencychange",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_change.sffo,WORKFLOW_ENABLED:!0},COMPETENCY_REMOVE:{NAME:"competencyremove",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.talent.TALENT_REMOVE_COMPETENCY_CONFIRMATION}}</adp-alert>'}},EDUCATIONAL_DEGREE_ADD:{NAME:"educationaldegreeadd",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_add.sffo,WORKFLOW_ENABLED:!0},EDUCATIONAL_DEGREE_CHANGE:{NAME:"educationaldegreechange",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_change.sffo,WORKFLOW_ENABLED:!0},EDUCATIONAL_DEGREE_REMOVE:{NAME:"educationaldegreeremove",SFFO:SFFO.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_remove.sffo,WORKFLOW_ENABLED:!0,wrapper:{attributes:[["class","confirm-wrapper"]],content:'<adp-alert type="warning">{{::lang.talent.TALENT_REMOVE_EDUCATION_CONFIRMATION}}</adp-alert>'}},STATE_TAX_WITHHOLDING_CHANGE:{NAME:"worker_usState_taxWithholding_election_change",SFFO:SFFO.payrollManagement.payrollInstructionManagement.taxWithholdingManagement.worker_usState_taxWithholding_election_change.sffo,WORKFLOW_ENABLED:!0,HASQUERY:!0},DEDUCTION_ADD:{NAME:"deductionadd",SFFO:SFFO.payrollManagement.payrollInstructionManagement.workerGeneralDeductionInstructionManagement.workerGeneralDeductionInstruction_start.sffo,HASQUERY:!0,WORKFLOW_ENABLED:!0},DEDUCTION_CHANGE:{NAME:"deductionchange",SFFO:SFFO.payrollManagement.payrollInstructionManagement.workerGeneralDeductionInstructionManagement.workerGeneralDeductionInstruction_change.sffo,HASQUERY:!0,WORKFLOW_ENABLED:!0},DEDUCTION_REMOVE:{NAME:"deductionremove",SFFO:SFFO.payrollManagement.payrollInstructionManagement.workerGeneralDeductionInstructionManagement.workerGeneralDeductionInstruction_stop.sffo,WORKFLOW_ENABLED:!0},TRANSFER_GET:{NAME:"transferget",SFFO:SFFO.workerInformationManagement.workerManagement.workerAdvancementManagement.worker_transfer.sffo,WORKFLOW_ENABLED:!0}}}}]),angular.module("redbox.framework.meta").directive("adpMetaForm",["$injector",function($injector){var $compile=$injector.get("$compile"),MetaService=$injector.get("redbox.framework.meta.MetaService"),META_CONSTANTS=$injector.get("redbox.framework.meta.META_CONSTANTS"),errorTemplate='<adp-alert type="error" title="{{::lang.shared.OOPS_SOMETHING}}">{{errorText}}</adp-alert>';return{restrict:"A",require:"?ngModel",bindToController:{buttonLabels:"=",offline:"<"},controllerAs:"metaFormCtrl",controller:["$scope","$rootScope",function($scope,$rootScope){var ctrl=this;ctrl.lang=$rootScope.lang,$scope.onSaveClick=function(){ctrl.offline?$scope.$emit("adp-meta-form-success",{formName:$scope.formName,result:$scope.forms[$scope.formName].model}):($scope.$emit("adp-meta-form-processing",{formName:$scope.formName,processing:!0}),MetaService.submitForm($scope.forms[$scope.formName]).then(function(result){$scope.$emit("adp-meta-form-success",{formName:$scope.formName,result:result})},function(error){$scope.$emit("adp-meta-form-error",{formName:$scope.formName,error:error})}).finally(function(){$scope.$emit("adp-meta-form-processing",{formName:$scope.formName,processing:!1})}))},$scope.onCancelClick=function(){$scope.$emit("adp-meta-form-cancel",{formName:$scope.formName})}}],compile:function(element,attrs,transclude){return{post:function(scope,iElement,iAttrs,ctrl){function buildForm(){scope.$emit("adp-meta-form-processing",{formName:scope.config.name,processing:!0}),MetaService.buildForm(scope.config).then(function(form){scope.formName=form.name,scope.forms[scope.formName]=form,$compile(form.element)(scope),iElement.html(form.element)},function(error){scope.$emit("adp-meta-form-error",{formName:scope.config.name,error:error}),scope.errorText=error,iElement.html($compile(angular.element(errorTemplate))(scope))}).finally(function(){scope.$emit("adp-meta-form-processing",{formName:scope.config.name,processing:!1})})}scope.config={layout:iAttrs.layout?iAttrs.layout:"vertical",useRedboxMeta:!0,onSaveClick:"onSaveClick()",onCancelClick:"onCancelClick()"},ctrl&&ctrl.$formatters.push(function(modelValue){return scope.config.defaults=modelValue,!0}),scope.metaFormCtrl.buttonLabels&&_.assign(scope.config,{saveLabel:_.get(scope.metaFormCtrl,"buttonLabels.saveLabel"),cancelLabel:_.get(scope.metaFormCtrl,"buttonLabels.cancelLabel"),nextLabel:_.get(scope.metaFormCtrl,"buttonLabels.nextLabel"),prevLabel:_.get(scope.metaFormCtrl,"buttonLabels.prevLabe")}),scope.forms={},iAttrs.$observe("event",function(event){var eventObj;event&&(eventObj=META_CONSTANTS.EVENTS[event],eventObj&&(scope.config.sffo=eventObj.SFFO,scope.config.name=eventObj.NAME,scope.config.workflowEnabled=eventObj.WORKFLOW_ENABLED,eventObj.wrapper&&(scope.config.wrapper=eventObj.wrapper),scope.hasQuery=eventObj.HASQUERY,scope.hasQuery?iAttrs.$observe("query",function(query){query&&(scope.config.OData=query,buildForm())}):buildForm()))})}}}}}]),angular.module("redbox.framework.meta").service("redbox.framework.meta.MetaService",["$rootScope","$q","$http","adp.ng.logging.LoggerFactory","adp.ng.meta.MetaCoreService","adp.ng.meta.MetaUtilService","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.services.UserIdentityService","$stateParams",function($rootScope,$q,$http,loggerFactory,metaCoreService,metaUtilService,userPermissionService,userIdentity,$stateParams){function loadRedboxMeta(){deferRedboxMeta=$q.defer();var metaSrc="app/framework/modules/meta/meta.json";return $http.get(metaSrc).then(function(meta){REDBOX_META=meta.data,deferRedboxMeta.resolve(REDBOX_META)}).catch(function(error){logger.error("Redbox meta call failed",error.data),deferRedboxMeta.reject(error.data)}),deferRedboxMeta.promise}var REDBOX_META,deferRedboxMeta,logger=loggerFactory.getLogger("redbox.framework.meta.MetaService");this.getRedboxMeta=function(){return $q.when(REDBOX_META||deferRedboxMeta||loadRedboxMeta())},this.getMeta=function(sffo,OData,attr){var eventURI,config,_defer=$q.defer(),sffoWrapper=sffo.sffo?sffo:{sffo:sffo};return userPermissionService.init().then(function(){return attr&&angular.forEach(attr,function(item){item&&"aoid"===item.key&&(config={aoid:item.value})}),(eventURI=userPermissionService.getOperationHref(sffoWrapper,config))?(attr&&angular.forEach(attr,function(item){item&&(eventURI=eventURI.replace("{"+item.key+"}",item.value))}),void metaCoreService.getMeta(eventURI,OData,config).then(function(meta){_defer.resolve(meta)},function(error){_defer.reject(error)})):_defer.reject("href not found for operation - sffo not permitted to user")},function(error){_defer.reject(error)}),_defer.promise},this.getCodeListHref=function(meta,fieldName){var href,metaField=metaUtilService.getMetaField(meta,fieldName),schemaCnt=0;if(metaField&&metaField.codeList&&metaField.codeList.links&&metaField.codeList.links[0]&&(href=metaField.codeList.links[0].href,metaField.codeList.links[0].schema)){href+="?";for(var key in metaField.codeList.links[0].schema)metaField.codeList.links[0].schema.hasOwnProperty(key)&&(schemaCnt++,schemaCnt>1&&(href+="&"),href=href+key+"={{"+key+"}}")}return href},this.testBuildFormFromCustomMeta=function(customMeta,form){logger.trace("testBuildFormFromCustomMeta"),logger.debug("Building form: ",JSON.stringify(customMeta));var defer=$q.defer(),promises=[];return form.name="testFormFromCustomMeta",form.meta=customMeta.meta,promises.push(this.getRedboxMeta()),$q.all(promises).then(function(){form.customMeta=form.useRedboxMeta?REDBOX_META:void 0,metaCoreService.generateForm(form).then(function(element){form.element=element,defer.resolve(form)},function(error){defer.reject(error)})},function(error){defer.reject(error)}),defer.promise},this.buildForm=function(form){logger.trace("buildForm"),logger.debug("Building form: ",JSON.stringify(form.sffo));var _defer=$q.defer(),aoid=form.aoid?form.aoid:$stateParams.associateOID,config=[{key:"aoid",value:aoid}],request={metaData:this.getMeta(form.sffo,form.OData,config),redboxMeta:this.getRedboxMeta(),associateOID:aoid,loggedInAoid:userIdentity.getAoid()};return $q.all(request).then(function(results){var associateOID=results.associateOID||results.loggedInAoid;form.defaults||(form.defaults={}),form.defaults["/data/eventContext/worker/associateOID"]||(form.defaults["/data/eventContext/worker/associateOID"]=associateOID,form.defaults["/data/eventContext/associateOID"]=associateOID),form.associateOID=associateOID,form.actorOID=results.loggedInAoid,form.meta=results.metaData.meta,form.meta&&""!==form.meta?(form.customMeta=form.useRedboxMeta?REDBOX_META:void 0,metaCoreService.generateForm(form).then(function(element){form.element=element,_defer.resolve(form)},function(error){_defer.reject(error)})):(logger.error("Build form failed no meta defined for form"),_defer.reject("Build form failed no meta defined for form"))},function(error){logger.error("Build form failed",JSON.stringify(error)),_defer.reject(error)}),_defer.promise},this.submitForm=function(form){logger.trace("submitForm"),logger.debug("Submitting form: ",JSON.stringify(form.sffo));var eventURI,result,defer=$q.defer(),configuration={aoid:form.associateOID?form.associateOID:$stateParams.associateOID};return form&&form.name&&form.model||(result={status:"Invalid form",error:!0},logger.error("Invalid form",JSON.stringify(result)),defer.reject(result)),eventURI=userPermissionService.getOperationHref({sffo:form.sffo},configuration),eventURI?(form.workflowEnabled&&(eventURI="/wf"+eventURI),$http.post(eventURI,form.model,configuration).then(function(response){result={data:response.data,status:response.status,error:!1},logger.info("Submit form success",JSON.stringify(result)),form.broadcast&&$rootScope.$broadcast(form.sffo[3]),defer.resolve(result)}).catch(function(error){result={data:error.data,status:error.status,error:!0},logger.error("Submit form failed",JSON.stringify(result)),defer.reject(result)})):(result={status:"Form operation not supported",error:!0},defer.reject(result)),defer.promise}}]),angular.module("redbox.framework.api").service("redbox.framework.api.ApiCacheService",["$cacheFactory",function($cacheFactory){function set(key,value){cache.put(key,value)}function get(key){return cache.get(key)}var cache=$cacheFactory("redboxCache",{capacity:50});return{set:set,get:get}}]),angular.module("redbox.framework.api").factory("redbox.framework.api.APIRequestConstructorFactory",["$http","$injector",function($http,$injector){function APIRequestConstructor(req){return new APIRequest(req)}function APIError(message){this.name="API Request configObject Error",this.message=message||"Invalid configuration object passed"}function validateConfigObject(configObject){if(!configObject.hasOwnProperty("url"))return new APIError("request URI must be specified")}function APIRequest(req){validateConfigObject(req);var verb=parseSFFO(req.sffo);this.makeCall=function(){return userPermissionService.init().then(function(data){var href=userPermissionService.getOperationHref(req.sffo);req.isWorkflow&&(href="/wf"+href),req.queryString&&(href+=req.queryString);var config={method:verb,url:href,headers:req.headers};return req.POSTdata&&(config.data=req.POSTdata),$http(config)})}}function parseSFFO(sffo){var verbString=sffo.sffo[sffo.sffo.length-1].split(".");return verbString=verbString[verbString.length-1],"read"===verbString?"GET":"POST"}var userPermissionService=$injector.get("redbox.ext.shared.services.UserPermissionService");return{ApiRequestConstructor:APIRequestConstructor}}]),angular.module("redbox.framework.api").service("redbox.framework.api.APIRequestService",["$http","$q","$injector",function($http,$q,$injector){function testDao(){var testAPI=new APIRequestConstructor(sffo.payrollManagement.payrollInstructionManagement.taxWithholdingManagement.worker_usFederal_taxWithholding_election_read);return testAPI.makeCall()}function getRequest(configObject){var reqValidation=validateConfigObject(configObject),promiseNamespace=$q.defer();if(cache[configObject.url]&&!configObject.cacheBust)return cache[configObject.url].promise;if(_validConfigObject){configObject.method="GET",cache[configObject.url]=promiseNamespace;var request={method:"GET",url:configObject.url,headers:configObject.headers};return $http(request).then(function(results){promiseNamespace.resolve(results.data)}).catch(function(e){promiseNamespace.reject(e.data)}),promiseNamespace.promise}return errorDefer.reject(reqValidation),delete cache[configObject.url],errorDefer.promise}function validateConfigObject(configObject){if(!configObject.hasOwnProperty("url"))return new APIError("request URI must be specified")}function APIRequestConstructor(verb,_sffo,cacheBust){this.verb=verb,this.sffo=_sffo,this.cacheBust=cacheBust||!1,this.makeCall=function(){return userPermissionService.init().then(function(data){var href=userPermissionService.getOperationHref(sffo);return $http.get(href)})}}var _validConfigObject=!0,errorDefer=$q.defer(),cache={},userPermissionService=$injector.get("redbox.ext.shared.services.UserPermissionService"),sffo=$injector.get("redbox.ext.shared.constants.SFFOConstant");return{getRequest:getRequest,testFederalWithholding:testDao};var APIError}]),angular.module("redbox.framework.directives").directive("adpSelection",[function(){function link($scope,$element,attrs){function isTruthy(attributeValue){return attributeValue&&"false"!==attributeValue&&"undefined"!==attributeValue&&"null"!==attributeValue&&"0"!==attributeValue}var currentSelectionClass;$element.addClass("adp-selection"),attrs.$observe("adpSelection",function(value){isTruthy(value)?($element.addClass(attrs.selectionClass),currentSelectionClass=attrs.selectionClass):($element.removeClass(attrs.selectionClass),currentSelectionClass=void 0)}),attrs.$observe("selectionClass",function(value){isTruthy(value)?isTruthy(attrs.adpSelection)&&($element.removeClass(currentSelectionClass),$element.addClass(value),currentSelectionClass=value):($element.removeClass(currentSelectionClass),currentSelectionClass=void 0)})}return{restrict:"A",link:link}}]),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.CrossTypeCtrl",["$scope","redbox.framework.tasks.TasksService",function($scope,tasksService){"wfNotifications"===$scope.taskType?$scope.tasks=tasksService.taskData.notifications:$scope.tasks=tasksService.taskData.tasks,angular.forEach($scope.tasks,function(task){task.id===$scope.taskType?task.active=!0:task.active=!1}),$scope.$watch(function(){return tasksService.taskData.tasks},function(tasks){openSlideIn(tasks)}),$scope.$watch(function(){return tasksService.taskData.notifications},function(tasks){openSlideIn(tasks)});var openSlideIn=function(tasks){var doneTasksIds=_.pluck($scope.tasks,"id");_.forEach(tasks,function(task){task.url=task.taskListUrl,$("#"+task.id+"_doneIcon").addClass("invisible"),doneTasksIds=_.reject(doneTasksIds,function(id){return task.id===id})}),_.forEach(doneTasksIds,function(id){$("#"+id+"_doneIcon").removeClass("invisible")})}}]),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.MockTimeCardListCtrl",["$scope","redbox.framework.tasks.TasksService",function($scope,tasksService){var mockResponse={message:"unapproved Timecards",count:2,icon:"fa fa-clock-o",singleItemUrl:"app/framework/modules/tasks/mock/mock-policies-tasks.html",subtext:"15 exceptions"};$scope.init=function(isMgr,id){$scope.isMgr=isMgr,mockResponse.id=id,isMgr?"mockTimeCard1"===id?(mockResponse.taskListUrl="app/framework/modules/tasks/mock/mock-mgrtimecard-approvals.html",mockResponse.title="Team Approval"):(mockResponse.taskListUrl="app/framework/modules/tasks/mock/mock-mgrtimecard1-approvals.html",mockResponse.title="Team Approval 2"):(mockResponse.taskListUrl="app/framework/modules/tasks/mock/mock-timecard-approvals.html",mockResponse.title="Approve Timecard")},$scope.timecards=[{name:"First Policy",accepted:!1},{name:"SecondPolicy",accepted:!1}],$scope.$watch("timecards",function(){var unaccepted=_.filter($scope.timecards,function(card){return!card.accepted});mockResponse.count!==unaccepted.length&&(mockResponse.count=unaccepted.length,tasksService.updateTaskData(mockResponse)),$scope.allAccepted=0===unaccepted.length},!0)}]),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.DeductionApprovalCtrl",["$timeout","redbox.shared.constants.AppConstant","redbox.framework.tasks.factory.DeductionWorkflowTaskService","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($timeout,appConstant,deductionWorkflowTaskService,TASKS_CONSTANTS,loggerFactory){function removeActionedItems(){$timeout(function(){vm.deductionApprovalsInfo=_.reject(vm.deductionApprovalsInfo,function(da){return"success"===da.status||"rejected"===da.status})},appConstant.FADE_DURATION)}var logger=loggerFactory.getLogger("redbox.framework.tasks.DeductionApprovalCtrl"),vm=this;vm.TASKS_CONSTANTS=TASKS_CONSTANTS,vm.initialize=function(){vm.loadingIndicator=!0,deductionWorkflowTaskService.getDeductionTasks().then(function(deductionTasks){logger.debug("Deductions Tasks Pending : "+deductionTasks.length),vm.deductionApprovalsInfo=deductionTasks.data,angular.forEach(vm.deductionApprovalsInfo,function(deductionApproval){deductionApproval.deduction.deductionCode.codeValue.value?deductionApproval.deductionCodeLabel=deductionApproval.deduction.deductionCode.codeValue.value:deductionApproval.deductionCodeLabel=deductionApproval.deduction.deductionCode.codeValue})},function(error){logger.error("Error retrieving deductions",error)}).finally(function(){vm.loadingIndicator=!1})},vm.approveRequest=function(deductionApproval){deductionApproval.loadingIndicator=!0,deductionWorkflowTaskService.approveRequest(deductionApproval).then(function(){logger.debug("Deduction Request Approved : "+deductionApproval),deductionApproval.status="success",removeActionedItems()},function(error){logger.error("Error approving request",error)}).finally(function(){deductionApproval.loadingIndicator=!1})},vm.rejectRequest=function(deductionApproval){deductionApproval.loadingIndicator=!0,deductionWorkflowTaskService.rejectRequest(deductionApproval).then(function(){logger.debug("Deduction Request Rejected : "+deductionApproval),deductionApproval.status="rejected",removeActionedItems()},function(error){logger.error("Error rejecting request",error)}).finally(function(){deductionApproval.loadingIndicator=!1})},vm.initialize()}]),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.DirectDepositApprovalCtrl",["$timeout","redbox.shared.constants.AppConstant","redbox.framework.tasks.factory.DirectDepositWorkflowTaskService","adp.ng.logging.LoggerFactory","redbox.pay.DirectDepositConstant","redbox.pay.ErrorService",function($timeout,appConstant,DirectDepositWorkflowTaskService,loggerFactory,directDepositConstants,errorService){function initialize(){vm.loadingIndicator=!0,DirectDepositWorkflowTaskService.getDirectDepositTasks(!0).then(function(directDepositTasks){logger.debug("Direct Deposit Tasks Pending : "+directDepositTasks.length),vm.directDepositApprovals=directDepositTasks.data}).catch(function(error){logger.error("Error retrieving direct deposit",error),vm.taskError=!0}).finally(function(){vm.loadingIndicator=!1})}function setApproveRejectError(directDepositApproval,error){directDepositApproval.isConflictingError=errorService.isConflictingError(error);var errorObj=errorService.getErrorMessage(error);directDepositApproval.taskActionError=errorObj.isError,vm.taskErrorMessage=errorObj.message}function removeActionedItems(){$timeout(function(){vm.directDepositApprovals=_.reject(vm.directDepositApprovals,function(directDepositApproval){return directDepositApproval.status===directDepositConstants.APPROVAL_SUCCESS||directDepositApproval.status===directDepositConstants.APPROVAL_REJECTED})},appConstant.FADE_DURATION)}var logger=loggerFactory.getLogger("redbox.framework.tasks.DirectDepositApprovalCtrl"),vm=this;vm.taskError=!1,vm.approveRequest=function(directDepositApproval){return vm.loadingIndicator=!0,DirectDepositWorkflowTaskService.approveRequest(directDepositApproval).then(function(){logger.debug("Direct Deposit Request Approved : "+directDepositApproval),directDepositApproval.status=directDepositConstants.APPROVAL_SUCCESS,removeActionedItems()}).catch(function(error){setApproveRejectError(directDepositApproval,error)}).finally(function(){vm.loadingIndicator=!1})},vm.rejectRequest=function(directDepositApproval){return vm.loadingIndicator=!0,DirectDepositWorkflowTaskService.rejectRequest(directDepositApproval).then(function(){logger.debug("Withholding Request Rejected : "+directDepositApproval),directDepositApproval.status=directDepositConstants.APPROVAL_REJECTED,removeActionedItems()}).catch(function(error){setApproveRejectError(directDepositApproval,error)}).finally(function(){vm.loadingIndicator=!1})},vm.refreshData=function(){initialize()},initialize()}]),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.EmergencyContactApprovalCtrl",["$timeout","redbox.shared.constants.AppConstant","redbox.framework.tasks.factory.EmergencyContactWorkflowTaskService","redbox.framework.tasks.factory.ProfileWorkflowService","redbox.framework.tasks.TASKS_CONSTANTS","$language","adp.ng.logging.LoggerFactory","$stateParams",function($timeout,appConstant,emergencyContactWorkflowTaskService,profileWorkflowTaskService,TASKS_CONSTANTS,$language,loggerFactory,$stateParams){var logger=loggerFactory.getLogger("redbox.framework.tasks.EmergencyContactApprovalCtrl"),processing=!1,vm=this;vm.actionTaken=[],vm.validationResult={},vm.emergencyApprovalsInfo=[],vm.initialize=function(){vm.loadingIndicator=!0,emergencyContactWorkflowTaskService.getEmergencyContactTasks().then(function(emergencyContactsTasks){vm.emergencyApprovalsInfo=emergencyContactsTasks.data,angular.forEach(vm.emergencyApprovalsInfo,function(emergencyApproval){switch(emergencyApproval.showContent=!0,emergencyApproval.isApproveSelected=!1,emergencyApproval.isRejectSelected=!1,emergencyApproval.isNetworkErrorinSubmission=!1,emergencyApproval.isSelected=!1,emergencyApproval.isCurrentView=!1,emergencyApproval.currentComment="",emergencyApproval.employee.action){case TASKS_CONSTANTS.ACTIONS.ADD:emergencyApproval.getTextLine=" "+$language.get("framework.TASKS_PLEASE_ADD_MY_CONTACT");break;case TASKS_CONSTANTS.ACTIONS.CHANGE:emergencyApproval.getTextLine=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_CONTACT");break;case TASKS_CONSTANTS.ACTIONS.REMOVE:emergencyApproval.getTextLine=" "+$language.get("framework.TASKS_PLEASE_DELETE_MY_CONTACT");break;default:emergencyApproval.getTextLine=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_CONTACT")}vm.loadingIndicator=!1})}).catch(function(error){logger.error("Error retrieving emergency contacts",error)})},vm.isActionTaken=function(emergencyApproval){return vm.actionTaken.indexOf(emergencyApproval)!==-1},vm.takeEmergencyRequest=function(emergencyApproval,action){if(!processing){vm.loadingIndicator=!0,processing=!0;var task=profileWorkflowTaskService.getTask(emergencyApproval,action,"emergencyContact",emergencyApproval.comment);profileWorkflowTaskService.takeAction(task).then(function(){vm.loadingIndicator=!1,emergencyApproval.selected=!0,profileWorkflowTaskService.updateObjectProperties(emergencyApproval,action,"success"),vm.actionTaken.push(emergencyApproval),emergencyContactWorkflowTaskService.init(!0,$stateParams.associateOID),processing=!1,emergencyApproval.showContent=!1,$timeout(function(){vm.emergencyApprovalsInfo=_.reject(vm.emergencyApprovalsInfo,function(contact){return contact.isApproveSelected===!0||contact.isRejectSelected===!0})},appConstant.FADE_DURATION)}).catch(function(error){profileWorkflowTaskService.updateObjectProperties(emergencyApproval,action,"failed"),processing=!1})}},vm.validateComment=function(validationResult){vm.validationResult.comment=validationResult},vm.getAddressLine=function(emergencyContact){var addressArray=[];return emergencyContact.address?(emergencyContact.address.cityName&&""!==emergencyContact.address.cityName&&addressArray.push(emergencyContact.address.cityName),emergencyContact.address.countrySubdivisionLevel1&&emergencyContact.address.countrySubdivisionLevel1.codeValue&&""!==emergencyContact.address.countrySubdivisionLevel1.codeValue&&(emergencyContact.address.cityName&&""!==emergencyContact.address.cityName&&(addressArray[0]=addressArray[0]+","),addressArray.push(emergencyContact.address.countrySubdivisionLevel1.codeValue)),emergencyContact.address.postalCode&&""!==emergencyContact.address.postalCode&&addressArray.push(emergencyContact.address.postalCode),0===addressArray.length?"":addressArray.join(" ")):""}}]),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.PersonalContactApprovalCtrl",["redbox.shared.constants.AppConstant","$timeout","redbox.framework.tasks.factory.PersonalContactWorkflowTaskService","redbox.framework.tasks.factory.ProfileWorkflowService","redbox.framework.tasks.TASKS_CONSTANTS","$language","$stateParams",function(appConstant,$timeout,personalContactWorkflowTaskService,profileWorkflowTaskService,TASKS_CONSTANTS,$language,$stateParams){var processing=!1,vm=this;vm.actionTaken=[],vm.validationResult={},vm.personalContactApprovalsInfo=[];var phoneURL="app/framework/modules/tasks/portal-messages/views/single-phone-workflow-approval.html",emailURL="app/framework/modules/tasks/portal-messages/views/single-email-workflow-approval.html",addressURL="app/framework/modules/tasks/portal-messages/views/single-address-workflow-approval.html",cdfURL="app/framework/modules/tasks/portal-messages/views/single-cdf-workflow-approval.html";vm.initialize=function(){vm.loadingIndicator=!0,personalContactWorkflowTaskService.getPersonalContactTasks().then(function(personalContactsTasks){vm.personalContactApprovalsInfo=getUpdatedRecords(personalContactsTasks.data),vm.loadingIndicator=!1})};var getUpdatedRecords=function(list){return angular.forEach(list,function(contact){contact.showContent=!0,contact.isApproveSelected=!1,contact.isRejectSelected=!1,contact.isNetworkErrorinSubmission=!1,contact.isSelected=!1,contact.isCurrentView=!1,contact.currentComment="";var textDisplay,action,type=contact.employee.type,subtype=contact.employee.subtype;switch(type){case TASKS_CONSTANTS.TYPES.PHONE:switch(contact.typeURL=phoneURL,contact.icon="phone",contact.title=$language.get("framework.NOTIFICATION_TITLE_PHONE_NUMBER"),!contact.employee.currentData.formattedNumber&&contact.employee.pendingData.formattedNumber?action=TASKS_CONSTANTS.ACTIONS.ADD:contact.employee.currentData.formattedNumber&&contact.employee.pendingData.formattedNumber?action=TASKS_CONSTANTS.ACTIONS.CHANGE:contact.employee.currentData.formattedNumber&&!contact.employee.pendingData.formattedNumber&&(action=TASKS_CONSTANTS.ACTIONS.REMOVE),subtype){case TASKS_CONSTANTS.SUBTYPES.PERSONAL_LANDLINE:action===TASKS_CONSTANTS.ACTIONS.ADD?textDisplay=" "+$language.get("framework.TASKS_PLEASE_ADD_MY_PERSONAL_PHONE"):action===TASKS_CONSTANTS.ACTIONS.CHANGE?textDisplay=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_PERSONAL_PHONE"):action===TASKS_CONSTANTS.ACTIONS.REMOVE&&(textDisplay=" "+$language.get("framework.TASKS_PLEASE_REMOVE_MY_PERSONAL_PHONE"));break;case TASKS_CONSTANTS.SUBTYPES.PERSONAL_MOBILE:action===TASKS_CONSTANTS.ACTIONS.ADD?textDisplay=" "+$language.get("framework.TASKS_PLEASE_ADD_MY_PERSONAL_MOBILE"):action===TASKS_CONSTANTS.ACTIONS.CHANGE?textDisplay=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_PERSONAL_MOBILE"):action===TASKS_CONSTANTS.ACTIONS.REMOVE&&(textDisplay=" "+$language.get("framework.TASKS_PLEASE_REMOVE_MY_PERSONAL_MOBILE"));break;case TASKS_CONSTANTS.SUBTYPES.WORK_LANDLINE:action===TASKS_CONSTANTS.ACTIONS.ADD?textDisplay=" "+$language.get("framework.TASKS_PLEASE_ADD_MY_WORK_PHONE"):action===TASKS_CONSTANTS.ACTIONS.CHANGE?textDisplay=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_WORK_PHONE"):action===TASKS_CONSTANTS.ACTIONS.REMOVE&&(textDisplay=" "+$language.get("framework.TASKS_PLEASE_REMOVE_MY_WORK_PHONE"));break;case TASKS_CONSTANTS.SUBTYPES.WORK_MOBILE:action===TASKS_CONSTANTS.ACTIONS.ADD?textDisplay=" "+$language.get("framework.TASKS_PLEASE_ADD_MY_WORK_MOBILE"):action===TASKS_CONSTANTS.ACTIONS.CHANGE?textDisplay=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_WORK_MOBILE"):action===TASKS_CONSTANTS.ACTIONS.REMOVE&&(textDisplay=" "+$language.get("framework.TASKS_PLEASE_REMOVE_MY_WORK_MOBILE"));
break;case TASKS_CONSTANTS.SUBTYPES.WORK_FAX:action===TASKS_CONSTANTS.ACTIONS.ADD?textDisplay=" "+$language.get("framework.TASKS_PLEASE_ADD_MY_WORK_FAX"):action===TASKS_CONSTANTS.ACTIONS.CHANGE?textDisplay=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_WORK_FAX"):action===TASKS_CONSTANTS.ACTIONS.REMOVE&&(textDisplay=" "+$language.get("framework.TASKS_PLEASE_REMOVE_MY_WORK_FAX"))}break;case TASKS_CONSTANTS.TYPES.ADDRESS:contact.typeURL=addressURL,contact.icon="map-marker",contact.title=$language.get("framework.NOTIFICATION_TITLE_ADDRESS_CHANGE"),!contact.employee.currentData&&contact.employee.pendingData?textDisplay=" "+$language.get("framework.TASKS_PLEASE_ADD_MY_ADDRESS"):contact.employee.currentData&&contact.employee.pendingData?textDisplay=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_ADDRESS"):contact.employee.currentData&&!contact.employee.pendingData&&(textDisplay=" "+$language.get("framework.TASKS_PLEASE_DELETE_MY_ADDRESS"));break;case TASKS_CONSTANTS.TYPES.EMAIL:contact.typeURL=emailURL,contact.icon="envelope",contact.title=$language.get("framework.NOTIFICATION_TITLE_EMAIL_CHANGE"),!contact.employee.currentData&&contact.employee.pendingData?textDisplay=" "+$language.get("framework.TASKS_PLEASE_ADD_MY_EMAIL"):contact.employee.currentData&&contact.employee.pendingData?textDisplay=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_EMAIL"):contact.employee.currentData&&!contact.employee.pendingData&&(textDisplay=" "+$language.get("framework.TASKS_PLEASE_DELETE_MY_EMAIL"),contact.isCurrentView=!0);break;case TASKS_CONSTANTS.TYPES.CUSTOM_FIELDS:contact.typeURL=cdfURL,contact.icon="asterisk",contact.title=$language.get("framework.NOTIFICATION_CUSTOM_FIELDS"),textDisplay=" "+$language.get("framework.TASKS_PLEASE_CHANGE_MY_INFO")}contact.getTextLine=textDisplay}),list};vm.takeRequest=function(addressApproval,action){if(!processing){vm.loadingIndicator=!0,processing=!0;var task=profileWorkflowTaskService.getTask(addressApproval,action,"personalContact",addressApproval.comment);profileWorkflowTaskService.takeAction(task).then(function(){vm.loadingIndicator=!1,addressApproval.selected=!0,profileWorkflowTaskService.updateObjectProperties(addressApproval,action,"success"),vm.actionTaken.push(addressApproval),personalContactWorkflowTaskService.init(!0,$stateParams.associateOID),processing=!1,addressApproval.showContent=!1,$timeout(function(){vm.personalContactApprovalsInfo=_.reject(vm.personalContactApprovalsInfo,function(contact){return contact.isApproveSelected===!0||contact.isRejectSelected===!0})},appConstant.FADE_DURATION)}).catch(function(error){profileWorkflowTaskService.updateObjectProperties(addressApproval,action,"failed"),processing=!1})}},vm.isActionTaken=function(addressApproval){return vm.actionTaken.indexOf(addressApproval)!==-1},vm.validateComment=function(validationResult){vm.validationResult.comment=validationResult},vm.getAddressLine=function(address){var addressArray=[];return address?(address.cityName&&""!==address.cityName&&addressArray.push(address.cityName),address.countrySubdivisionLevel1&&address.countrySubdivisionLevel1.codeValue&&""!==address.countrySubdivisionLevel1.codeValue&&(address.cityName&&""!==address.cityName&&(addressArray[0]=addressArray[0]+","),addressArray.push(address.countrySubdivisionLevel1.codeValue)),address.postalCode&&""!==address.postalCode&&addressArray.push(address.postalCode),0===addressArray.length?"":addressArray.join(" ")):""}}]),angular.module("redbox.framework.tasks").service("redbox.framework.tasks.PortalMessagesService",["$http","$q","$filter","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant",function($http,$q,$filter,loggerFactory,userPermission,SFFO){var notificationsDeferred,tasksDeferred,logger=loggerFactory.getLogger("redbox.framework.tasks.PortalMessagesService"),notificationsUrl="/v1_0/O/A/notifications?all=0&types=notification&incmp_unread=-1",tasksUrl="/v1_0/O/A/notifications?all=0&types=task&incmp_unread=-1",workflowData={notifications:[],tasks:[]},getData=function(cacheBustFlag){var deferred=$q.defer();return userPermission.init().then(function(){userPermission.hasPermission(SFFO.messageCenterManagement.notificationManagement.notificationViewing)?$q.all([getNotifications(cacheBustFlag),getTasks(cacheBustFlag)]).then(function(response){workflowData.notifications=response[0],workflowData.tasks=response[1],deferred.resolve(workflowData)}).catch(function(error){deferred.reject(error)}):(logger.debug("User not permitted to notificationViewing"),deferred.resolve(workflowData))}),deferred.promise},getNotifications=function(cacheBustFlag){return notificationsDeferred&&!cacheBustFlag?notificationsDeferred.promise:(notificationsDeferred=$q.defer(),userPermission.init().then(function(){userPermission.hasPermission(SFFO.messageCenterManagement.notificationManagement.notificationViewing)?$http.get(notificationsUrl).then(function(results){var notifications=results.data?results.data.notifications:[];notifications=_.reject(notifications,function(notification){return notification.readIndicator===!0}),notificationsDeferred.resolve(notifications)}).catch(function(error){notificationsDeferred.reject(error.data)}):(logger.debug("User not permitted to notificationViewing"),notificationsDeferred.resolve([]))}),notificationsDeferred.promise)},getTasks=function(cacheBustFlag){return tasksDeferred&&!cacheBustFlag?tasksDeferred.promise:(tasksDeferred=$q.defer(),userPermission.init().then(function(){userPermission.hasPermission(SFFO.messageCenterManagement.notificationManagement.notificationViewing)?$http.get(tasksUrl).then(function(results){var tasks=_.get(results,"data.notifications",[]);tasksDeferred.resolve(tasks)}).catch(function(error){tasksDeferred.reject(error)}):(logger.debug("User not permitted to notificationViewing"),tasksDeferred.resolve([]))}),tasksDeferred.promise)},getRedboxWorkflowTasks=function(cacheBustFlag){var deferred=$q.defer(),promise=deferred.promise,rbTasks=[];return getTasks(cacheBustFlag).then(function(data){rbTasks=_.filter(data,function(task){return"Redbox Workflow Task"===task.messageType}),deferred.resolve(rbTasks)}).catch(function(error){deferred.reject(error)}),promise},getTaskDecisionURI=function(canonicalURI){var deferred=$q.defer(),promise=deferred.promise;return $http.get(canonicalURI).then(function(response){deferred.resolve(response.data)}).catch(function(err){deferred.reject(err.data)}),promise},submitTaskDecision=function(URI,comment){var deferred=$q.defer(),promise=deferred.promise,payload={comment:comment};return $http.post("/wf/action"+URI,payload).then(function(res){getData(!0),deferred.resolve(res.data)}).catch(function(err){deferred.reject(err.data)}),promise},getRedboxWorkflowNotifications=function(config,cacheBustFlag){var totalRecords,deferred=$q.defer(),promise=deferred.promise,rbNotifications=[],paginationConfig={index:0,pageSize:40};return getNotifications(cacheBustFlag).then(function(data){rbNotifications=_.filter(data,function(notification){return"Redbox Workflow Notification"===notification.messageType}),totalRecords=rbNotifications.length,config&&config.filters&&(rbNotifications=$filter("notificationFilter")(rbNotifications,config.filters.byDate),rbNotifications=$filter("notificationFilter")(rbNotifications,config.filters.byType),rbNotifications=$filter("notificationFilter")(rbNotifications,config.filters.byStatus)),config&&config.pagination?(angular.extend(paginationConfig,config.pagination),deferred.resolve({totalRecords:totalRecords,filteredRecords:rbNotifications.length,rbNotifications:rbNotifications.slice(paginationConfig.index,paginationConfig.index+paginationConfig.pageSize)})):deferred.resolve(rbNotifications)}).catch(function(error){deferred.reject(error)}),promise},getNotificationDetail=function(details){var notificationId=details.notificationUri.href.substring(23,32),deferred=$q.defer();return $http.get("/wf/hr/v2/workers/"+details.originatorAssociateOID+"?notificationId="+notificationId).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),deferred.promise},dismissNotification=function(detail){var deferred=$q.defer();return $http.post("/wf/action/core/v1/workflow/notifications/dismiss",detail).then(function(result){deferred.resolve(result.data),notificationsDeferred=null}).catch(function(error){deferred.reject(error)}),deferred.promise},getRedboxWorkflowTasksForEmployee=function(targetAoid){return getRedboxWorkflowTasks().then(function(tasks){return _.filter(tasks,function(task){return task.relatedAssociateRef.associateOID===targetAoid})})};this.getData=getData,this.getNotifications=getNotifications,this.getTasks=getTasks,this.getRedboxWorkflowTasks=getRedboxWorkflowTasks,this.getRedboxWorkflowNotifications=getRedboxWorkflowNotifications,this.getTaskDecisionURI=getTaskDecisionURI,this.submitTaskDecision=submitTaskDecision,this.workflowData=workflowData,this.getNotificationDetail=getNotificationDetail,this.dismissNotification=dismissNotification,this.getRedboxWorkflowTasksForEmployee=getRedboxWorkflowTasksForEmployee}]),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.ProfessionalCredentialsApprovalCtrl",["$injector",function($injector){function removeActionedItems(){$timeout(function(){vm.professionalCredentialApprovalsInfo=_.reject(vm.professionalCredentialApprovalsInfo,function(pca){return"success"===pca.status||"rejected"===pca.status})},APP_CONSTANT.FADE_DURATION)}var $timeout=$injector.get("$timeout"),ProfessionalCredentialsWorkflowTaskService=$injector.get("redbox.framework.tasks.factory.ProfessionalCredentialsWorkflowTaskService"),TASKS_CONSTANTS=$injector.get("redbox.framework.tasks.TASKS_CONSTANTS"),APP_CONSTANT=$injector.get("redbox.shared.constants.AppConstant"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=loggerFactory.getLogger("redbox.framework.tasks.ProfessionalCredentialsApprovalCtrl"),vm=this;vm.TASKS_CONSTANTS=TASKS_CONSTANTS,vm.initialize=function(){vm.loadingIndicator=!0,ProfessionalCredentialsWorkflowTaskService.getProfessionalCredentialsTasks(!0).then(function(professionalCredentialsTasks){logger.debug("Professional Credential Tasks Pending : "+professionalCredentialsTasks.length),vm.professionalCredentialApprovalsInfo=professionalCredentialsTasks.data},function(error){logger.error("Error retrieving professional credentials",error)}).finally(function(){vm.loadingIndicator=!1})},vm.approveRequest=function(professionalCredentialApproval){vm.loadingIndicator||(vm.loadingIndicator=!0,ProfessionalCredentialsWorkflowTaskService.approveRequest(professionalCredentialApproval).then(function(){logger.debug("Professional Credential Request Approved : "+professionalCredentialApproval),professionalCredentialApproval.status="success",removeActionedItems()},function(error){logger.error("Error approving request",error)}).finally(function(){vm.loadingIndicator=!1}))},vm.rejectRequest=function(professionalCredentialApproval){vm.loadingIndicator||(vm.loadingIndicator=!0,ProfessionalCredentialsWorkflowTaskService.rejectRequest(professionalCredentialApproval).then(function(){logger.debug("Professional Credential Request Rejected : "+professionalCredentialApproval),professionalCredentialApproval.status="rejected",removeActionedItems()},function(error){logger.error("Error rejecting request",error)}).finally(function(){vm.loadingIndicator=!1}))},vm.initialize()}]),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.TaxWithholdingApprovalCtrl",["$timeout","redbox.shared.constants.AppConstant","redbox.framework.tasks.factory.TaxWithholdingWorkflowTaskService","adp.ng.logging.LoggerFactory","redbox.pay.ErrorService",function($timeout,appConstant,TaxWithholdingWorkflowTaskService,loggerFactory,errorService){function setApproveRejectError(withholdingApproval,error){withholdingApproval.isConflictingError=errorService.isConflictingError(error);var errorObj=errorService.getErrorMessage(error);vm.taskErrorMessage=errorObj.message,withholdingApproval.taskActionError=errorObj.isError}function removeActionedItems(){$timeout(function(){vm.withholdingApprovalsInfo=_.reject(vm.withholdingApprovalsInfo,function(withholdingApproval){return"success"===withholdingApproval.status||"rejected"===withholdingApproval.status})},appConstant.FADE_DURATION)}var logger=loggerFactory.getLogger("redbox.framework.tasks.TaxWithholdingApprovalCtrl"),vm=this;vm.taskError=!1,vm.initialize=function(){vm.loadingIndicator=!0,TaxWithholdingWorkflowTaskService.getWithholdingTasks(!0).then(function(withholdingTasks){logger.debug("Withholding Tasks Pending : "+withholdingTasks.length),TaxWithholdingWorkflowTaskService.stripAlienCodeFromWithholdingTasks(withholdingTasks),vm.withholdingApprovalsInfo=withholdingTasks.data}).catch(function(error){logger.error("Error retrieving withholding",error),vm.taskError=!0}).finally(function(){vm.loadingIndicator=!1})},vm.approveRequest=function(withholdingApproval){return vm.loadingIndicator=!0,TaxWithholdingWorkflowTaskService.approveRequest(withholdingApproval).then(function(){logger.debug("Withholding Request Approved : "+withholdingApproval),withholdingApproval.status="success",removeActionedItems()}).catch(function(error){logger.error("Error approving request",error),setApproveRejectError(withholdingApproval,error)}).finally(function(){vm.loadingIndicator=!1})},vm.rejectRequest=function(withholdingApproval){return vm.loadingIndicator=!0,TaxWithholdingWorkflowTaskService.rejectRequest(withholdingApproval).then(function(){logger.debug("Withholding Request Rejected : "+withholdingApproval),withholdingApproval.status="rejected",removeActionedItems()}).catch(function(error){logger.error("Error rejecting request",error),setApproveRejectError(withholdingApproval,error)}).finally(function(){vm.loadingIndicator=!1})},vm.initialize()}]),angular.module("redbox.framework.tasks").component("managerTransferApprovalComponent",{templateUrl:"app/framework/modules/tasks/portal-messages/views/transfer-workflow-approvals.html",controller:["$timeout","redbox.shared.constants.AppConstant","redbox.framework.tasks.factory.ManagerTransferWorkflowTaskService","redbox.notifications.NotificationsTransferFactory","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($timeout,appConstant,managerTransferWorkflowTaskService,transferFactory,TASKS_CONSTANTS,loggerFactory){function removeActionedItems(){$timeout(function(){vm.transferApprovalsInfo=_.reject(vm.transferApprovalsInfo,function(da){return"success"===da.status||"rejected"===da.status})},appConstant.FADE_DURATION)}var logger=loggerFactory.getLogger("redbox.framework.tasks.ManagerTransferApprovalCtrl"),vm=this;vm.TASKS_CONSTANTS=TASKS_CONSTANTS,vm.$onInit=function(){vm.loadingIndicator=!0,managerTransferWorkflowTaskService.getTransfers().then(function(transferTasks){vm.transferApprovalsInfo=transferTasks.data},function(error){logger.error("Error retrieving transfers",error)}).finally(function(){vm.loadingIndicator=!1})},vm.approveRequest=function(transferApproval){transferApproval.loadingIndicator=!0,managerTransferWorkflowTaskService.approveRequest(transferApproval).then(function(){logger.debug("Transfer Request Approved : "+transferApproval),transferApproval.status="success",removeActionedItems()},function(error){logger.error("Error approving request",error),transferApproval.status="error"}).finally(function(){transferApproval.loadingIndicator=!1})},vm.rejectRequest=function(transferApproval){transferApproval.loadingIndicator=!0,managerTransferWorkflowTaskService.rejectRequest(transferApproval).then(function(){logger.debug("Transfer Request Rejected : "+transferApproval),transferApproval.status="rejected",removeActionedItems()},function(error){logger.error("Error rejecting request",error),transferApproval.status="error"}).finally(function(){transferApproval.loadingIndicator=!1})},vm.updateLabel=function(languageKey){return transferFactory.updateLabel(languageKey)}}],controllerAs:"managerTransferApprovalCtrl"}),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.DeductionWorkflowTaskService",["$rootScope","$q","$http","$language","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService","redbox.workflow.WorkflowUtils","adp.ng.logging.LoggerFactory",function($rootScope,$q,$http,$language,tasksService,portalMessagesService,workflowUtils,loggerFactory){function init(clearDeferred,employeeId){return clearDeferred&&(dDeferred=null),dDeferred?dDeferred.promise:(dDeferred=$q.defer(),portalMessagesService.getRedboxWorkflowTasks().then(function(tasks){deductionTasks.approvals=_.filter(tasks,function(task){return isDeductionTask(task.subject,employeeId,task.originatorAssociateOID)}),deductionTasks.approvals&&(response.count=deductionTasks.approvals.length,response.title=deductionTasks.approvals.length>1?" "+$language.get("framework.TASKS_DEDUCTION_APPROVALS"):" "+$language.get("framework.TASKS_DEDUCTION_APPROVAL"),tasksService.updateTaskData(response)),dDeferred.resolve(),dTaskDeferred=null,getDeductionTasks()}).catch(function(error){logger.error("Error occurred in reading workflow deduction tasks",error),dDeferred.reject(error)}),dDeferred.promise)}function isDeductionTask(subject,employeeId,taskAssociateOID){return employeeId&&taskAssociateOID?new RegExp("Deductions","i").test(subject)&&taskAssociateOID===employeeId:new RegExp("Deductions","i").test(subject)}function getDeductionTasks(){return dTaskDeferred?dTaskDeferred.promise:(dTaskDeferred=$q.defer(),deductionTasks.data=[],init().then(function(){var promises=[];angular.forEach(deductionTasks.approvals,function(task){var task={aoid:task.originatorAssociateOID,type:"deduction",url:task.notificationUri.href,timestamp:task.receiptDate};promises.push(getDeductionTaskData(task))}),$q.all(promises).then(function(){dTaskDeferred.resolve(deductionTasks)}).catch(function(error){logger.error("Error occurred in creating deduction employee data",error),dTaskDeferred.reject(error)})}),dTaskDeferred.promise)}function getDeductionTaskData(task){var deferred=$q.defer();return portalMessagesService.getTaskDecisionURI(task.url).then(function(data){task.name=data.notification.originatorName,task.approve=_.isArray(data.notification.actions[0].uris)?data.notification.actions[0].uris[0].href:data.notification.actions[0].uris.href,task.reject=_.isArray(data.notification.actions[1].uris)?data.notification.actions[1].uris[0].href:data.notification.actions[1].uris.href,processDeduction(task).then(function(){deferred.resolve()}).catch(function(error){logger.error("Error occurred in fetching deductions",error)})}).catch(function(error){logger.error("Error occurred in fetching URI for deductions task",error),deferred.reject(error)}),deferred.promise}function processDeduction(task){var deferred=$q.defer(),taskID=task.approve.split("/")[4],deductionTask={uri:{approve:task.approve,reject:task.reject},name:task.name,aoid:task.aoid,type:task.type,timestamp:task.timestamp,selected:!1,status:"pending"};return fetchDeduction(task.aoid,taskID).then(function(data){var pendingEvents=_.get(data,"pendingEvents");deductionTask.action=pendingEvents[0].resourcePath.split("/").pop().split(".").pop(),deductionTask.deduction=processPendingData(data),deductionTasks.data.push(deductionTask),deferred.resolve()}).catch(function(error){logger.error("Error occurred fetching professional credential by passing TaskID"),deferred.reject(error)}),deferred.promise}function processPendingData(data){var currentData=_.get(data,"currentData.workerGeneralDeductionInstructions[0].generalDeductionInstructions")||{},pendingData=_.get(data,"pendingEvents[0].body.events[0].data.transform.workerGeneralDeductionInstruction.generalDeductionInstruction")||{},pendingObj=_.clone(_.find(currentData,function(obj){return obj.itemID===_.get(data,"pendingEvents[0].body.events[0].data.eventContext.workerGeneralDeductionInstruction.generalDeductionInstruction.itemID")}),!0);return pendingObj?_.forOwn(pendingData,function(value,key){pendingObj[key]=value}):pendingObj=workflowUtils.map({},pendingData),_.forEach(currentData,function(obj){obj.itemID===pendingObj.itemID&&(pendingObj=workflowUtils.map(obj,pendingObj))}),pendingObj}function fetchDeduction(aoid,taskUrl){var url=DEDUCTION_URI.replace("{aoid}",aoid),deferred=$q.defer(),config={};return config.headers={"if-none-match":"any","loading-indicator":!1},$http.get(url+taskUrl,config).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),deferred.promise}function approveRequest(deductionApproval){return submitTaskDecision(deductionApproval,!0).then(function(){init(!0)})}function rejectRequest(deductionApproval){return submitTaskDecision(deductionApproval,!1).then(function(){init(!0)})}function submitTaskDecision(deductionApproval,isApproved){var deferred=$q.defer(),url=isApproved?_.get(deductionApproval,"uri.approve"):_.get(deductionApproval,"uri.reject");return portalMessagesService.submitTaskDecision(url,deductionApproval.comment).then(function(data){deferred.resolve()}).catch(function(error){logger.error("Error occurred in submitting task for approval",error),deferred.reject(error)}),deferred.promise}var dDeferred,dTaskDeferred,logger=loggerFactory.getLogger("redbox.framework.tasks.factory.DeductionWorkflowTaskService"),response={id:"deductionTask",title:$language.get("framework.TASKS_DEDUCTION_APPROVALS"),message:"showing voluntary deduction tasks",count:0,icon:"fa adp-fa-icon-coins",singleItemUrl:"app/framework/modules/tasks/portal-messages/views/single-deduction-workflow-approval.html",taskListUrl:"app/framework/modules/tasks/portal-messages/views/deduction-workflow-approvals.html"},deductionTasks={approvals:[],data:[]},DEDUCTION_URI="/wf/payroll/v1/workers/{aoid}/worker-general-deduction-instructions?taskId=";return{init:init,getDeductionTasks:getDeductionTasks,approveRequest:approveRequest,rejectRequest:rejectRequest}}]),angular.module("redbox.framework.tasks.factory").factory("redbox.framework.tasks.factory.DirectDepositWorkflowComparisonService",["redbox.workflow.WorkflowUtils","redbox.workflow.CONSTANTS","redbox.pay.directDeposit.DirectDepositService",function(WorkflowUtilsService,WORKFLOW_CONSTANTS,DirectDepositService){function getCodeValue(account,isPending){var accountType=isPending?"pending":"current",codeValuePath=accountType+".codeValueData.codeValue";return _.get(account,codeValuePath)}function getUniqueCodeValues(currentData,pendingData){return _.chain(_.union(currentData,pendingData)).map(function(account){return getCodeValue(account,_.has(account,"pending"))}).unique().valueOf()}function findMatchingAccount(data,codeValue,isPending){return _.chain(data).find(function(account){return getCodeValue(account,isPending)===codeValue}).get(isPending?"pending":"current").valueOf()}function determineReturnValue(pendingAccount,currentAccount){return pendingAccount&&currentAccount?{current:currentAccount,pending:pendingAccount}:pendingAccount&&!currentAccount?{pending:pendingAccount}:currentAccount&&!pendingAccount?{current:currentAccount,pending:{}}:void 0}function extractComparisonData(currentData,pendingData){var codeValues=getUniqueCodeValues(currentData,pendingData);return _.map(codeValues,function(codeValue){var pendingAccount=findMatchingAccount(pendingData,codeValue,!0),currentAccount=findMatchingAccount(currentData,codeValue,!1);return determineReturnValue(pendingAccount,currentAccount)})}function getComparisonData(currentData,pendingData,pendingEvents){var comparisonData=extractComparisonData(currentData,pendingData);return _.map(comparisonData,function(account){var mappedData=WorkflowUtilsService.map(account.current,account.pending),modificationData=DirectDepositService.isAccountModified(mappedData);return{current:account.current,pending:account.pending,comparisonData:mappedData,isPending:modificationData.isChanged,typeOfChange:modificationData.typeOfChange,workflow:{status:WORKFLOW_CONSTANTS.STATUS.PENDING,action:pendingEvents?WorkflowUtilsService.getPendingAction(_.head(pendingEvents)):"",approvalFrom:_.get(_.head(pendingEvents),"history[0].assignedTo",!1)}}})}return{getComparisonData:getComparisonData}}]),function(){angular.module("redbox.framework.tasks.factory").factory("redbox.framework.tasks.factory.DirectDepositWorkflowTaskModelService",["$language","redbox.pay.CommonConstant","redbox.pay.PayUtilityService",function($language,CommonConstant,PayUtilityService){function WorkflowTaskModel(){this.id="directDepositApprovals",this.title=$language.get("pay.DASHBOARD_DIRECT_DEPOSIT_WORKFLOW_TYPE_TITLE_SINGLE"),this.message=$language.get("pay.DASHBOARD_DIRECT_DEPOSIT_WORKFLOW_MESSAGE"),this.count=0,this.icon=CommonConstant.ICON.ICON_UNIVERSITY,this.singleItemUrl=PayUtilityService.getTemplate("FRAMEWORK_TASKS_PORTAL_MESSAGES","DIRECT_DEPOSIT_APPROVALS"),this.taskListUrl=PayUtilityService.getTemplate("FRAMEWORK_TASKS_PORTAL_MESSAGES","DIRECT_DEPOSIT_APPROVALS")}function getWorkflowTasksModel(tasks,employeeId){var workflowTasks=new WorkflowTaskModel,approvals=getApprovalsFromTask(tasks,employeeId);return workflowTasks.count=approvals.length,workflowTasks.count&&(workflowTasks.title=" "+$language.get(workflowTasks.count>1?"pay.DASHBOARD_DIRECT_DEPOSIT_WORKFLOW_TYPE_TITLE_MULTIPLE":"pay.DASHBOARD_DIRECT_DEPOSIT_WORKFLOW_TYPE_TITLE_SINGLE")),{workflowTasks:workflowTasks,approvals:approvals}}function getApprovalsFromTask(tasks,employeeId){return _.filter(tasks,function(task){return new RegExp("Direct Deposit","i").test(task.subject)&&(!employeeId||task.originatorAssociateOID===employeeId)})}return{getWorkflowTasksModel:getWorkflowTasksModel}}])}(),function(){function DirectDepositWorkflowTaskHelperService($window,DirectDepositComparisonService,DirectDepositDataExtraction,$language){function getCommentsFromPendingEvents(pendingEvents){var comments=[],histories=Array.prototype.concat.apply([],_.pluck(pendingEvents,"history"));return _.forEach(histories,function(history){history&&history.comments&&comments.push({name:history.assignedTo.split(", ").reverse().join(" "),date:$window.moment(history.actionDate).format("ll"),comment:history.comments})}),comments}function getPendingAccounts(allAccounts){return _.chain(allAccounts).map(_getMappedAccount).compact().valueOf()}function getMappedDirectDepositTask(taskInput){var data=taskInput.directDepositData,directDepositTask=getDirectDepositTaskModel(taskInput),comparisonInfo=_getComparisonInfo(data);return directDepositTask.action=comparisonInfo.action,directDepositTask.accounts=getPendingAccounts(comparisonInfo.data),directDepositTask.totalAccounts=_.size(comparisonInfo.data),directDepositTask.isAnyAccountChanged=!!directDepositTask.accounts.length,directDepositTask.depositRemainderEverythingLabel=$language.get(directDepositTask.totalAccounts>1?"pay.DIRECTDEPOSIT_CARD_REMAINING":"pay.DIRECTDEPOSIT_CARD_EVERYTHING"),directDepositTask.comments=getCommentsFromPendingEvents(data.pendingEvents),directDepositTask}function getDirectDepositTaskModel(task){var approval=task.approval||{},actionUrls=task.actionUrls||{};return{uri:{approve:actionUrls.approveUrl,reject:actionUrls.rejectUrl},name:task.originatorName,aoid:task.aoid,type:approval.subject,timestamp:approval.receiptDate,selected:!1,status:"pending",taskActionError:!1}}function _getComparisonInfo(directDepositData){var pendingEvents=_.get(directDepositData,"pendingEvents",[]),extractedData=DirectDepositDataExtraction.extractAccountsData(directDepositData),currentAccountsInfo=extractedData.currentData,pendingAccountsInfo=extractedData.pendingData;return pendingEvents.length?{action:_getActionFromPendingEvent(pendingEvents),data:DirectDepositComparisonService.getComparisonData(currentAccountsInfo,pendingAccountsInfo,pendingEvents)}:{}}function _getActionFromPendingEvent(pendingEvents){if(pendingEvents&&pendingEvents.length&&pendingEvents[0].resourcePath)return pendingEvents[0].resourcePath.split("/").pop().split(".").pop()}function _getMappedAccount(acc){var account=_.clone(acc,!0);if(account.isPending)return account.accountName=_.isEmpty(acc.current)?_.get(account,"pending.accountName",account.accountName):account.current.accountName,account.isOpen=!1,account}return{getCommentsFromPendingEvents:getCommentsFromPendingEvents,getPendingAccounts:getPendingAccounts,getMappedDirectDepositTask:getMappedDirectDepositTask,getDirectDepositTaskModel:getDirectDepositTaskModel}}angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.DirectDepositWorkflowTaskHelperService",DirectDepositWorkflowTaskHelperService),DirectDepositWorkflowTaskHelperService.$inject=["$window","redbox.framework.tasks.factory.DirectDepositWorkflowComparisonService","redbox.pay.directDeposit.DirectDepositDataExtraction","$language"]}(),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.DirectDepositWorkflowTaskService",["$q","$http","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService","adp.ng.logging.LoggerFactory","redbox.framework.tasks.factory.WorkflowActionsUrlResolverService","redbox.workflow.WorkflowPendingEventsService","redbox.pay.DirectDepositConstant","redbox.framework.tasks.factory.DirectDepositWorkflowTaskModelService","redbox.framework.tasks.factory.DirectDepositWorkflowTaskHelperService",function($q,$http,tasksService,portalMessagesService,loggerFactory,WorkflowActionsUrlResolverService,WorkflowPendingEventsService,DirectDepositConstant,DirectDepositWorkflowModelService,DirectDepositWorkflowTaskHelper){function submitApprovalStatus(directDepositApproval,approve){return submitTaskDecision(directDepositApproval,approve).then(function(){return directDepositTaskService.init(!0)})}function getWorkflowTasks(employeeId){return portalMessagesService.getRedboxWorkflowTasks().then(function(tasks){var workflowTaskModel=DirectDepositWorkflowModelService.getWorkflowTasksModel(tasks,employeeId);return tasksService.updateTaskData(workflowTaskModel.workflowTasks),workflowTaskModel}).catch(function(error){return logger.error("Error reading Redbox Workflow Tasks"),$q.reject(error)})}function getDirectDepositTasks(tasks){var approvals=tasks.approvals;return getApprovalRequestData(approvals).then(function(data){return{data:data,approvals:approvals}}).catch(function(error){return logger.error("Error occurred in getting direct deposit data",error),$q.reject(error)})}function getApprovalRequestData(approvals){return $q.all(_.map(approvals||[],getPendingTasks))}function getPendingTasks(approval){return getPendingEvents(approval).then(getTaskInputWithApprovalUrls).then(getTaskInputWithDirectDeposit).then(DirectDepositWorkflowTaskHelper.getMappedDirectDepositTask)}function getPendingEvents(approval){var aoid=approval.originatorAssociateOID,url=approval.notificationUri.href;return WorkflowPendingEventsService.getPendingEventsForAssociate(aoid).then(function(){return{approval:approval,aoid:aoid,notificationUrl:url}})}function getTaskInputWithApprovalUrls(taskInput){return portalMessagesService.getTaskDecisionURI(taskInput.notificationUrl).then(function(data){return taskInput.originatorName=data.notification.originatorName,taskInput.actionUrls=WorkflowActionsUrlResolverService.resolveApproveRejectUrls(data.notification),taskInput})}function getTaskInputWithDirectDeposit(taskInput){var taskId=taskInput.actionUrls.approveUrl.split("/")[4];return fetchDirectDeposit(taskInput.aoid,taskId).then(function(data){return taskInput.directDepositData=data,taskInput})}function fetchDirectDeposit(aoid,taskUrl){var url=DirectDepositConstant.URI.DISTRIBUTION_TASK_URI.replace(":A",aoid)+taskUrl,config={};return config.headers={"if-none-match":"any","loading-indicator":!1,Accept:"application/json; masked=false"},$http.get(url,config).then(function(result){return result.data})}function submitTaskDecision(directDepositApproval,isApproved){var url=_.get(directDepositApproval,isApproved?"uri.approve":"uri.reject");
return portalMessagesService.submitTaskDecision(url,directDepositApproval.comment)}var workflowTasksPromise,directDepositTasksPromise,logger=loggerFactory.getLogger("redbox.framework.tasks.factory.DirectDepositWorkflowTaskService"),directDepositTaskService=this;this.init=function(bustCache,employeeId){return!bustCache&&workflowTasksPromise||(workflowTasksPromise=getWorkflowTasks(employeeId)),workflowTasksPromise},this.getDirectDepositTasks=function(bustCache){return!bustCache&&directDepositTasksPromise||(directDepositTasksPromise=directDepositTaskService.init(bustCache).then(getDirectDepositTasks)),directDepositTasksPromise},this.approveRequest=function(directDepositApproval){return submitApprovalStatus(directDepositApproval,!0)},this.rejectRequest=function(directDepositApproval){return submitApprovalStatus(directDepositApproval,!1)}}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.EmergencyContactWorkflowTaskService",["$rootScope","$q","$http","$language","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService","redbox.framework.tasks.factory.ProfileWorkflowService","redbox.framework.tasks.factory.WorkflowActionsUrlResolverService","adp.ng.logging.LoggerFactory","adp.ng.meta.CodeListsService",function($rootScope,$q,$http,$language,tasksService,portalMessagesService,profileWorkflowTaskService,workflowActionsUrlResolverService,loggerFactory,codeListsService){function init(clearDeferred,employeeId){return clearDeferred&&(ecDeferred=null),ecDeferred?ecDeferred.promise:(ecDeferred=$q.defer(),portalMessagesService.getRedboxWorkflowTasks().then(function(tasks){emergencyContactTasks.approvals=_.filter(tasks,function(task){return isEmgerencyTask(task.subject,employeeId,task.relatedAssociateRef.associateOID)}),emergencyContactTasks.approvals&&(response.count=emergencyContactTasks.approvals.length,response.title=emergencyContactTasks.approvals.length>1?" "+$language.get("framework.TASKS_EMERGENCY_CONTACT_APPROVALS"):" "+$language.get("framework.TASKS_EMERGENCY_CONTACT_APPROVAL"),tasksService.updateTaskData(response)),ecDeferred.resolve(),ecTasksDeferred=null,getEmergencyContactTasks()}).catch(function(error){logger.error("Error occurred in reading workflow address tasks",error),ecDeferred.reject(error)}),ecDeferred.promise)}function getEmergencyContactTasks(){return ecTasksDeferred?ecTasksDeferred.promise:(ecTasksDeferred=$q.defer(),emergencyContactTasks.data=[],init().then(function(){var promises=[];angular.forEach(emergencyContactTasks.approvals,function(task){var createTask={aoid:_.get(task,"relatedAssociateRef.associateOID"),type:"emergencyContact",url:task.notificationUri.href,timestamp:task.receiptDate};promises.push(getEmergencyContactTasksData(createTask))}),$q.all(promises).then(function(){ecTasksDeferred.resolve(emergencyContactTasks)}).catch(function(error){logger.error("Error occurred in creating emergency employee data",error),ecTasksDeferred.reject(error)})}),ecTasksDeferred.promise)}function getEmergencyContactTasksData(task){var deferred=$q.defer();return portalMessagesService.getTaskDecisionURI(task.url).then(function(data){task.name=data.notification.relatedAssociateRef.formattedName,task.requestedByName=data.notification.originatorName;var actionUrls=workflowActionsUrlResolverService.resolveApproveRejectUrls(data.notification);task.approve=actionUrls.approveUrl,task.reject=actionUrls.rejectUrl,processEmergencyContact(task).then(function(){deferred.resolve()}).catch(function(error){logger.error("Error occurred in fetching emergency contacts",error)})}).catch(function(error){logger.error("Error occurred in fetching URI for emergency contacts task",error),deferred.reject(error)}),deferred.promise}function processEmergencyContact(task){var taskID=task.approve.split("/")[4],deferred=$q.defer(),pendingData={},currentData={},employee={uri:{approve:task.approve,reject:task.reject},name:task.name,requestedByName:task.requestedByName,aoid:task.aoid,type:task.type,timestamp:task.timestamp,relation:{},precedenceCode:{},address:{},homePhone:{},workPhone:{}};return fetchEmergencyContact(task.aoid,taskID).then(function(data){var ActionTypePath=data.pendingData.resourcePath,pendingItemID="",pendingContactURL="";employee.comments=profileWorkflowTaskService.processComments(data.pendingEvents,"Emergency Contacts");var rs=ActionTypePath.split(".");if(employee.action=rs[rs.length-1],"add"!==employee.action&&(pendingItemID=data.pendingData.body.events[0].data.eventContext.personalContact.itemID,1002===data.wfStatusCode))for(var c=0;c<data.currentData.personalContacts.length;c++)data.currentData.personalContacts[c].itemID===pendingItemID&&(pendingContactURL=data.currentData.personalContacts[c].links[0].href);switch(employee.action){case"remove":pendingContactURL?profileWorkflowTaskService.findEmergencyData(pendingContactURL,task.aoid).then(function(emergencyData){pendingData=emergencyData.personalContacts[0];try{employee.pendingData=pendingData;var employeeName=pendingData.personName.formattedName.split(",");employee.contactName=employeeName[1]+" "+employeeName[0],emergencyContactTasks.data.push({employee:employee,selected:!1}),deferred.resolve()}catch(error){logger.error("Error occurred in creating employee during remove emergency contact",error),deferred.reject()}}):(name=pendingItemID.split(","),employee.contactName=name[1]+" "+name[0],emergencyContactTasks.data.push({employee:employee,selected:!1}),deferred.resolve());break;case"add":pendingData=data.pendingData.body.events[0].data.transform.personalContact;try{employee.pendingData=pendingData;var name=pendingData.personName.formattedName.split(",");employee.contactName=name[1]+" "+name[0],emergencyContactTasks.data.push({employee:employee,selected:!1}),deferred.resolve()}catch(error){logger.error("Error occurred in creating employee during add emergency contact",error),deferred.reject()}break;case"change":pendingData=data.pendingData.body.events[0].data.transform.personalContact;var ename;pendingContactURL?profileWorkflowTaskService.findEmergencyData(pendingContactURL,task.aoid).then(function(emergencyData){currentData=emergencyData.personalContacts[0],ename=currentData.personName.formattedName.split(","),employee.contactName=ename[1]+" "+ename[0],employee.currentData=currentData,pendingData&&pendingData.relationshipTypeCode&&pendingData.relationshipTypeCode.codeValue&&!pendingData.relationshipTypeCode.shortName?codeListsService.getCodeListItem("/codelists/hr/v3/worker-management/relationshipvalues",pendingData.relationshipTypeCode.codeValue).then(function(relationshipTypeCode){relationshipTypeCode&&(pendingData.relationshipTypeCode=relationshipTypeCode)}).finally(function(){employee.pendingData=pendingData,emergencyContactTasks.data.push({employee:employee,selected:!1}),deferred.resolve()}):(employee.pendingData=pendingData,emergencyContactTasks.data.push({employee:employee,selected:!1}),deferred.resolve())}).catch(function(error){logger.error("Error occurred in creating employee during remove emergency contact")}):(ename=pendingData.personName.formattedName.split(","),employee.contactName=ename[1]+" "+ename[0],employee.pendingData=pendingData,emergencyContactTasks.data.push({employee:employee,selected:!1}),deferred.resolve())}}).catch(function(error){logger.error("Error occurred fetching emergency contact by passing TaskID")}),deferred.promise}function fetchEmergencyContact(aoid,taskUrl){var url=EMERGENCY_CONTACT_URI.replace("{associateoid}",aoid),deferred=$q.defer(),config={};return config.headers={"if-none-match":"any","loading-indicator":!1},$http.get(url+taskUrl,config).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),deferred.promise}function isEmgerencyTask(subject,employeeId,taskAssociateOID){return employeeId&&taskAssociateOID?new RegExp("Emergency Contacts","i").test(subject)&&taskAssociateOID===employeeId:new RegExp("Emergency Contacts","i").test(subject)}var ecDeferred,ecTasksDeferred,logger=loggerFactory.getLogger("redbox.framework.tasks.factory.EmergencyContactWorkflowTaskService"),response={id:"profileEmergencyContactTask",title:$language.get("framework.TASKS_EMERGENCY_CONTACT_APPROVALS"),message:"showing emergency contacts tasks",count:0,icon:"fa fa-star fa-lg",singleItemUrl:"app/framework/modules/tasks/portal-messages/views/emergency-contact-workflow-approvals.html",taskListUrl:"app/framework/modules/tasks/portal-messages/views/emergency-contact-workflow-approvals.html"},emergencyContactTasks={approvals:[],data:[]},EMERGENCY_CONTACT_URI="/wf/hr/v2/associates/{associateoid}/personal-contacts?taskId=";return{init:init,getEmergencyContactTasks:getEmergencyContactTasks}}]),angular.module("redbox.framework.tasks.factory").factory("redbox.framework.tasks.factory.FederalWorkflowComparisonService",["redbox.workflow.WorkflowUtils","redbox.workflow.CONSTANTS","redbox.pay.TaxWithholdingService","redbox.pay.FederalWithholdingService",function(WorkflowUtilsService,WORKFLOW_CONSTANTS,TaxWithholdingService,FederalWithholdingService){function workflowComparison(data){var pendingAction,pendingWithholding,approverName,modifiedCurrentData,modifiedPendingData,withholdings=[],currentData={},pendingData={},pendingEvents=_.get(data,"pendingEvents")||{},isChanged=!1;return data.hasOwnProperty("currentData")&&!_.isEmpty(data.currentData)&&(currentData=TaxWithholdingService.extractData(data.currentData),modifiedCurrentData=FederalWithholdingService.createFederalWithholdingModel(currentData)),data.hasOwnProperty("pendingData")&&!_.isEmpty(data.pendingData)&&(pendingData=TaxWithholdingService.extractData(data.pendingData),modifiedPendingData=FederalWithholdingService.createFederalWithholdingModel(pendingData)),data.hasOwnProperty("pendingEvents")&&!_.isEmpty(data.pendingEvents)&&(approverName=data.pendingEvents[0].history[0].assignedTo,pendingAction=WorkflowUtilsService.getPendingAction(pendingEvents[0])),pendingWithholding=WorkflowUtilsService.map(modifiedCurrentData,modifiedPendingData),modifiedCurrentData&&modifiedPendingData&&(isChanged=TaxWithholdingService.isDataChanged(modifiedCurrentData,modifiedPendingData)),pendingWithholding.workflow={status:isChanged||!_.has(data,"currentData")?WORKFLOW_CONSTANTS.STATUS.PENDING:WORKFLOW_CONSTANTS.STATUS.NONE,action:pendingAction,approvalFrom:approverName,hasCurrentData:_.has(data,"currentData")},withholdings.push(pendingWithholding),withholdings}var service={workflowComparison:workflowComparison};return service}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.MockTimeCardEmpTasksService",["redbox.framework.tasks.TasksService",function(tasksService){var mockResponse={id:"mockTimeCard",title:"Approve Timecard",message:"unapproved Timecards",count:2,icon:"fa fa-clock-o",dueDateList:[new Date,new Date("1/1/2015")],singleItemUrl:"app/framework/modules/tasks/mock/mock-timecard-approvals.html",taskListUrl:"app/framework/modules/tasks/mock/mock-timecard-approvals.html",subtext:"15 exceptions"};this.init=function(){tasksService.updateTaskData(mockResponse)}}]).service("redbox.framework.tasks.factory.MockTimeCardMgrTasksService",["redbox.framework.tasks.TasksService",function(tasksService){var mockResponse={id:"mockTimeCard1",title:"Team Approvals",message:"unapproved Timecards",count:2,icon:"fa fa-clock-o",dueDateList:[new Date,new Date("1/1/2015")],singleItemUrl:"app/framework/modules/tasks/mock/mock-policies-tasks.html",taskListUrl:"app/framework/modules/tasks/mock/mock-mgrtimecard-approvals.html",subtext:"15 exceptions"};this.init=function(){tasksService.updateTaskData(mockResponse)}}]).service("redbox.framework.tasks.factory.MockTimeCardEmpTasksService2",["redbox.framework.tasks.TasksService",function(tasksService){var mockResponse={id:"mockTimeCard2",title:"Team Approvals 2",message:"unapproved Timecards",count:2,icon:"fa fa-clock-o",dueDateList:[new Date,new Date("2/1/2015")],singleItemUrl:"app/framework/modules/tasks/mock/mock-policies-tasks.html",taskListUrl:"app/framework/modules/tasks/mock/mock-mgrtimecard1-approvals.html",subtext:"15 exceptions"};this.init=function(){tasksService.updateTaskData(mockResponse)}}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.PersonalContactWorkflowTaskService",["$rootScope","$q","$http","$language","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService","redbox.framework.tasks.factory.ProfileWorkflowService","redbox.framework.tasks.factory.WorkflowActionsUrlResolverService","redbox.connections.worker.CustomFieldParserService","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($rootScope,$q,$http,$language,tasksService,portalMessagesService,profileWorkflowTaskService,workflowActionsUrlResolverService,CustomFieldParserService,TASKS_CONSTANTS,loggerFactory){function init(clearDeferred,empolyeeId){return clearDeferred&&(pcDeferred=null),pcDeferred?pcDeferred.promise:(pcDeferred=$q.defer(),portalMessagesService.getRedboxWorkflowTasks().then(function(tasks){personalContactTasks.approvals=_.filter(tasks,function(task){return empolyeeId?(personalInfoRegex.test(task.subject)||addressRegex.test(task.subject)||phoneRegex.test(task.subject))&&task.relatedAssociateRef.associateOID===empolyeeId:personalInfoRegex.test(task.subject)||addressRegex.test(task.subject)||phoneRegex.test(task.subject)}),personalContactTasks.approvals&&(response.count=personalContactTasks.approvals.length,response.title=personalContactTasks.approvals.length>1?" "+$language.get("framework.TASKS_PERSONAL_EMPLOYEE_INFORMATION_APPROVALS"):" "+$language.get("framework.TASKS_PERSONAL_EMPLOYEE_INFORMATION_APPROVAL"),tasksService.updateTaskData(response)),pcDeferred.resolve(),pcTasksDeferred=null,getPersonalContactTasks()}).catch(function(error){logger.error("Error reading Redbox Workflow Tasks"),pcDeferred.reject(error)}),pcDeferred.promise)}function getPersonalContactTasks(){return pcTasksDeferred?pcTasksDeferred.promise:(pcTasksDeferred=$q.defer(),personalContactTasks.data=[],init().then(function(){var promises=[];angular.forEach(personalContactTasks.approvals,function(task){var task={aoid:task.relatedAssociateRef.associateOID,type:"personalContact",url:task.notificationUri.href,timestamp:task.receiptDate,subject:task.subject};promises.push(getPersonalContactTasksData(task))}),$q.all(promises).then(function(){pcTasksDeferred.resolve(personalContactTasks)}).catch(function(error){logger.error("Error occurred in creating personal contacts data",error),pcTasksDeferred.reject(error)})}),pcTasksDeferred.promise)}function getPersonalContactTasksData(task){var deferred=$q.defer();return portalMessagesService.getTaskDecisionURI(task.url).then(function(data){task.name=data.notification.relatedAssociateRef.formattedName,task.requestedByName=data.notification.originatorName;var actionUrls=getActionUrls(data.notification);task.approve=actionUrls.approveUrl,task.reject=actionUrls.rejectUrl,processPersonalContact(task).then(function(){deferred.resolve()}).catch(function(error){logger.error("Error occurred in fetching emergency contacts")})}).catch(function(error){logger.error("Error occurred in fetching URI for emergency contacts task"),deferred.reject(error)}),deferred.promise}function getActionUrls(notification){return workflowActionsUrlResolverService.resolveApproveRejectUrls(notification)}function processPersonalContact(task){var taskID=task.approve.split("/")[4],deferred=$q.defer();return fetchPersonalContact(task.aoid,taskID).then(function(data){if(void 0!==data){task.workerProfile=data;var promises=[];cdfRegex.test(_.get(task.workerProfile,"pendingEvents[0].resourcePath"))?promises.push(processCdfEmployee(task)):addressRegex.test(task.subject)?promises.push(processAddressEmployee(task)):phoneRegex.test(task.subject)?promises.push(processPhoneEmployee(task)):(promises.push(processAddressEmployee(task)),promises.push(processPhoneEmployee(task))),$q.all(promises).then(function(){deferred.resolve()}).catch(function(error){logger.error("Error occurred in creating emergency employee data",error),deferred.reject(error)})}else deferred.resolve()}).catch(function(error){logger.error("Error occurred fetching personal contact by passing TaskID"),deferred.reject(error)}),deferred.promise}function processAddressEmployee(task){var deferred=$q.defer(),promise=deferred.promise;try{var employee={uri:{approve:"",reject:""},requestedByName:task.requestedByName};employee.givenName=_.get(task,"workerProfile.currentData.workers[0].person.legalName.givenName"),employee.familyName1=_.get(task,"workerProfile.currentData.workers[0].person.legalName.familyName1"),employee.aoid=_.get(task,"workerProfile.currentData.workers[0].associateOID"),employee.timestamp=task.timestamp,employee.gender=_.get(task,"workerProfile.currentData.workers[0].person.genderCode.codeValue");var currentAddressData=_.get(task,"workerProfile.currentData.workers[0].person.legalAddress"),pendingAddressData=_.get(task,"workerProfile.pendingData.workers[0].person.legalAddress"),currentPersonalAddressData=_.get(task,"workerProfile.currentData.workers[0].person.otherPersonalAddresses[0]"),pendingPersonalAddressData=_.get(task,"workerProfile.pendingData.workers[0].person.otherPersonalAddresses[0]"),currentEmailData=_.get(task,"workerProfile.currentData.workers[0].person.communication.emails[0].emailUri"),pendingEmailData=_.get(task,"workerProfile.pendingData.workers[0].person.communication.emails[0].emailUri"),currentWorkEmailData=_.get(task,"workerProfile.currentData.workers[0].businessCommunication.emails[0].emailUri"),pendingWorkEmailData=_.get(task,"workerProfile.pendingData.workers[0].businessCommunication.emails[0].emailUri"),sameAsAddressIndicator=_.get(task,"workerProfile.pendingData.workers[0].person.otherPersonalAddresses[0].sameAsAddressIndicator");return sameAsAddressIndicator&&(pendingPersonalAddressData=currentPersonalAddressData),angular.equals(currentAddressData,pendingAddressData)||(employee.type=TASKS_CONSTANTS.TYPES.ADDRESS,employee.currentData=currentAddressData,employee.pendingData=pendingAddressData),angular.equals(currentPersonalAddressData,pendingPersonalAddressData)||(employee.type=TASKS_CONSTANTS.TYPES.ADDRESS,employee.currentData=currentPersonalAddressData,employee.pendingData=pendingPersonalAddressData),currentEmailData!==pendingEmailData?(employee.type=TASKS_CONSTANTS.TYPES.EMAIL,employee.currentData=currentEmailData,employee.pendingData=pendingEmailData):currentWorkEmailData!==pendingWorkEmailData&&(employee.type=TASKS_CONSTANTS.TYPES.EMAIL,employee.currentData=currentWorkEmailData,employee.pendingData=pendingWorkEmailData),employee.comments=profileWorkflowTaskService.processComments(task.workerProfile.pendingEvents,"Employee Event - Address"),portalMessagesService.getTaskDecisionURI(task.url).then(function(data){var actionUrls=getActionUrls(data.notification);switch(employee.uri.approve=actionUrls.approveUrl,employee.uri.reject=actionUrls.rejectUrl,employee.type){case"address":personalContactTasks.data.push({employee:employee,selected:!1});break;case"email":personalContactTasks.data.push({employee:employee,selected:!1})}deferred.resolve()}).catch(function(error){logger.error("Error occurred in fetching URI for address task",error),deferred.reject(error)}),promise}catch(err){logger.error("Error occurred in parsing workerProfile for address type tasks",err)}}function processPhoneEmployee(task){var deferred=$q.defer();try{var employee={uri:{approve:"",reject:""},requestedByName:task.requestedByName},numbers={personal:{landline:{},mobile:{}},work:{landline:{},mobile:{},fax:{}}};if(employee.givenName=_.get(task,"workerProfile.currentData.workers[0].person.legalName.givenName"),employee.familyName1=_.get(task,"workerProfile.currentData.workers[0].person.legalName.familyName1"),employee.aoid=_.get(task,"workerProfile.currentData.workers[0].associateOID"),employee.timestamp=task.timestamp,employee.gender=_.get(task,"workerProfile.currentData.workers[0].person.genderCode.codeValue"),employee.type=TASKS_CONSTANTS.TYPES.PHONE,numbers.personal.mobile.current=_.get(task,"workerProfile.currentData.workers[0].person.communication.mobiles[0]")||{},numbers.personal.landline.current=_.get(task,"workerProfile.currentData.workers[0].person.communication.landlines[0]")||{},numbers.personal.mobile.pending=_.get(task,"workerProfile.pendingData.workers[0].person.communication.mobiles[0]")||{},numbers.personal.landline.pending=_.get(task,"workerProfile.pendingData.workers[0].person.communication.landlines[0]")||{},numbers.work.mobile.current=_.get(task,"workerProfile.currentData.workers[0].businessCommunication.mobiles[0]")||{},numbers.work.landline.current=_.get(task,"workerProfile.currentData.workers[0].businessCommunication.landlines[0]")||{},numbers.work.fax.current=_.get(task,"workerProfile.currentData.workers[0].businessCommunication.faxes[0]")||{},numbers.work.mobile.pending=_.get(task,"workerProfile.pendingData.workers[0].businessCommunication.mobiles[0]")||{},numbers.work.landline.pending=_.get(task,"workerProfile.pendingData.workers[0].businessCommunication.landlines[0]")||{},numbers.work.fax.pending=_.get(task,"workerProfile.pendingData.workers[0].businessCommunication.faxes[0]")||{},_.isEqual(numbers.personal.mobile.current,numbers.personal.mobile.pending))if(_.isEqual(numbers.personal.landline.current,numbers.personal.landline.pending))if(_.isEqual(numbers.work.mobile.current,numbers.work.mobile.pending))if(_.isEqual(numbers.work.landline.current,numbers.work.landline.pending)){if(_.isEqual(numbers.work.fax.current,numbers.work.fax.pending))return void deferred.resolve();employee.currentData=numbers.work.fax.current?numbers.work.fax.current:"",employee.pendingData=numbers.work.fax.pending?numbers.work.fax.pending:"",employee.subtype="work.fax"}else employee.currentData=numbers.work.landline.current?numbers.work.landline.current:"",employee.pendingData=numbers.work.landline.pending?numbers.work.landline.pending:"",employee.subtype="work.landline";else employee.currentData=numbers.work.mobile.current?numbers.work.mobile.current:"",employee.pendingData=numbers.work.mobile.pending?numbers.work.mobile.pending:"",employee.subtype="work.mobile";else employee.currentData=numbers.personal.landline.current?numbers.personal.landline.current:"",employee.pendingData=numbers.personal.landline.pending?numbers.personal.landline.pending:"",employee.subtype="personal.landline";else employee.currentData=numbers.personal.mobile.current?numbers.personal.mobile.current:"",employee.pendingData=numbers.personal.mobile.pending?numbers.personal.mobile.pending:"",employee.subtype="personal.mobile";return employee.comments=profileWorkflowTaskService.processComments(task.workerProfile.pendingEvents,"Employee Event - Phone Numbers"),portalMessagesService.getTaskDecisionURI(task.url).then(function(data){var actionUrls=getActionUrls(data.notification);employee.uri.approve=actionUrls.approveUrl,employee.uri.reject=actionUrls.rejectUrl,personalContactTasks.data.push({employee:employee,selected:!1}),deferred.resolve()}).catch(function(error){logger.error("Error occurred in fetching URI for phone task",error),deferred.reject(error)}),deferred.promise}catch(err){logger.error("Error occurred in parsing workerProfile for phone type tasks",err)}}function fetchPersonalContact(aoid,taskId){var url=WORKER_SERVICE_URI+aoid,deferred=$q.defer(),config={};return config.headers={"if-none-match":"any"},taskId&&(url=url+"?taskId="+taskId),$http.get(url,config).then(function(results){results.data.hasOwnProperty("error")&&1002===results.data.wfStatusCode&&!results.data.hasOwnProperty("pendingData")?deferred.resolve():deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),deferred.promise}function processCdfEmployee(task){var employee={uri:{approve:"",reject:""},requestedByName:task.requestedByName};employee.givenName=_.get(task,"workerProfile.currentData.workers[0].person.legalName.givenName"),employee.familyName1=_.get(task,"workerProfile.currentData.workers[0].person.legalName.familyName1"),employee.aoid=_.get(task,"workerProfile.currentData.workers[0].associateOID"),employee.timestamp=task.timestamp,employee.gender=_.get(task,"workerProfile.currentData.workers[0].person.genderCode.codeValue"),employee.type=TASKS_CONSTANTS.TYPES.CUSTOM_FIELDS,employee.currentData={},employee.pendingData={};var deferred=$q.defer(),url=WORKER_META_URI.replace("{aoid}",_.get(task,"workerProfile.pendingEvents[0].affectedUser.userOID")),workerPromise=$http.get(url).then(function(metaResponse){return CustomFieldParserService.parseCustomFieldEvent(task.workerProfile.currentData.workers[0],metaResponse.data.meta,task.workerProfile.pendingEvents[0])}).then(function(cdfItem){cdfItem?(_.set(employee.currentData,"value",cdfItem.value),_.set(employee.currentData,"label",cdfItem.label),_.set(employee.pendingData,"value",cdfItem.pendingEvent.requestedValue),_.set(employee.pendingData,"label",cdfItem.label)):deferred.reject("Could not find data for the CDF on this event!")});employee.comments=profileWorkflowTaskService.processComments(task.workerProfile.pendingEvents,"Employee - Personal Information");var portalPromise=portalMessagesService.getTaskDecisionURI(task.url).then(function(data){var actionUrls=getActionUrls(data.notification);employee.uri.approve=actionUrls.approveUrl,employee.uri.reject=actionUrls.rejectUrl,personalContactTasks.data.push({employee:employee,selected:!1})}).catch(function(error){throw logger.error("Error occurred in fetching URI for CDF task",error),error});return $q.all([workerPromise,portalPromise]).then(function(){deferred.resolve()}).catch(function(error){deferred.reject(error)}),deferred.promise}var pcDeferred,pcTasksDeferred,logger=loggerFactory.getLogger("redbox.framework.tasks.factory.PersonalContactWorkflowTaskService"),response={id:"profilePersonalContactTask",title:$language.get("framework.TASKS_PERSONAL_EMPLOYEE_INFORMATION_APPROVAL"),message:"showing personal contacts tasks",count:0,icon:"fa fa-user fa-lg",singleItemUrl:"app/framework/modules/tasks/portal-messages/views/personal-contact-workflow-approvals.html",taskListUrl:"app/framework/modules/tasks/portal-messages/views/personal-contact-workflow-approvals.html"},personalContactTasks={approvals:[],data:[]},WORKER_SERVICE_URI="/wf/hr/v2/workers/",WORKER_META_URI="/hr/v2/workers/{aoid}/meta",personalInfoRegex=new RegExp("Personal Information","i"),addressRegex=new RegExp("Address","i"),cdfRegex=new RegExp("custom-field","i"),phoneRegex=new RegExp("Phone","i");return{init:init,getPersonalContactTasks:getPersonalContactTasks}}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.PoliciesTaskService",["$rootScope","$q","redbox.framework.tasks.TasksService","redbox.company.policies.PolicyEmployeeService","adp.ng.logging.LoggerFactory","$language",function($rootScope,$q,tasksService,policyEmployeeService,loggerFactory,$language){var deferred,logger=loggerFactory.getLogger("redbox.framework.tasks.factory.PoliciesTaskServiceFactory"),response={id:"employeePolicy",title:$language.get("framework.TASKS_POLICIES"),message:"showing policy tasks",count:0,icon:"fa adp-fa-icon-policies",singleItemUrl:"app/company/modules/policies/views/dashboard-single-policy-tile.html",taskListUrl:"app/company/modules/policies/views/dashboard-policies-slidein.html"};$rootScope.$on("$languageChangeSuccess",function(){response.title=response.count>1?" "+$language.get("framework.TASKS_POLICIES"):" "+$language.get("framework.TASKS_POLICY")}),this.init=function(clearDeferred,acknowledgeFlag){return clearDeferred&&(deferred=null),deferred?deferred.promise:(deferred=$q.defer(),policyEmployeeService.fetchPolicies({unacknowledged:!0}).then(function(){response.count=policyEmployeeService.getEmployeeUnackPolicyCount(),response.title=response.count>1?" "+$language.get("framework.TASKS_POLICIES"):" "+$language.get("framework.TASKS_POLICY"),response.dueDateList=policyEmployeeService.getEmployeeOverduePolicyDueDateList(),acknowledgeFlag&&1===tasksService.taskData.tasks.length&&0===response.count||tasksService.updateTaskData(response),deferred.resolve()}).catch(function(error){logger.error("Error occurred in reading workflow address tasks",error),deferred.reject(error)}),deferred.promise)}}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.ProfessionalCredentialsWorkflowTaskService",["$rootScope","$injector",function($rootScope,$injector){function workflowTasksModel(){this.id="professionalCredentialsApprovals",this.title="Professional Credentials Approvals",this.message="showing professional credentials approvals",this.count=0,this.icon="fa fa-mortar-board",this.singleItemUrl="app/framework/modules/tasks/portal-messages/views/professional-credentials-workflow-approvals.html",this.taskListUrl="app/framework/modules/tasks/portal-messages/views/professional-credentials-workflow-approvals.html"}function isProfessionalCredentialsTask(subject,employeeId,taskAssociateOID){return _.find(professionalCredentialTaskTags,function(pattern){return employeeId&&taskAssociateOID?new RegExp(pattern,"i").test(subject)&&taskAssociateOID===employeeId:new RegExp(pattern,"i").test(subject)})}function getWorkflowTasks(employeeId){var defer=$q.defer();return workflowTasksPromise=defer.promise,workflowTasks=new workflowTasksModel,PortalMessagesService.getRedboxWorkflowTasks().then(function(tasks){professionalCredentialTasks.approvals=_.filter(tasks,function(task){return isProfessionalCredentialsTask(task.subject,employeeId,task.relatedAssociateRef.associateOID)}),workflowTasks.count=professionalCredentialTasks.approvals.length,workflowTasks.count>0&&(workflowTasks.title=workflowTasks.count>1?" "+$language.get("framework.TASKS_PROFESSIONAL_CREDENTIALS_APPROVALS"):" "+$language.get("framework.TASKS_PROFESSIONAL_CREDENTIALS_APPROVAL")),TasksService.updateTaskData(workflowTasks),defer.resolve(workflowTasks)}).catch(function(error){logger.error("Error reading Redbox Workflow Tasks"),defer.reject(error)}),workflowTasksPromise}function getProfessionalCredentialsTasks(){var defer=$q.defer(),promises=[];return professionalCredentialTasks.data=[],professionalCredentialsTasksPromise=defer.promise,professionalCredentialsTaskService.init().then(function(response){response&&_.forEach(professionalCredentialTasks.approvals,function(approval){promises.push(getProfessionalCredentialTaskData({aoid:approval.relatedAssociateRef.associateOID,type:approval.subject,url:approval.notificationUri.href,timestamp:approval.receiptDate}))}),$q.all(promises).then(function(){defer.resolve(professionalCredentialTasks)},function(error){logger.error("Error occurred in creating professional credential data",error),defer.reject(error)})},function(error){professionalCredentialsTasksPromise.reject(error)}),professionalCredentialsTasksPromise}function getProfessionalCredentialTaskData(task){var deferred=$q.defer();return WorkflowPendingEventsService.getPendingEventsForAssociate(task.aoid).then(function(pendingEvents){PortalMessagesService.getTaskDecisionURI(task.url).then(function(data){task.name=data.notification.relatedAssociateRef.formattedName,task.requestedByName=data.notification.originatorName,task.approve=_.isArray(data.notification.actions[0].uris)?data.notification.actions[0].uris[0].href:data.notification.actions[0].uris.href,task.reject=_.isArray(data.notification.actions[1].uris)?data.notification.actions[1].uris[0].href:data.notification.actions[1].uris.href,processProfessionalCredential(task,pendingEvents).then(function(){deferred.resolve()}).catch(function(error){logger.error("Error occurred in fetching professional credentials")})}).catch(function(error){logger.error("Error occurred in fetching URI for professional credentials"),deferred.reject(error)})}),deferred.promise}function processProfessionalCredential(task,pendingEvents){var getUri,getDetailUri,itemIDPath,deferred=$q.defer(),taskID=task.approve.split("/")[4],keys={
aggregateKey:"",singleKey:""},professionalCredentialTask={uri:{approve:task.approve,reject:task.reject},name:task.name,requestedByName:task.requestedByName,aoid:task.aoid,type:task.type,timestamp:task.timestamp,selected:!1,status:"pending"};return _.find(pendingEvents,function(pendingEvent){var resourcePath,resourceOperation;if(task.type===pendingEvent.eventName){if(resourcePath=_.get(pendingEvent,"eventData.resourcePath"),resourcePath&&(resourceOperation=resourcePath.split("/").pop()),resourceOperation)switch(professionalCredentialTask.action=resourceOperation.split(".").pop(),resourceOperation){case"associate.ksaoc.language.add":case"associate.ksaoc.language.change":case"associate.ksaoc.language.remove":getUri=LANGUAGES_URI,professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.LANGUAGE,professionalCredentialTask.icon="comments-o",keys.aggregateKey="associateLanguages",keys.singleKey="associateLanguage";break;case"associate.ksaoc.membership.add":case"associate.ksaoc.membership.change":case"associate.ksaoc.membership.remove":getUri=MEMBERSHIPS_URI,professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.MEMBERSHIP,professionalCredentialTask.icon="group",keys.aggregateKey="associateMemberships",keys.singleKey="associateMembership";break;case"associate.ksaoc.license.change":getUri=LICENSES_URI,getDetailUri=LICENSES_DETAIL_URI,itemIDPath="pendingData.body.events[0].data.eventContext.associateLicense.itemID",professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.LICENSE,professionalCredentialTask.icon="shield",keys.aggregateKey="associateLicenses",keys.singleKey="associateLicense";break;case"associate.ksaoc.license.add":case"associate.ksaoc.license.remove":getUri=LICENSES_URI,professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.LICENSE,professionalCredentialTask.icon="shield",keys.aggregateKey="associateLicenses",keys.singleKey="associateLicense";break;case"associate.ksaoc.certification.change":getUri=CERTIFICATIONS_URI,getDetailUri=CERTIFICATIONS_DETAIL_URI,itemIDPath="pendingData.body.events[0].data.eventContext.associateCertification.itemID",professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.CERTIFICATION,professionalCredentialTask.icon="certificate",keys.aggregateKey="associateCertifications",keys.singleKey="associateCertification";break;case"associate.ksaoc.certification.add":case"associate.ksaoc.certification.remove":getUri=CERTIFICATIONS_URI,professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.CERTIFICATION,professionalCredentialTask.icon="certificate",keys.aggregateKey="associateCertifications",keys.singleKey="associateCertification";break;case"associate.ksaoc.educational-degree.change":getUri=EDUCATIONAL_DEGREES_URI,getDetailUri=EDUCATIONAL_DEGREES_DETAIL_URI,itemIDPath="pendingData.body.events[0].data.eventContext.associateEducationalDegree.itemID",professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.EDUCATIONAL_DEGREE,professionalCredentialTask.icon="graduation-cap",keys.aggregateKey="associateEducationalDegrees",keys.singleKey="associateEducationalDegree";break;case"associate.ksaoc.educational-degree.add":case"associate.ksaoc.educational-degree.remove":getUri=EDUCATIONAL_DEGREES_URI,professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.EDUCATIONAL_DEGREE,professionalCredentialTask.icon="graduation-cap",keys.aggregateKey="associateEducationalDegrees",keys.singleKey="associateEducationalDegree";break;case"associate.ksaoc.competency.change":getUri=COMPETENCIES_URI,getDetailUri=COMPETENCIES_DETAIL_URI,itemIDPath="pendingData.body.events[0].data.eventContext.associateCompetency.itemID",professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.COMPETENCY,professionalCredentialTask.icon="star",keys.aggregateKey="associateCompetencies",keys.singleKey="associateCompetency";break;case"associate.ksaoc.competency.add":case"associate.ksaoc.competency.remove":getUri=COMPETENCIES_URI,professionalCredentialTask.type=TASKS_CONSTANTS.TYPES.COMPETENCY,professionalCredentialTask.icon="star",keys.aggregateKey="associateCompetencies",keys.singleKey="associateCompetency"}return!0}}),getUri&&(getUri=getUri.replace("{associateoid}",task.aoid),getUri+=taskID),fetchProfessionalCredential(getUri).then(function(data){getDetailUri?(getDetailUri=getDetailUri.replace("{associateoid}",task.aoid),getDetailUri=getDetailUri.replace("{itemID}",_.get(data,itemIDPath)),getDetailUri+=taskID,fetchProfessionalCredential(getDetailUri).then(function(detailData){professionalCredentialTask.professionalCredential=processPendingData(detailData,keys)[0],professionalCredentialTask.comments=processComments(detailData.pendingEvents),professionalCredentialTasks.data.push(professionalCredentialTask),deferred.resolve()}).catch(function(error){logger.error("Error occurred fetching professional credential by passing TaskID"),deferred.reject(error)})):(professionalCredentialTask.professionalCredential=processPendingData(data,keys)[0],professionalCredentialTask.comments=processComments(data.pendingEvents),professionalCredentialTasks.data.push(professionalCredentialTask),deferred.resolve())}).catch(function(error){logger.error("Error occurred fetching professional credential by passing TaskID"),deferred.reject(error)}),deferred.promise}function processComments(pendingEvents){var comments=[];return _.forEach(pendingEvents,function(pendingEvent){_.forEach(pendingEvent.history,function(history){history.comments&&comments.push({name:history.assignedTo.split(", ").reverse().join(" "),date:$window.moment(history.actionDate).format("ll"),comment:history.comments})})}),comments}function fetchProfessionalCredential(getUri){var deferred=$q.defer(),config={};return config.headers={"if-none-match":"any","loading-indicator":!1},$http.get(getUri,config).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),deferred.promise}function processPendingData(data,keys){var objects=[],currentData=_.get(data,"currentData")||{},pendingData=_.get(data,"pendingData")||{},pendingObj=_.clone(_.head(_.filter(_.get(currentData,keys.aggregateKey),function(obj){return obj.itemID===_.get(pendingData,"body.events[0].data.eventContext."+keys.singleKey+".itemID")})),!0);return pendingObj?_.forOwn(_.get(pendingData,"body.events[0].data.transform."+keys.singleKey),function(value,key){pendingObj[key]=value}):(pendingObj=WorkflowUtils.map({},_.get(pendingData,"body.events[0].data.transform."+keys.singleKey)),objects.push(pendingObj)),_.forEach(currentData[keys.aggregateKey],function(obj){obj.itemID===pendingObj.itemID&&(pendingObj=WorkflowUtils.map(obj,pendingObj),objects.push(pendingObj))}),objects}function submitTaskDecision(professionalCredentialApproval,isApproved){var deferred=$q.defer(),url=isApproved?_.get(professionalCredentialApproval,"uri.approve"):_.get(professionalCredentialApproval,"uri.reject");return PortalMessagesService.submitTaskDecision(url,professionalCredentialApproval.comment).then(function(data){deferred.resolve()}).catch(function(error){logger.error("Error occurred in submitting task for approval",error),deferred.reject(error)}),deferred.promise}var workflowTasks,workflowTasksPromise,professionalCredentialsTasks,professionalCredentialsTasksPromise,$q=$injector.get("$q"),$http=$injector.get("$http"),$language=$injector.get("$language"),$window=$injector.get("$window"),$stateParams=$injector.get("$stateParams"),TASKS_CONSTANTS=$injector.get("redbox.framework.tasks.TASKS_CONSTANTS"),PortalMessagesService=$injector.get("redbox.framework.tasks.PortalMessagesService"),WorkflowPendingEventsService=$injector.get("redbox.workflow.WorkflowPendingEventsService"),WorkflowUtils=$injector.get("redbox.workflow.WorkflowUtils"),TasksService=$injector.get("redbox.framework.tasks.TasksService"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=loggerFactory.getLogger("redbox.framework.tasks.factory.ProfessionalCredentialsWorkflowTaskService"),professionalCredentialsTaskService=this,LANGUAGES_URI="/wf/talent/v2/associates/{associateoid}/associate-languages?taskId=",MEMBERSHIPS_URI="/wf/talent/v2/associates/{associateoid}/associate-memberships?taskId=",LICENSES_URI="/wf/talent/v2/associates/{associateoid}/associate-licenses?taskId=",LICENSES_DETAIL_URI="/wf/talent/v2/associates/{associateoid}/associate-licenses/{itemID}?taskId=",CERTIFICATIONS_URI="/wf/talent/v2/associates/{associateoid}/associate-certifications?taskId=",CERTIFICATIONS_DETAIL_URI="/wf/talent/v2/associates/{associateoid}/associate-certifications/{itemID}?taskId=",EDUCATIONAL_DEGREES_URI="/wf/talent/v2/associates/{associateoid}/associate-educational-degrees?taskId=",EDUCATIONAL_DEGREES_DETAIL_URI="/wf/talent/v2/associates/{associateoid}/associate-educational-degrees/{itemID}?taskId=",COMPETENCIES_URI="/wf/talent/v2/associates/{associateoid}/associate-competencies?taskId=",COMPETENCIES_DETAIL_URI="/wf/talent/v2/associates/{associateoid}/associate-competencies/{itemID}?taskId=",professionalCredentialTaskTags=["Professional Credentials","Education","Languages","License/Certificate","Skills"],professionalCredentialTasks={approvals:[],data:[]};$rootScope.$on("$languageChangeSuccess",function(){workflowTasks&&(workflowTasks.title=workflowTasks.count>1?" "+$language.get("framework.TASKS_PROFESSIONAL_CREDENTIALS_APPROVALS"):" "+$language.get("framework.TASKS_PROFESSIONAL_CREDENTIALS_APPROVAL"))}),this.init=function(bustCache,employeeId){return bustCache&&(workflowTasks=null,workflowTasksPromise=null),$q.when(workflowTasks||workflowTasksPromise||getWorkflowTasks(employeeId))},this.getProfessionalCredentialsTasks=function(bustCache){return bustCache&&(professionalCredentialsTasks=null,professionalCredentialsTasksPromise=null),$q.when(professionalCredentialsTasks||professionalCredentialsTasksPromise||getProfessionalCredentialsTasks())},this.approveRequest=function(professionalCredentialApproval){return submitTaskDecision(professionalCredentialApproval,!0).then(function(){professionalCredentialsTaskService.init(!0,$stateParams.associateOID)})},this.rejectRequest=function(professionalCredentialApproval){return submitTaskDecision(professionalCredentialApproval,!1).then(function(){professionalCredentialsTaskService.init(!0,$stateParams.associateOID)})}}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.ProfileWorkflowService",["$q","$http","$timeout","redbox.framework.tasks.PortalMessagesService","adp.ng.logging.LoggerFactory",function($q,$http,$timeout,portalMessagesService,loggerFactory){var logger=loggerFactory.getLogger("redbox.framework.tasks.factory.ProfileWorkflowService");this.processComments=function(data,string){for(var comments=[],k=0;k<data.length;k++)new RegExp(string,"i").test(data[k].eventName)&&commentsExist(data[k].history)&&comments.push(data[k].history);return comments},this.findEmergencyData=function(url,aoid){var deferred=$q.defer(),promise=deferred.promise,config={headers:{"if-none-match":"any","loading-indicator":!1,rolecode:"manager"},aoid:aoid};return $http.get(url,config).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),promise},this.getTask=function(approvalRecord,action,type,inputcomment){approvalRecord.currentComment=inputcomment;var approveOrRejectUri=action===!0?approvalRecord.employee.uri.approve:approvalRecord.employee.uri.reject,task={url:approveOrRejectUri,aoid:approvalRecord.employee.aoid,type:type,comment:inputcomment};return task},this.takeAction=function(action){var task={};task.aoid=action.aoid,task.comment=action.comment,task.url=action.url,task.type=action.type;var deferred=$q.defer();return portalMessagesService.submitTaskDecision(task.url,task.comment).then(function(data){deferred.resolve()}).catch(function(error){logger.error("Error occurred in submitting task for approval",error),deferred.reject(error)}),deferred.promise},this.updateObjectProperties=function(approvalRecord,action,status){"success"===status&&(action===!0?approvalRecord.isApproveSelected=!0:approvalRecord.isRejectSelected=!0),"failed"===status&&(approvalRecord.isNetworkErrorinSubmission=!0,$timeout(function(){approvalRecord.isNetworkErrorinSubmission=!1},3e3))};var commentsExist=function(commArr){for(var c=0;c<commArr.length;c++)if("string"==typeof commArr[c].comments)return!0}}]),angular.module("redbox.framework.tasks.factory").factory("redbox.framework.tasks.factory.StateWorkflowComparisonService",["redbox.workflow.WorkflowUtils","redbox.pay.TaxWithholdingService","redbox.pay.StateWithholdingService",function(WorkflowUtilsService,TaxWithholdingService,StateWithholdingService){function workflowComparison(data){var currentData,pendingData,currentState,pendingState,approverName,changeArray=[],stateWithholding={},changedData={};return data.hasOwnProperty("currentData")&&(currentData=TaxWithholdingService.extractData(data.currentData)),data.hasOwnProperty("pendingData")&&(pendingData=TaxWithholdingService.extractData(data.pendingData)),data.hasOwnProperty("pendingEvents")&&(approverName=data.pendingEvents[0].history[0].assignedTo),_.forEach(currentData,function(currentWithholding){stateWithholding=StateWithholdingService.createStateWithholdingModel(currentWithholding),stateWithholding.approverName=approverName,_.forEach(pendingData,function(pendingWithholding){currentWithholding.stateCode.longName===pendingWithholding.stateCode.longName&&(currentState=StateWithholdingService.getStateTaxData(currentWithholding),pendingState=StateWithholdingService.getStateTaxData(pendingWithholding),stateWithholding.isChanged=TaxWithholdingService.isDataChanged(currentState,pendingState),stateWithholding.isChanged&&((_.isString(pendingState.allowanceQuantity)&&_.isEmpty(pendingState.allowanceQuantity)||_.isUndefined(pendingState.allowanceQuantity)||_.isNull(pendingState.allowanceQuantity))&&(pendingState.allowanceQuantity=0),(_.isString(pendingState.additionalAmount)&&_.isEmpty(pendingState.additionalAmount)||_.isUndefined(pendingState.additionalAmount)||_.isNull(pendingState.additionalAmount))&&(pendingState.additionalAmount=0)),changedData.current=currentState,changedData.pending=pendingState,stateWithholding.withholdings=mapChanges(changedData))}),changeArray.push(stateWithholding)}),changeArray=TaxWithholdingService.sortTaxWithholdingData(changeArray)}function mapChanges(data){var pendingWithholding,pendingWithholding={},currentData=_.get(data,"current")||{},pendingData=_.get(data,"pending")||{};return pendingWithholding=WorkflowUtilsService.map(currentData,pendingData)}var service={workflowComparison:workflowComparison};return service}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.TaxWithholdingJurisdictionResolverService",["redbox.pay.TaxWithholdingConstant",function(TaxWithholdingConstant){function resolveJurisdiction(task,pendingEvents){var resourceOperation,jurisdictionResolver={uri:"",action:""},_pendingEvent=_.find(pendingEvents,function(pendingEvent){return task.type===pendingEvent.eventName}),resourcePath=_.get(_pendingEvent,"eventData.resourcePath");if(resourcePath&&(resourceOperation=resourcePath.split("/").pop()),resourceOperation)switch(jurisdictionResolver.action=resourceOperation.split(".").pop(),resourceOperation){case TaxWithholdingConstant.URI.STATE_NON_WORKFLOW_CHANGE:jurisdictionResolver.uri=TaxWithholdingConstant.URI.STATE_WORKFLOW_TASK;break;case TaxWithholdingConstant.URI.FEDERAL_NON_WORKFLOW_CHANGE:case TaxWithholdingConstant.URI.FEDERAL_NON_WORKFLOW_ADD:jurisdictionResolver.uri=TaxWithholdingConstant.URI.FEDERAL_WORKFLOW_TASK}return jurisdictionResolver}return{resolveJurisdiction:resolveJurisdiction}}]),angular.module("redbox.framework.tasks.factory").factory("redbox.framework.tasks.factory.TaxWithholdingWorkflowModel",["$language","redbox.pay.PayUtilityService","redbox.pay.CommonConstant",function($language,PayUtilityService,CommonConstant){function WorkflowTasksModel(){this.id="taxWithholdingTasks",this.title=$language.get("pay.DASHBOARD_TAX_WITHHOLDING_WORKFLOW_TYPE_TITLE_MULTIPLE"),this.message=$language.get("pay.DASHBOARD_TAX_WITHHOLDING_WORKFLOW_MESSAGE"),this.count=0,this.icon=CommonConstant.ICON.ICON_PAY,this.singleItemUrl=PayUtilityService.getTemplate("FRAMEWORK_TASKS_PORTAL_MESSAGES","WITHHOLDING_APPROVALS"),this.taskListUrl=PayUtilityService.getTemplate("FRAMEWORK_TASKS_PORTAL_MESSAGES","WITHHOLDING_APPROVALS")}function createWorkflowTasksModel(tasks,employeeId){var workflowTasks=new WorkflowTasksModel,approvals=_.filter(tasks,function(task){var taxWithholdingPattern=new RegExp("Tax Withholding","i");return employeeId?taxWithholdingPattern.test(task.subject)&&task.originatorAssociateOID===employeeId:taxWithholdingPattern.test(task.subject)});return workflowTasks.count=approvals.length,workflowTasks.count>0&&(workflowTasks.title=workflowTasks.count>1?" "+$language.get("pay.DASHBOARD_TAX_WITHHOLDING_WORKFLOW_TYPE_TITLE_MULTIPLE"):" "+$language.get("pay.DASHBOARD_TAX_WITHHOLDING_WORKFLOW_TYPE_TITLE_SINGLE")),{workflowTasks:workflowTasks,approvals:approvals}}return{createWorkflowTasksModel:createWorkflowTasksModel}}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.TaxWithholdingWorkflowTaskService",["$q","$http","$window","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService","redbox.framework.tasks.factory.FederalWorkflowComparisonService","redbox.framework.tasks.factory.StateWorkflowComparisonService","adp.ng.logging.LoggerFactory","redbox.framework.tasks.factory.WorkflowActionsUrlResolverService","redbox.pay.TaxWithholdingService","redbox.pay.FederalWithholdingService","redbox.pay.StateWithholdingService","redbox.workflow.WorkflowPendingEventsService","redbox.framework.tasks.factory.TaxWithholdingJurisdictionResolverService","redbox.pay.TaxWithholdingConstant","redbox.framework.tasks.factory.TaxWithholdingWorkflowModel",function($q,$http,$window,tasksService,portalMessagesService,federalWorkflowComparisonService,stateWorkflowComparisonService,loggerFactory,workflowActionsUrlResolverService,taxWithholdingService,federalWithholdingService,stateWithholdingService,workflowPendingEventsService,jurisdictionResolverService,taxWithholdingConstant,TaxWithholdingWorkflowModel){function getSanitizedData(allTasks){return{data:_.compact(allTasks.data)}}function getWorkflowTasks(employeeId){return portalMessagesService.getRedboxWorkflowTasks().then(function(tasks){var workflowModel=TaxWithholdingWorkflowModel.createWorkflowTasksModel(tasks,employeeId);return tasksService.updateTaskData(workflowModel.workflowTasks),workflowModel})}function stripAlienCodeFromAllowanceQuantity(withholding){function getFirstNum(num){return parseInt(num.toString().slice(1),10)}var currentNRA=_.get(withholding,"NRAIndicator.value"),prevNRA=_.get(withholding,"NRAIndicator.prev"),previous=_.get(withholding,"allowances.prev",!1),current=_.get(withholding,"allowances.value",!1);previous&&!isNaN(previous)&&prevNRA&&_.set(withholding,"allowances.prev",previous<=9?previous:getFirstNum(previous)),current&&!isNaN(current)&&currentNRA&&_.set(withholding,"allowances.value",current<=9?current:getFirstNum(current))}function getWithholdingTasks(approvals){var promises=[];return approvals&&_.forEach(approvals,function(approval){promises.push(getWithholdingTaskData({aoid:approval.originatorAssociateOID,type:approval.subject,url:approval.notificationUri.href,timestamp:approval.receiptDate}))}),$q.all(promises).then(function(data){return{data:data}}).catch(function(error){return logger.error("Error occurred in creating withholding data",error),$q.reject(error)})}function getWithholdingTaskData(task){return workflowPendingEventsService.getPendingEventsForAssociate(task.aoid).then(function(pendingEvents){return portalMessagesService.getTaskDecisionURI(task.url).then(function(data){task.name=data.notification.originatorName;var actionUrls=workflowActionsUrlResolverService.resolveApproveRejectUrls(data.notification);return task.approve=actionUrls.approveUrl,task.reject=actionUrls.rejectUrl,processWithholding(task,pendingEvents)})})}function processWithholding(task,pendingEvents){var taskID=task.approve.split("/")[4],withholdingTask=createWithholdingTask(task),jurisdiction=jurisdictionResolverService.resolveJurisdiction(task,pendingEvents);return withholdingTask.withholding=[],withholdingTask.action=jurisdiction.action,task.uri=jurisdiction.uri,task.id=taskID,jurisdiction.uri===taxWithholdingConstant.URI.STATE_WORKFLOW_TASK?processStateWithholding(task,withholdingTask):jurisdiction.uri===taxWithholdingConstant.URI.FEDERAL_WORKFLOW_TASK?processFederalWithholding(task,withholdingTask):void 0}function processStateWithholding(task,withholdingTask){return withholdingTask.isFederalWithholding=!1,fetchWithholding(task.aoid,task.id,task.uri).then(function(data){return stateWithholdingService.getMappedTaxData(data)}).then(function(data){var ComparedData=stateWorkflowComparisonService.workflowComparison(data);return _.forEach(ComparedData,function(state){state.isChanged&&(withholdingTask.withholding.push(state),withholdingTask.isAnyStateChanged=!0)}),!withholdingTask.isFederalWithholding&&withholdingTask.isAnyStateChanged&&(withholdingTask.comments=processComments(data.pendingEvents)),withholdingTask})}function processFederalWithholding(task,withholdingTask){return withholdingTask.isFederalWithholding=!0,fetchWithholding(task.aoid,task.id,task.uri).then(function(data){if(!_.isEmpty(data.pendingData)){var indicatorInfo,currentData={};return _.isEmpty(data.currentData)||(currentData=taxWithholdingService.extractData(data.currentData),indicatorInfo=federalWithholdingService.checkIndicatorPresence(currentData),indicatorInfo.hasNRAIndicator&&federalWithholdingService.setTaxWithholdingAllowanceQuantity(currentData)),withholdingTask.withholding=federalWorkflowComparisonService.workflowComparison(data),withholdingTask.withholding[0]&&withholdingTask.withholding[0].workflow&&(1===withholdingTask.withholding[0].workflow.status||0===withholdingTask.withholding[0].workflow.status)&&(withholdingTask.comments=processComments(data.pendingEvents)),withholdingTask}})}function processComments(pendingEvents){var comments=[];return _.forEach(pendingEvents,function(pendingEvent){_.forEach(pendingEvent.history,function(history){history.comments&&comments.push({name:history.assignedTo.split(", ").reverse().join(" "),date:$window.moment(history.actionDate).format("ll"),comment:history.comments})})}),comments}function fetchWithholding(aoid,taskUrl,uri){var url=uri.replace("{associateoid}",aoid),config={};return config.headers={"if-none-match":"any","loading-indicator":!1},$http.get(url+taskUrl,config).then(function(result){return result.data})}function createWithholdingTask(task){return{uri:{approve:task.approve,reject:task.reject},name:task.name,aoid:task.aoid,type:task.type,timestamp:task.timestamp,selected:!1,status:"pending",taskActionError:!1}}function submitTaskDecision(withholdingApproval,isApproved){var url=isApproved?_.get(withholdingApproval,"uri.approve"):_.get(withholdingApproval,"uri.reject");return portalMessagesService.submitTaskDecision(url,withholdingApproval.comment)}var workflowTasksPromise,withholdingTasksPromise,logger=loggerFactory.getLogger("redbox.framework.tasks.factory.TaxWithholdingWorkflowTaskService"),withholdingTaskService=this;this.init=function(bustCache,employeeId){return!bustCache&&workflowTasksPromise||(workflowTasksPromise=getWorkflowTasks(employeeId)),workflowTasksPromise},this.getWithholdingTasks=function(clearCache){return!clearCache&&withholdingTasksPromise||(withholdingTasksPromise=this.init(clearCache).then(function(res){return getWithholdingTasks(res.approvals).then(getSanitizedData)})),withholdingTasksPromise},this.approveRequest=function(withholdingApproval){return submitTaskDecision(withholdingApproval,!0).then(function(){return withholdingTaskService.init(!0)})},this.rejectRequest=function(withholdingApproval){return submitTaskDecision(withholdingApproval,!1).then(function(){return withholdingTaskService.init(!0)})},this.stripAlienCodeFromWithholdingTasks=function(withholdingTasks){_.forEach(_.get(withholdingTasks,"data",[]),function(task){_.forEach(_.get(task,"withholding",[]),function(withholding){stripAlienCodeFromAllowanceQuantity(withholding)})})}}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.ManagerTransferWorkflowTaskService",["$rootScope","$q","$http","$language","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService","redbox.notifications.NotificationsTransferFactory",function($rootScope,$q,$http,$language,tasksService,portalMessagesService,transferFactory){function init(clearDeferred,employeeId){return clearDeferred&&(mtDeferred=null),mtDeferred?mtDeferred.promise:(mtDeferred=$q.defer(),portalMessagesService.getRedboxWorkflowTasks().then(function(tasks){managerTransferTasks.approvals=_.filter(tasks,function(task){return isManagerTransferTask(task.subject,employeeId,task.relatedAssociateRef.associateOID)}),managerTransferTasks.approvals&&(response.count=managerTransferTasks.approvals.length,response.title=managerTransferTasks.approvals.length>1?" "+$language.get("framework.TASKS_MANAGER_TRANSFER_APPROVALS"):" "+$language.get("framework.TASKS_MANAGER_TRANSFER_APPROVAL"),tasksService.updateTaskData(response)),mtDeferred.resolve(),mtTaskDeferred=null,getTransfers()}),mtDeferred.promise)}function getTransfers(){return mtTaskDeferred?mtTaskDeferred.promise:(mtTaskDeferred=$q.defer(),managerTransferTasks.data=[],init().then(function(){var promises=[];angular.forEach(managerTransferTasks.approvals,function(task){var task={aoid:task.relatedAssociateRef.associateOID,type:"managertransfer",url:task.notificationUri.href,timestamp:task.receiptDate,affectedusername:task.relatedAssociateRef.formattedName};promises.push(getTransferTaskData(task))}),$q.all(promises).then(function(){mtTaskDeferred.resolve(managerTransferTasks)})}),mtTaskDeferred.promise)}function getTransferTaskData(task){portalMessagesService.getTaskDecisionURI(task.url).then(function(data){return task.name=data.notification.originatorName,task.approve=_.isArray(data.notification.actions[0].uris)?data.notification.actions[0].uris[0].href:data.notification.actions[0].uris.href,task.reject=_.isArray(data.notification.actions[1].uris)?data.notification.actions[1].uris[0].href:data.notification.actions[1].uris.href,processTransfer(task)})}function processTransfer(task){var taskID=task.approve.split("/")[4],transferTask={uri:{approve:task.approve,reject:task.reject},name:task.name,affectedUserName:task.affectedusername,aoid:task.aoid,type:task.type,timestamp:task.timestamp,selected:!1,status:"pending"};return fetchTransfer(task.aoid,taskID).then(function(data){var pendingEvents=_.get(data,"pendingEvents"),currentData=_.get(data,"currentData.workers[0].workAssignments[0]")||{},pendingData=_.get(data,"pendingEvents[0].body.events[0].data.transform.workAssignment")||{};return transferTask.action=pendingEvents[0].resourcePath.split("/").pop().split(".").pop(),_.set(pendingData,"eventReasonCode",_.get(data,"pendingEvents[0].body.events[0].data.transform.eventReasonCode")),_.set(pendingData,"effectiveDateTime",moment(_.get(data,"pendingEvents[0].body.events[0].data.transform.effectiveDateTime")).format("ll")),transferTask.transfer=transferFactory.ProcessPendingData(currentData,pendingData),_.has(transferTask.transfer,"jobCode.longName")||_.set(transferTask.transfer,"currentJob.longName",{value:"",pending:"change",prev:_.get(currentData,"jobCode.longName")}),managerTransferTasks.data.push(transferTask),managerTransferTasks})}function fetchTransfer(aoid,taskUrl){var url=TRANSFER_URI.replace("{aoid}",aoid),config={};return config.headers={"if-none-match":"any","loading-indicator":!1},$http.get(url+taskUrl,config).then(function(results){return results.data},function(err){return err})}function approveRequest(transferApproval){return submitTaskDecision(transferApproval,!0).then(function(){init(!0)})}function rejectRequest(transferApproval){return submitTaskDecision(transferApproval,!1).then(function(){init(!0)})}function submitTaskDecision(transferApproval,isApproved){var url=isApproved?_.get(transferApproval,"uri.approve"):_.get(transferApproval,"uri.reject");return portalMessagesService.submitTaskDecision(url,transferApproval.comment)}function isManagerTransferTask(subject,employeeId,taskAssociateOID){return employeeId&&taskAssociateOID?new RegExp("Transfer","i").test(subject)&&taskAssociateOID===employeeId:new RegExp("Transfer","i").test(subject)}var mtDeferred,mtTaskDeferred,response={id:"profileManagerTransferWorkTask",title:$language.get("framework.TASKS_MANAGER_TRANSFER_APPROVALS"),message:"showing manager transfer tasks",count:0,icon:"fa fa-users fa-lg",singleItemUrl:"app/framework/modules/tasks/portal-messages/views/transfer-workflow-approvals-landing.html",taskListUrl:"app/framework/modules/tasks/portal-messages/views/transfer-workflow-approvals-landing.html"},managerTransferTasks={approvals:[],data:[]},TRANSFER_URI="/wf/hr/v2/workers/{aoid}/worker-transfer?taskId=";return{init:init,getTransfers:getTransfers,approveRequest:approveRequest,rejectRequest:rejectRequest}}]),angular.module("redbox.framework.tasks.factory").service("redbox.framework.tasks.factory.WorkflowActionsUrlResolverService",["redbox.framework.tasks.TASKS_CONSTANTS",function(TasksConstants){function resolveApproveRejectUrls(notification){var urlResolver={approveUrl:"",rejectUrl:""};return _.forEach(notification.actions,function(action){if(action.labelName){var actionType=action.labelName.toLowerCase();actionType===TasksConstants.ACTIONS.APPROVE?urlResolver.approveUrl=action.uris[0].href:actionType===TasksConstants.ACTIONS.REJECT&&(urlResolver.rejectUrl=action.uris[0].href)}else resolveR9Uris(action,urlResolver)}),urlResolver}function resolveR9Uris(action,urlResolver){_.isArray(action.uris)?action.uris[0].href.indexOf(TasksConstants.ACTIONS.APPROVE)>-1?urlResolver.approveUrl=action.uris[0].href:action.uris[0].href.indexOf(TasksConstants.ACTIONS.REJECT)>-1&&(urlResolver.rejectUrl=action.uris[0].href):action.uris.href.indexOf(TasksConstants.ACTIONS.APPROVE)>-1?urlResolver.approveUrl=action.uris.href:action.uris.href.indexOf(TasksConstants.ACTIONS.REJECT)>-1&&(urlResolver.rejectUrl=action.uris.href)}return{resolveApproveRejectUrls:resolveApproveRejectUrls}}]),angular.module("redbox.framework.tasks").constant("redbox.framework.tasks.TASKS_CONSTANTS",{ACTIONS:{ADD:"add",CHANGE:"change",REMOVE:"remove",START:"start",STOP:"stop",APPROVE:"approve",REJECT:"reject"},STATUS:{approved:"approved",rejected:"rejected",submitted:"submitted",recalled:"recalled",pending:"pending",current:"current",was_pending:"was_pending",system_error:"system error",completed:"completed",error:"error",waiting_for_approval:"waiting_for_approval",cancelled:"cancelled",systemError:"system_error"},TYPES:{PHONE:"phone",ADDRESS:"address",CONTACT:"contact",EMAIL:"email",LEGAL_ADDRESS:"legal-address",MAILING_ADDRESS:"personal-address",LANGUAGE:"language",MEMBERSHIP:"membership",LICENSE:"license",CERTIFICATION:"certification",EDUCATIONAL_DEGREE:"education",COMPETENCY:"competency",CUSTOM_FIELDS:"custom-fields"},SUBTYPES:{PERSONAL_LANDLINE:"personal.landline",PERSONAL_MOBILE:"personal.mobile",WORK_LANDLINE:"work.landline",WORK_MOBILE:"work.mobile",WORK_FAX:"work.fax"}}),angular.module("redbox.framework.tasks").controller("redbox.framework.tasks.TasksCtrl",["$scope","$language","$timeout","$state","adp.ng.ui.slidein.FocusSlideIn","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService",function($scope,$language,$timeout,$state,$slidein,tasksService,portalMessagesService){$scope.tasks=[],$scope.allDone=!1,$scope.init=function(){portalMessagesService.getData(!0).finally(function(){tasksService.init(!0)})},$scope.$watch(function(){return tasksService.taskData.tasks},function(tasks,previousTasks){$scope.tasks=tasks,previousTasks.length>=1&&0===$scope.tasks.length&&($scope.allDone=!0),1===$scope.tasks.length&&1===$scope.tasks[0].count?$scope.singleItemUrl=$scope.tasks[0].singleItemUrl:$scope.singleItemUrl="";
}),$scope.hasOverdue=function(task){var foundOverdue=!1;if(task.overDueCount>0)foundOverdue=!0;else{var today=moment();task.dueDateList&&angular.forEach(task.dueDateList,function(dueDate){moment(dueDate).isBefore(today,"day")&&(foundOverdue=!0)})}return foundOverdue},$scope.getDueMessage=function(task){var overDueCount=0,dueTodayCount=0,dueTomorrowCount=0,today=moment(),tomorrow=moment().add(1,"days");if(task.dueDateList?angular.forEach(task.dueDateList,function(dueDate){moment(dueDate).isBefore(today,"day")?overDueCount++:moment(dueDate).isSame(today,"day")?dueTodayCount++:moment(dueDate).isSame(tomorrow,"day")&&dueTomorrowCount++}):task.overDueCount&&(overDueCount=task.overDueCount),overDueCount>0){var overDueVerbiage=$language.get("framework.TASKS_OVERDUE");return task.overDueDescriptionPlural&&(overDueVerbiage=1===overDueCount?$language.get(task.overDueDescriptionSingular):$language.get(task.overDueDescriptionPlural)),overDueCount+" "+overDueVerbiage}return dueTodayCount>0?dueTodayCount+" "+$language.get("framework.TASKS_DUE_TODAY"):dueTomorrowCount>0?dueTomorrowCount+" "+$language.get("framework.TASKS_DUE_TOMORROW"):""},$scope.$watch("tasks",function(newValue,oldValue){$scope.total=0,1===newValue.length?$scope.$emit("showMe"):newValue.length>1&&$scope.$emit("showMe");for(var i=0,len=newValue.length;i<len;i++)newValue[i].totalTaskCount?$scope.total=$scope.total+newValue[i].totalTaskCount:$scope.total=$scope.total+newValue[i].count,newValue[i].overDueCount&&($scope.overDueCount=$scope.overDueCount+newValue[i].overDueCount),$scope.displayTaskCount(newValue[i].count);$scope.total>999&&($scope.total="999+"),1===oldValue.length&&$timeout(function(){tasksService.taskData.notifications.length>0?$("#tasks-hurray-message").fadeOut("0.3s",function(){$scope.allDone=!0}):0===tasksService.taskData.notifications.length&&0===tasksService.taskData.tasks.length&&$scope.$emit("hideMe")},2e3)}),$scope.displayTaskCount=function(tcount){return tcount>99?"99+":tcount},$scope.openTaskView=function(task){task&&task.state?$state.go(task.state):($scope.taskType=task&&task.id,$slidein({scope:$scope,contentTemplate:"app/framework/modules/tasks/views/cross-type-view.html",backButton:$language.get("shared.BACK")}))},$scope.init()}]),angular.module("redbox.framework.tasks").service("redbox.framework.tasks.TasksService",["$http","$q","$injector","redbox.ext.shared.services.UserPermissionService","adp.ng.logging.LoggerFactory",function($http,$q,$injector,userPermission,loggerFactory){var taskTypesDeferred,initDeferred,logger=loggerFactory.getLogger("redbox.framework.tasks.TasksService"),taskData={tasks:[],notifications:[]},init=function(clearDeferred,employeeId){return initDeferred&&!clearDeferred?initDeferred.promise:(initDeferred=$q.defer(),taskData.tasks=[],getPermittedTaskTypes().then(function(permTaskTypes){angular.forEach(permTaskTypes,function(typeConfig){var taskFactory=$injector.get(typeConfig.taskFactoryService);employeeId?typeConfig.managerViewEmployeeProfile&&taskFactory.init(clearDeferred,employeeId):taskFactory.init(clearDeferred)}),initDeferred.resolve()}).catch(function(error){logger.error("Error occurred in init() retrieving permitted tasks",error),initDeferred.reject(error)}),initDeferred.promise)},getTaskTypes=function(){return taskTypesDeferred?taskTypesDeferred.promise:(taskTypesDeferred=$q.defer(),$http.get("app/framework/modules/tasks/task-types.json").then(function(results){var taskTypes=results.data.factories?results.data.factories:[];taskTypesDeferred.resolve(taskTypes)}).catch(function(error){logger.error("Error occurred retrieving tasks types",error.data),taskTypesDeferred.reject(error.data)}),taskTypesDeferred.promise)},getPermittedTaskTypes=function(){var deferred=$q.defer();return getTaskTypes().then(function(results){userPermission.init().then(function(){deferred.resolve(userPermission.filterListByPermissions(results))})}).catch(function(error){logger.error("Error occurred retrieving task types",error),deferred.reject(error)}),deferred.promise},updateTaskData=function(newTaskData){isValidTaskData(newTaskData)?(taskData.tasks=_.reject(taskData.tasks,function(task){return task.id===newTaskData.id}),(newTaskData.count>0||newTaskData.overDueCount>0)&&taskData.tasks.push(newTaskData),taskData.tasks=_.sortBy(taskData.tasks,"title")):(logger.error("Invalid taskData format:"),logger.error(newTaskData))},updateNotificationData=function(newNotificationData){taskData.notifications=_.reject(taskData.notifications,function(notification){return notification.id===newNotificationData.id}),newNotificationData.count>0&&taskData.notifications.push(newNotificationData),taskData.notifications=_.sortBy(taskData.notifications,"title")},isValidTaskData=function(data){var isValid=data.id&&data.title&&data.message&&(data.singleItemUrl||data.state)&&angular.isNumber(data.count);return isValid&&data.dueDateList&&(isValid=angular.isArray(data.dueDateList),isValid&&angular.forEach(data.dueDateList,function(dueDate){angular.isDate(dueDate)||(isValid=!1)})),isValid};this.taskData=taskData,this.init=init,this.updateTaskData=updateTaskData,this.updateNotificationData=updateNotificationData}]),angular.module("redbox.branding",["ui.router","adp.ng.logging","adp.ng.utilities","redbox.shared.services","redbox.shared.utils","redbox.shared.constants","redbox.ext.shared.utils"]).config(["$stateProvider",function($stateProvider){$stateProvider.state("branding",{url:"/branding",title:"Branding",views:{main:{templateUrl:"app/admin/views/branding-themes.html",resolve:{data:["$language",function($language){return $language.resourceBundlesLoaded()}]}}}})}]),function(){function Config($stateProvider){$stateProvider.state("company",{url:"/company",title:"company.TITLE_COMPANY",views:{main:{templateUrl:"app/company/views/company.html"}}})}angular.module("redbox.company",["ui.router","redbox.shared.services","redbox.shared.filters","adp.ng.language","adp.ng.logging","angularMoment","angulartics","redbox.company.rssFeed","redbox.framework.tasks.factory","redbox.company.forms"]).config(["$stateProvider",Config])}(),function(){angular.module("redbox.company.forms",["adp.ng.logging","adp.ng.language","adp.ng.utilities","redbox.shared.services","adp.ng.ui.modal","adp.ng.ui.alert-message","redbox.framework.components","redbox.ext.shared","redbox.admin"])}(),angular.module("redbox.company.news",["ngResource","ui.router","redbox.shared.utils","angularMoment","angulartics","redbox.framework.tasks.factory"]),angular.module("redbox.company.policies",["ngResource","ui.router","redbox.shared.utils","angularMoment","angulartics","redbox.framework.tasks.factory"]).config(["$stateProvider",function($stateProvider){$stateProvider.state("policies",{url:"/policies",title:"Policies",views:{main:{templateUrl:"app/company/modules/policies/views/company-policies-slidein.html",resolve:{data:["$language",function($language){return $language.resourceBundlesLoaded()}]}}}})}]),angular.module("redbox.company.rssFeed",["ngResource","ui.router","redbox.shared.utils","angularMoment","angulartics","redbox.framework.tasks.factory"]),angular.module("redbox.connections",["angularMoment","ngAnimate","adp.ng.utilities","adp.ng.language","redbox.shared.services","redbox.shared.utils","redbox.shared.constants","redbox.ext.shared.utils","redbox.ext.shared.constants","redbox.ext.shared.services","redbox.framework.meta","redbox.connections.worker","redbox.connections.newhires","redbox.connections.search","redbox.framework.checklists","redbox.connections.yourteam","redbox.connections.addressvalidation","redbox.connections.metaforms"]).config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.when("/connections/orgchart","/connections/orgchart/"),$stateProvider.state("connections",{url:"/connections",title:"Connections",views:{main:{templateUrl:"app/connections/views/index.html",resolve:{data:["$language",function($language){return $language.resourceBundlesLoaded()}]}}}}).state("connections.yourteam",{url:"/yourteam",title:"connections.YOUR_TEAM",views:{details:{templateUrl:"app/connections/modules/yourteam/views/yourteam-landing.html"}}}).state("connections.teamtimecards",{url:"/teamtimecards",title:"time.TEAM_TIMECARDS",views:{details:{templateUrl:"app/time/modules/manager-timecard/views/team-timecards.html"}}}).state("connections.teamschedule",{url:"/teamschedule",title:"time.TEAM_SCHEDULE",views:{details:{templateUrl:"app/time/modules/manager-schedule/views/schedule-dashboard.html"}}}).state("connections.directory",{url:"/directory",title:"connections.DIRECTORY_COMPANY_DIRECTORY",views:{details:{templateUrl:"app/connections/modules/directory/views/directory-content-page.html"}}}).state("connections.orgchart",{url:"/orgchart/:associateOID",params:{associateOID:null},title:"connections.ORGCHART_ORGCHART",views:{details:{templateUrl:"app/connections/modules/orgchart/views/index.html"}}}).state("connections.newhires",{url:"/newhires",title:"connections.NEWHIRES_TITLE",views:{details:{templateUrl:"app/connections/modules/newhires/views/index.html"}}})}]),angular.module("redbox.connections.addressvalidation",["redbox.onboarding"]),angular.module("redbox.connections.contacts",["ngResource","ui.router","adp.ng.meta","redbox.shared.utils","redbox.shared.services","ngAnimate","redbox.framework.meta","redbox.framework.components"]),angular.module("redbox.connections.newhires",["redbox.shared.services","redbox.connections","redbox.onboarding.steps.welcome","redbox.onboarding.display","redbox.framework.checklists"]),angular.module("redbox.connections.search",["adp.ng.logging","adp.ng.language","adp.ng.utilities","redbox.ext.shared.services","redbox.ext.shared.constants"]),angular.module("redbox.connections.worker",["redbox.framework","redbox.framework.directives","redbox.shared.services","redbox.workflow","redbox.framework.meta","redbox.connections.contacts","redbox.talent","redbox.manageractions.transfer","redbox.connections.addressvalidation"]).config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.when("/profile","/profile/"),$stateProvider.state("profile",{abstract:!0,url:"/profile",views:{main:{templateUrl:"app/connections/modules/worker/views/worker.html"}}}).state("profile.view",{url:"/:associateOID",params:{associateOID:null}})}]),angular.module("redbox.connections.yourteam",["redbox.shared.services","redbox.connections","redbox.workflow","redbox.manageractions.transfer"]),angular.module("redbox.dashboard",["ui.router","redbox.shared.services","adp.ng.logging","adp.ng.language"]).config(["$stateProvider",function($stateProvider){$stateProvider.state("dashboard",{url:"/dashboard",title:"framework.DASHBOARD_TITLE",views:{main:{templateUrl:"app/dashboard/views/dashboard.html",resolve:{data:["$language",function($language){return $language.resourceBundlesLoaded()}]}}}})}]),angular.module("redbox.feedback",["ui.router","adp.ng.logging","adp.ng.language","adp.ng.ui.modal","angulartics","redbox.shared.constants","redbox.shared.services"]),angular.module("redbox.legal",["adp.ng.language","redbox.framework.components"]),angular.module("redbox.notifications",["redbox.framework.tasks","redbox.framework.tasks.factory","adp.ng.logging"]),angular.module("redbox.onboarding",["redbox.onboarding.common","redbox.onboarding.navigation","redbox.onboarding.tasks","redbox.onboarding.steps","redbox.onboarding.template","redbox.onboarding.errorModal"]),angular.module("redbox.onboarding.common",["redbox.onboarding.core","redbox.shared.services","redbox.ext.shared.utils","redbox.onboarding.common.imagePreload","redbox.connections.worker"]),angular.module("redbox.onboarding.common.imagePreload",[]),angular.module("redbox.onboarding.errorModal",["ui.bootstrap","adp.ng.ui.modal","ui.router.state","redbox.ext.shared.services","redbox.onboarding.common"]),angular.module("redbox.onboarding.core",["ui.router","ngResource","angulartics","angulartics.google.analytics","angularMoment","ng","ipCookie","ui.bootstrap","ngSanitize","ngCookies","adp.ng.language","adp.ng.logging","redbox.shared.services","redbox.branding","redbox.framework.directives","redbox.shared.constants","redbox.shared.interceptors","redbox.feedback","redbox.framework.components"]),angular.module("redbox.onboarding.tasks",[]),angular.module("redbox.onboarding.steps",["redbox.onboarding.steps.welcome","redbox.onboarding.steps.welcomevideo","redbox.onboarding.steps.team","redbox.onboarding.steps.about","redbox.onboarding.steps.paperwork","redbox.onboarding.steps.whatwedo","redbox.onboarding.steps.neighborhood","redbox.onboarding.steps.done"]),angular.module("redbox.onboarding.steps.paperwork",["redbox.onboarding.steps.paperwork.tasks"]),angular.module("redbox.onboarding.steps.paperwork.tasks",["redbox.onboarding.steps.paperwork.tasks.tiles","redbox.onboarding.display"]),angular.module("redbox.onboarding.steps.paperwork.tasks.tiles",["redbox.pay","redbox.company.policies","redbox.onboarding.i9","redbox.connections.contacts","redbox.onboarding.common"]),angular.module("redbox.onboarding.navigation",["redbox.onboarding.common","redbox.onboarding.template"]),angular.module("redbox.onboarding.maps",["redbox.onboarding.common"]),angular.module("redbox.onboarding.steps.done",["redbox.onboarding.template","redbox.onboarding.common","redbox.ext.shared.services","redbox.onboarding.tasks"]),angular.module("redbox.onboarding.steps.neighborhood",["redbox.onboarding.maps"]),angular.module("redbox.onboarding.steps.team",["redbox.shared.services","redbox.onboarding.team","redbox.onboarding.socialRelationships","redbox.framework.ArrayNavigator"]),angular.module("redbox.onboarding.dashboard",["redbox.onboarding.common"]),angular.module("redbox.onboarding.steps.welcome",["redbox.onboarding.template"]),angular.module("redbox.onboarding.steps.welcomevideo",[]),angular.module("redbox.onboarding.steps.whatwedo",["redbox.company.news","adp.ng.language"]),angular.module("redbox.onboarding.steps.about",["redbox.onboarding.steps.about.tasks","redbox.onboarding.common"]),angular.module("redbox.onboarding.steps.about.tasks",["redbox.onboarding.steps.about.tasks.tiles","redbox.onboarding.display"]),angular.module("redbox.onboarding.steps.about.tasks.tiles",["redbox.onboarding.common"]),angular.module("redbox.onboarding.i9",["redbox.shared.services","redbox.wizard","redbox.onboarding.display","adp.ng.language","adp.ng.logging","redbox.onboarding.common.imagePreload"]),angular.module("redbox.onboarding.template",["redbox.shared.services","redbox.ext.shared.services","redbox.connections.worker","redbox.onboarding.socialRelationships"]),angular.module("redbox.onboarding.display",["redbox.framework.components"]),angular.module("redbox.onboarding.socialRelationships",["adp.ng.logging"]),angular.module("redbox.onboarding.team",["redbox.shared.services","redbox.connections","redbox.onboarding.socialRelationships"]),angular.module("redbox.onboarding.checklists",["adp.ng.logging","redbox.framework.tasks","redbox.framework.checklists"]),angular.module("redbox.onboarding.admin",["redbox.ext.shared.services","redbox.framework.components","redbox.onboarding.template","redbox.framework.checklists","redbox.onboarding.checklists","redbox.onboarding.display"]),angular.module("redbox.shared.constants",[]),angular.module("redbox.shared.filters",["ngCookies","adp.ng.language","adp.ng.logging","redbox.shared.services"]),angular.module("redbox.shared.interceptors",["redbox.shared.constants","redbox.shared.services"]),angular.module("redbox.shared",["redbox.shared.constants","redbox.shared.filters","redbox.shared.interceptors","redbox.shared.services","redbox.shared.spec-helpers","redbox.shared.utils","adp.ng.utilities"]),angular.module("redbox.shared.services",["adp.ng.language","adp.ng.logging","redbox.shared.constants","redbox.framework.components","redbox.ext.shared.services"]),angular.module("redbox.shared.utils",["adp.ng.logging","redbox.shared.constants"]),angular.module("redbox.shell",["adp.ng.language","adp.ng.logging","redbox.framework.components","redbox.framework.menu","redbox.tour","redbox.shared.services","redbox.ext.shared.services","redbox.onboarding.common","adp.ng.ui.form"]),angular.module("redbox.supportlink",["adp.ng.logging","adp.ng.language","redbox.ext.shared.services","adp.ng.ui.slidein","adp.ng.ui.modal"]),angular.module("redbox.wizard",["adp.ng.logging","adp.ng.ui.modal","redbox.shared.services","angulartics","angulartics.google.analytics"]),angular.module("redbox.workflow",["adp.ng.logging","redbox.shared.services"]),function(){function brandingService($window,$http,$q,clientService,loggerFactory,styleUtils,clientDeviceService,imageUtilsService,UPLOADABLE_IMAGE_IDS,appConstant,staticUrlService,impersonationService){function parseBaseUrl(){var baseUrl,url,$parseUrl=function(){return url=$window.location.href,url.indexOf(".html")>-1?url.substring(0,url.lastIndexOf("/")+1):url.replace(/#.*$/,"")};return baseUrl=navigator.appVersion.indexOf("MSIE 9.")>-1?$parseUrl():appConstant.staticDomainUrl?appConstant.staticDomainUrl:$parseUrl()}function addCacheBustToUrlWithTimestamp(imgURL){var delimiter=imgURL.indexOf("?")>0?"&":"?";return imgURL=imgURL+delimiter+(new Date).getTime()}function isLoginPage(){return window.location.href.indexOf(LOGIN_PAGE)>=0}function getMaxAllowableSavedThemes(){return MAX_ALLOWABLE_SAVED_THEMES}function getDefaultThemeObject(){var baseUrl=parseBaseUrl(),defaultTheme={name:"",href:THEME_URL_API,lastModified:null,properties:{primaryColor:styleUtils.getColorHex("primary"),bgColor:styleUtils.getColorHex("black"),loginPoweredByColor:styleUtils.getColorHex("white"),headerPoweredByColor:styleUtils.getColorHex("white")},images:{}};return defaultTheme.images[UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG]={imageId:UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG,contentType:"image/jpeg",binaryHref:baseUrl+"ext/branding/default/img/login-background.jpg?1.18.0.1594&1472823321393"},defaultTheme.images[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO]={imageId:UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO,contentType:"image/png",binaryHref:baseUrl+"ext/branding/default/img/header-logo.png?1.18.0.1594&1472823321393"},defaultTheme}function getHasFeatureBrandingThemeByGroups(){return!0}function setCachedBase64ImageValsForTheme(theme){return theme.images[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO].content=defaultThemeBase64ImageCache[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO],theme.images[UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG].content=defaultThemeBase64ImageCache[UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG],theme}function areAllBase64ImagesCached(){return defaultThemeBase64ImageCache[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO]&&defaultThemeBase64ImageCache[UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG]}function addBase64ImagesToDefaultTheme(){var defaultTheme=getDefaultThemeObject(),promises=[];return clientDeviceService.isNative()?$q.resolve(defaultTheme):areAllBase64ImagesCached()?(defaultTheme=setCachedBase64ImageValsForTheme(defaultTheme),$q.resolve(defaultTheme)):(promises.push(getBase64ImageValueForImageId(defaultTheme,UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO)),promises.push(getBase64ImageValueForImageId(defaultTheme,UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG)),$q.all(promises).then(function(){return setCachedBase64ImageValsForTheme(defaultTheme)},function(error){return logger.error("addBase64ImagesToDefaultTheme - error = ",error),$q.resolve(defaultTheme)}))}function getBase64ImageValueForImageId(theme,imageId){var deferred=$q.defer();return defaultThemeBase64ImageCache[imageId]?deferred.resolve(!0):imageUtilsService.getBase64FromFile(theme.images[imageId].binaryHref,theme.images[imageId].contentType).then(function(base64){defaultThemeBase64ImageCache[imageId]=base64,deferred.resolve(defaultThemeBase64ImageCache[imageId])}).catch(function(error){logger.error("getBase64ImageValueForImageId - error = ",error),deferred.resolve(null)}),deferred.promise}function getDefaultTheme(){return addBase64ImagesToDefaultTheme()}function cleanAndCompleteTheme(themeParam){function setThemeDefaults(defaultTheme,theme){return theme?(theme.properties||(theme.properties={}),theme.properties=_.defaults(theme.properties,defaultTheme.properties),theme.images||(theme.images={}),theme.images=_.defaults(theme.images,defaultTheme.images),theme.name||(theme.name=defaultTheme.name),theme.href||(theme.href=defaultTheme.href)):theme=defaultTheme,theme}var deferred=$q.defer();return getDefaultTheme().then(function(defaultTheme){var theme=setThemeDefaults(defaultTheme,themeParam);deferred.resolve(theme)}),deferred.promise}function getClonedThemeObj(themeObj){var cloneThemeObj={name:"",href:THEME_URL_API,isClone:!0,properties:{},images:{}};return cloneThemeObj.properties=_.cloneDeep(themeObj.properties),cloneThemeObj.images=_.cloneDeep(themeObj.images),cloneThemeObj}function getThemeValidationErrors(theme){function validate(testFn,errStr){var rsp=testFn();return rsp||errorMsgs.push(LANG_KEYS.VALIDATIONS_PREFIX+errStr),rsp}var isValid=!0,errorMsgs=[],validations={DOES_EXIST:function(){return!!theme},HAS_NAME:function(){return theme.name&&theme.name.length>3&&"System Default"!==theme.name},HAS_PRIMARY_COLOR:function(){return theme.properties&&theme.properties.primaryColor&&7===theme.properties.primaryColor.length},HAS_BG_IMG:function(){return theme.images&&theme.images[UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG]&&theme.images[UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG].contentType},HAS_LOGO_IMG:function(){return theme.images&&theme.images[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO]&&theme.images[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO].contentType}};return angular.forEach(validations,function(testFn,langKeyErrStr){isValid=isValid&&validate(testFn,langKeyErrStr)}),errorMsgs}function getSelectedTheme(clientAliasParam){var theme,deferred=$q.defer(),clientAlias=clientAliasParam||clientService.getAliasFromCache(),url=THEME_SELECTED_URL_API;return logger.debug("clientAlias",clientAlias),isLoginPage()&&clientAlias&&(url=THEME_PRELOGIN_URL_API+clientAlias),clientAlias?(logger.debug("Retrieving theme for client alias",clientAlias),logger.debug("Theme url",url),$http.get(url,{timeout:3e3,headers:{}}).then(function(results){theme=results.data||{},deferred.resolve(theme)}).catch(function(error){logger.debug("GET API Error occurred. Using default theme",error.data),getDefaultTheme().then(function(defaultTheme){deferred.resolve(defaultTheme)}).catch(function(catchErrorResult){var defaultThemeObject=getDefaultThemeObject();deferred.resolve(defaultThemeObject)})})):(logger.debug("Using default theme"),getDefaultTheme().then(function(defaultTheme){deferred.resolve(defaultTheme)}).catch(function(error){var defaultThemeObject=getDefaultThemeObject();deferred.resolve(defaultThemeObject)})),deferred.promise}function getThemeById(themeIdParam){var themes,deferred=$q.defer(),themeId=themeIdParam||"",url=THEME_URL_API+themeId,clientAlias=clientService.getAliasFromCache();return clientAlias&&(url+=THEME_PARAM_KEY+clientAlias),$http.get(url,{timeout:3e3,headers:{}}).then(function(results){themes=results.data||[],deferred.resolve(themes)}).catch(function(error){logger.debug("GET API Error occurred. Using default theme",error.data),getDefaultTheme().then(function(theme){deferred.resolve([theme])}).catch(function(catchErrorResult){var defaultThemeObject=getDefaultThemeObject();deferred.resolve([defaultThemeObject])})}),deferred.promise}function getAllThemes(){return getThemeById()}function selectTheme(theme){var configuration,url,deferred=$q.defer();return theme.href&&(url=theme.href+THEME_ROUTE_SELECT,configuration={headers:{"loading-indicator-hide-after":3e4}},logger.info("selecting theme: ",theme.href),$http.post(url,theme,configuration).then(function(results){deferred.resolve(results.data)}).catch(function(error){logger.error("Error saveTheme() : ",error.data),deferred.reject([LANG_KEYS.API_SELECT_ERROR])})),deferred.promise}function saveTheme(theme){var configuration,deferred=$q.defer(),errorLangKeys=getThemeValidationErrors(theme);return errorLangKeys&&errorLangKeys.length>0?deferred.reject(errorLangKeys):(theme.href||(theme.href=THEME_URL_API),configuration={headers:{"loading-indicator-hide-after":3e4}},logger.info("saving theme: ",theme.href),$http.post(theme.href,theme,configuration).then(function(results){null===results.data.lastModified?deferred.reject([LANG_KEYS.API_SAVE_ERROR]):deferred.resolve(results.data)}).catch(function(error){logger.error("Error saveTheme() : ",error.data),deferred.reject([LANG_KEYS.API_SAVE_ERROR])})),deferred.promise}function deleteTheme(theme){var deferred=$q.defer();return theme.href?$http.delete(theme.href,{timeout:3e3,headers:{}}).then(function(results){deferred.resolve(results.data)}).catch(function(error){logger.error("Error deleteTheme() : ",error.data),deferred.reject([LANG_KEYS.API_DELETE_ERROR])}):(logger.error("Error deleteTheme() - missing href for call"),deferred.reject([LANG_KEYS.MISSING_THEME_ID])),deferred.promise}function applyBranding(clientAlias,cacheBustImages){var deferred=$q.defer(),theme={};return getSelectedTheme(clientAlias).then(function(results){theme=results||{},loadBranding(theme,cacheBustImages),deferred.resolve(theme)}).catch(function(e){logger.error("calling getSelectedTheme returned error, it promises always succeed",e),deferred.resolve(theme)}),deferred.promise}function loadStyleSheet(lessUrl){if($window.less){var isLoaded=_.find($window.less.sheets,function(sheet){return sheet.href.indexOf(lessUrl)>0});if(!isLoaded){var brandLess=$("<link />").attr({href:lessUrl,rel:"stylesheet/less",type:"text/less"}).appendTo($("head"));$window.less.logLevel=0,$window.less.sheets.push(brandLess[0])}}}function loadBranding(theme,bCacheBustImages){function getHrefForCacheBusting(hrefParam){var href=hrefParam;return bCacheBustImages&&(href=addCacheBustToUrlWithTimestamp(href)),href}var headerLogoHref,loginBgHref;loadStyleSheet(getBrandableLessURL()),cleanAndCompleteTheme(theme).then(function(completeTheme){headerLogoHref=impersonationService.addActingSessionIdParamSync(getHrefForCacheBusting(completeTheme.images[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO].binaryHref)),loginBgHref=impersonationService.addActingSessionIdParamSync(getHrefForCacheBusting(completeTheme.images[UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG].binaryHref)),updateLessVars({"@brand-primary-color":completeTheme.properties.primaryColor,"@brand-bgcolor":completeTheme.properties.bgColor,"@brand-powered-by-adp-header":completeTheme.properties.headerPoweredByColor,"@brand-powered-by-adp-login":completeTheme.properties.loginPoweredByColor,"@brand-header-logo":'"'+headerLogoHref+'"',"@brand-login-bgimage":'"'+loginBgHref+'"'})})}function updateLessVars(newVars){allLessModifiedVars=_.assign(allLessModifiedVars,newVars),$window.less&&($window.less.refresh(),$window.less.modifyVars(allLessModifiedVars))}function getBrandableLessURL(){return navigator.appVersion.indexOf("MSIE 9.")>-1?"app/framework/less/brandable.less?"+appConstant.buildVersion:staticUrlService.format("app/framework/less/brandable.less")}function getAllGroups(){var deferred=$q.defer();return getHasFeatureBrandingThemeByGroups()?($http.get(ACCESS_GROUPS_URL_API).then(function(results){results.data&&results.data.accessGroups?deferred.resolve(results.data.accessGroups):deferred.resolve([])}).catch(function(err){logger.debug("GET ACCESS GROUPS API Error",err.data),deferred.resolve([])}),deferred.promise):(deferred.resolve([]),deferred.promise)}function getGroupsAssignedToThemes(){var groups,deferred=$q.defer(),url=THEME_URL_API+GROUPS_ROUTE;return $http.get(url).then(function(results){groups=results.data||[],deferred.resolve(groups)}).catch(function(err){logger.error("GET GROUPS API Error",err.data),deferred.reject(err.data)}),deferred.promise}function postGroupChangesForTheme(themeUrl,groups){var deferred=$q.defer(),payload={groups:groups},url=themeUrl+"/"+GROUPS_ROUTE;return $http.post(url,payload).then(function(result){deferred.resolve(!0)}).catch(function(err){logger.error("POST GROUPS API Error",err.data),deferred.reject(err.data)}),deferred.promise}function deleteGroupsForTheme(themeUrl){var deferred=$q.defer(),url=themeUrl+"/"+GROUPS_ROUTE;return $http.delete(url).then(function(result){deferred.resolve(!0)}).catch(function(err){logger.error("DELETE GROUPS API Error",err.data),deferred.reject(err.data)}),deferred.promise}function extractThemeId(href){var indexStart,indexFinish;return href?(indexStart=href.indexOf(THEME_URL_API),indexStart>=0&&(indexStart+=THEME_URL_API.length),indexFinish=href.indexOf("/",indexStart+1),indexFinish>=0?href.substring(indexStart,indexFinish):href.substring(indexStart)):null}var THEME_PARAM_KEY="?alias=",THEME_PRELOGIN_URL_API="/redboxapi/public/core/v1/branding/themes/selected?alias=",THEME_URL_API="/redboxapi/core/v1/branding/themes/",THEME_ROUTE_SELECT="/select",THEME_SELECTED_URL_API=THEME_URL_API+"selected",LOGIN_PAGE="login.html",GROUPS_ROUTE="groups",ACCESS_GROUPS_URL_API="/core/v1/access-groups",allLessModifiedVars={},logger=loggerFactory.getLogger("redbox.branding.BrandingService"),LANG_KEYS={VALIDATIONS_PREFIX:"BRANDING_THEME_VALIDATION_ERROR_",API_DELETE_ERROR:"BRANDING_THEME_API_DELETE_ERROR",API_SAVE_ERROR:"BRANDING_THEME_API_SAVE_ERROR",API_SELECT_ERROR:"BRANDING_THEME_API_SELECT_ERROR",MISSING_THEME_ID:"BRANDING_THEME_MISSING_THEME_ID"},MAX_ALLOWABLE_SAVED_THEMES=30,defaultThemeBase64ImageCache={};return{getHasFeatureBrandingThemeByGroups:getHasFeatureBrandingThemeByGroups,getAllThemes:getAllThemes,getThemeById:getThemeById,saveTheme:saveTheme,deleteTheme:deleteTheme,selectTheme:selectTheme,getSelectedTheme:getSelectedTheme,getMaxAllowableSavedThemes:getMaxAllowableSavedThemes,getDefaultTheme:getDefaultTheme,cleanAndCompleteTheme:cleanAndCompleteTheme,getClonedThemeObj:getClonedThemeObj,getThemeValidationErrors:getThemeValidationErrors,getAllGroups:getAllGroups,getGroupsAssignedToThemes:getGroupsAssignedToThemes,postGroupChangesForTheme:postGroupChangesForTheme,deleteGroupsForTheme:deleteGroupsForTheme,extractThemeId:extractThemeId,applyBranding:applyBranding,loadStyleSheet:loadStyleSheet,updateLessVars:updateLessVars}}angular.module("redbox.branding").factory("redbox.branding.BrandingService",brandingService),brandingService.$inject=["$window","$http","$q","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory","adp.ng.utilities.StyleUtils","adp.ng.utilities.ClientDeviceService","redbox.shared.utils.ImageUtils","redbox.shared.utils.UPLOADABLE_IMAGE_IDS","redbox.shared.constants.AppConstant","redbox.shared.services.StaticUrlService","redbox.shared.services.ImpersonationService"]}(),angular.module("redbox.company").controller("redbox.company.CompanyBioTileCtrl",["$scope","$language","adp.ng.ui.slidein.FocusSlideIn","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory",function($scope,$language,$slidein,clientService,loggerFactory){var logger=loggerFactory.getLogger("redbox.company.CompanyBioTileCtrl");$scope.openBio=function(){$slidein({scope:$scope,contentTemplate:"app/company/views/company-bio.html",backButton:$language.get("company.TITLE_COMPANY")})},$scope.init=function(){$scope.showReadMore=!1;var editedBio,locale=$language.getLocale().name;clientService.getCompanyBio(locale).then(function(bio){bio&&bio.content&&(editedBio=bio.content,editedBio.length>500&&($scope.showReadMore=!0,editedBio=editedBio.substring(0,500)+"..."),$scope.bio=editedBio,$scope.fullBio=bio.content,$scope.$emit("showMe"))},function(error){logger.error("Error occurred retrieving bio",JSON.stringify(error))})},$scope.init()}]),function(){function CompanyCtrl($scope,tilesService){var vm=this;vm.tiles=[],vm.init=function(){tilesService.getPermittedTiles("app/company/js/tiles.json").then(function(tiles){$scope.tiles=tiles})},vm.init()}angular.module("redbox.company").controller("redbox.company.CompanyCtrl",CompanyCtrl),CompanyCtrl.$inject=["$scope","redbox.dashboard.TilesService"]}(),angular.module("redbox.company").controller("redbox.company.CompanyLinksTileCtrl",["$scope","redbox.shared.services.CompanyLinksService","adp.ng.logging.LoggerFactory","$language",function($scope,companyLinksService,loggerFactory,$language){
var logger=loggerFactory.getLogger("redbox.company.CompanyLinksTileCtrl");$scope.moreLinks=[],$scope.showMore=!1,$scope.linkOptions={showLabel:!0};var vm=this;vm.placeholdervm=$language.get("shared.PLEASE_SELECT"),$scope.placeholderscope=$language.get("framework.ADMIN_LINKS_TILE_PLACEHOLDER");var tileId=$scope.$parent.tile.id,tileToScreenIdMap={companyLinks:"companyPage",dashboardLinks:"dashboard",payLinks:"pay",profileLinks:"profile"};$scope.init=function(){companyLinksService.getClient().then(function(client){var screenId=tileToScreenIdMap[tileId],tile=companyLinksService.getTileById(client.tiles,screenId);$scope.links=companyLinksService.getFullLinks(client.links,tile.links),tile?tile.visible&&$scope.links&&$scope.links.length>0?(tile.label&&$scope.$emit("changeTitle",{title:tile.label}),$scope.links.length>5&&($scope.showMore=!0),$scope.$emit("showMe")):$scope.$emit("hideMe"):logger.error("Error mapping tileId to screenId. tileId = ",tileId)}).catch(function(error){logger.error("Error occurred retrieving client",JSON.stringify(error)),$scope.$emit("hideMe")})},$scope.showMoreLinks=function(howMany){var more=_.cloneDeep($scope.links);$scope.moreLinks=more.splice(5,howMany),$scope.showMore=!1},$scope.showLessLinks=function(){$scope.moreLinks=[],$scope.showMore=!0},$scope.init()}]),angular.module("redbox.company").controller("redbox.company.CompanyTwitterTileCtrl",["$scope","$window","redbox.shared.services.ClientService","redbox.shared.services.ConfigService","adp.ng.logging.LoggerFactory",function($scope,$window,clientService,configService,loggerFactory){function destroyWidget(){var $=function(id){return document.getElementById(id)},twitter=$("#twitter-timeline");null!==twitter&&(twitter.innerHTML="")}var logger=loggerFactory.getLogger("redbox.company.CompanyTwitterTileCtrl"),twitterURL="https://platform.twitter.com/widgets.js?1.18.0.1594&1472823321393";$scope.init=function(){$scope.companyInfo={client:{}},destroyWidget(),configService.get("twitterWidgetId").then(function(widgetId){$scope.widgetId=widgetId,clientService.getClient().then(function(client){client&&($scope.companyInfo.client=_.cloneDeep(client),client.twitter&&client.twitter.userName&&($scope.$emit("showMe"),LibUtils.load(twitterURL,function(){$window.twttr.widgets.createTimeline(widgetId,document.getElementById("twitter-timeline"),{width:"100%",height:"350",screenName:client.twitter.userName,chrome:"nofooter"})})))},function(error){logger.error("Error occurred retrieving client",JSON.stringify(error))})})},$scope.init()}]),function(){function CompanyVideoTileCtrl($scope,clientService,loggerFactory){var vm=this,logger=loggerFactory.getLogger("redbox.company.CompanyVideoTileCtrl");clientService.getClient().then(function(client){_.has(client,"videos.company.url")&&($scope.$emit("showMe"),vm.videoUrl=client.videos.company.url)}).catch(function(error){logger.error("Error occurred retrieving the video",error)})}angular.module("redbox.company").controller("redbox.company.CompanyVideoTileCtrl",CompanyVideoTileCtrl),CompanyVideoTileCtrl.$inject=["$scope","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory"]}(),angular.module("redbox.company").service("redbox.company.CompanyMenuService",["$q","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory",function($q,clientService,loggerFactory){var logger=loggerFactory.getLogger("redbox.company.CompanyMenuService"),showMenu=function(){var initDeferred=$q.defer();return clientService.getClient().then(function(client){client?initDeferred.resolve(client.showCompanyPage):initDeferred.resolve(!1)}).catch(function(error){logger.warn("Error occurred retrieving client",JSON.stringify(error)),initDeferred.reject(!1)}),initDeferred.promise};this.showMenu=showMenu}]),function(){function CompanyFormsPreviewCtrl($scope,CompanyFormsService){function downloadDocument(){var a=document.createElement("a");document.getElementsByTagName("body")[0].appendChild(a),a.href=vm.item.href,a.target="_self",a.download=vm.item.href,a.click(),document.getElementsByTagName("body")[0].removeChild(a)}function checkStatus(){CompanyFormsService.isPreviewAvailable(vm.item.documentId).then(function(isPreviewAvailable){isPreviewAvailable&&(vm.previewLink=vm.item.pdf)}).catch(function(error){vm.notReadyMsg=error})}var vm=this;vm.item=$scope.item,vm.downloadDocument=downloadDocument,function(){checkStatus()}()}angular.module("redbox.company.forms").controller("redbox.company.forms.CompanyFormsPreviewCtrl",CompanyFormsPreviewCtrl),CompanyFormsPreviewCtrl.$inject=["$scope","redbox.company.forms.CompanyFormsService"]}(),function(){function CompanyFormsService($q,$http,$lang,userPermissionService,$slideIn,loggerFactory){function validateDocuments(documents){var invalidDocuments=_.filter(documents,function(document){return!document.fileName||!document.displayName});invalidDocuments.length&&logger.error("Invalid document(s) returned by fetch: ",invalidDocuments)}function getAllDocuments(config){return $http.get(CO_DOCS_API_ROUTE,config).then(function(documents){return logger.info("Company Forms list retrieved successfully"),validateDocuments(documents.data),documents}).catch(function(error){return logger.error("Error occurred retrieving Company Forms list",error),$q.reject(error)})}function addDocument(formID,postData){return $http.post(CO_DOCS_API_ROUTE+formID,postData).then(function(result){return logger.info("updated"),result}).catch(function(error){return logger.error("updating",error),$q.reject(getErrorMessage(_.get(error,"data.confirmMessage.resourceMessages[0].processMessages[0].developerMessage.messageTxt")))})}function removeDocument(formId){return $http.delete(CO_DOCS_API_ROUTE+formId).then(function(result){return logger.info("Company Form successfully deleted"),result}).catch(function(error){return logger.error("Error occurred deleted form",error),$q.reject(error)})}function getFormsCount(config){return $http.get(CO_DOCS_STATS_API_ROUTE,config).then(function(result){return logger.info("Company Forms count successfully received"),result}).catch(function(error){return logger.error("Error receiving Company Forms count"),$q.reject(error)})}function isPreviewAvailable(formID){return $http.get(CO_DOCS_API_ROUTE+formID+"/pdf/status").then(function(result){return logger.info("Company Forms document preview status retrieved successfully",result.data.status),result.data.status?_.get(result,"data.status"):$q.reject($lang.get("framework.ADMIN_COMPANY_DOCUMENTS_PREVIEW_NOT_READY"))}).catch(function(error){return logger.error("Error occurred retrieving Company Forms document preview status",error),$q.reject(error)})}function getAllGroups(){return $http.get(ACCESS_GROUPS_URL_API).then(function(results){var accessGroups=_.get(results,"data.accessGroups");return logger.info("Access Groups retrieved successfully",accessGroups),accessGroups}).catch(function(error){return logger.debug("GET ACCESS GROUPS API Error",error),$q.reject(error)})}function getPropertiesForDocument(documentID){return $http.get(CO_DOCS_API_ROUTE+documentID+"/properties").then(function(result){return logger.info("Company Documents properties retrieved successfully",result.data),_.get(result,"data")}).catch(function(error){return logger.error("Error occurred retrieving Company Documents properties",error),$q.reject(error)})}function isValidCompanyDocFileName(fileName){var isValid=/^([ A-Za-z0-9-_\\.\\(\\)])+$/.test(fileName);return isValid}function getViewType(){return vm.viewType}function setViewType(viewType){vm.viewType=viewType}function getDocItemForEdit(){return vm.docItem}function refreshDocs(){return refreshDocsAfterSave()}function clearRefs(){return vm.docItem=null,refreshDocsAfterSave=null,!0}function openDocsAddEditSlideIn(item,getDocumentsFetch){vm.docItem=item||"",refreshDocsAfterSave=getDocumentsFetch,$slideIn({component:"companyFormsAddEdit",validation:clearRefs})}function getErrorMessage(errorCode){switch(errorCode){case"DOCUMENT_ALREADY_EXISTS":return $lang.get("framework.ADMIN_COMPANY_DOCUMENTS_ALREADY_EXIST");case"INVALID_FILE_NAME":return $lang.get("framework.ADMIN_COMPANY_DOCUMENTS_INVALID_FILE_NAME");default:return $lang.get("framework.ADMIN_BRANDING_THEME_ERROR")}}function isCompanyDocsEnabled(){return!0}function isLocationTaggingEnabled(){return!1}function doesClientHaveOnboarding(){return userPermissionService.init().then(function(){return userPermissionService.hasOnboardingPremium()})}var refreshDocsAfterSave,logger=loggerFactory.getLogger("redbox.admin.CompanyFormsService"),CO_DOCS_API_ROUTE="/redboxapi/core/v1/client-documents/",CO_DOCS_STATS_API_ROUTE=CO_DOCS_API_ROUTE+"stats",ACCESS_GROUPS_URL_API="/core/v1/access-groups",vm=this;return vm.viewType=null,{getAllDocuments:getAllDocuments,addDocument:addDocument,removeDocument:removeDocument,getFormsCount:getFormsCount,isPreviewAvailable:isPreviewAvailable,getAllGroups:getAllGroups,getPropertiesForDocument:getPropertiesForDocument,setViewType:setViewType,getViewType:getViewType,isValidCompanyDocFileName:isValidCompanyDocFileName,getDocItemForEdit:getDocItemForEdit,refreshDocs:refreshDocs,openDocsAddEditSlideIn:openDocsAddEditSlideIn,isCompanyDocsEnabled:isCompanyDocsEnabled,isLocationTaggingEnabled:isLocationTaggingEnabled,doesClientHaveOnboarding:doesClientHaveOnboarding}}angular.module("redbox.company.forms").factory("redbox.company.forms.CompanyFormsService",CompanyFormsService),CompanyFormsService.$inject=["$q","$http","$language","redbox.ext.shared.services.UserPermissionService","adp.ng.ui.slidein.FocusSlideIn","adp.ng.logging.LoggerFactory"]}(),function(){angular.module("redbox.company").component("companyFormsAddEdit",{templateUrl:"app/company/modules/forms/components/company-forms-add-edit-component/company-forms-add-edit-component.html",controller:["$scope","$language","$timeout","adp.ng.ui.slidein.FocusSlideIn","redbox.company.forms.CompanyFormsService","adp.ng.utilities.ClientDeviceService","redbox.admin.AcsGroupsService","redbox.shared.utils.ImageUtils","adp.ng.ui.alert-message.ALERT_TYPES","adp.ng.logging.LoggerFactory",function($scope,$language,$timeout,$slideIn,companyFormsService,clientDeviceService,acsGroupsService,imageUtilsService,ALERT_TYPES,loggerFactory){function setSelectedImageEncodedUrlStr(base64UrlStr){$timeout(function(){$ctrl.fileContent=base64UrlStr,$ctrl.fileUploadCompleted=!0,$ctrl.hideDocUploadButton=!0,$ctrl.enableOnboardingCheckbox=!0,$ctrl.enableGroupsSlideInButton=hasGroupsAssignment})}function getSelectedFileName(fileName){$timeout(function(){$ctrl.title=fileName})}function imageSelectionErrorHandler(errorMsg){$timeout(function(){var uploadErrorMsg=errorMsg?errorMsg:$language.get("framework.ERROR_OCCURRED");displayDocsAlertMsg(uploadErrorMsg,ALERT_TYPES.ERROR),$ctrl.hideDocUploadButton=!1})}function save(){var formData={description:$ctrl.keywords,fileName:$ctrl.title,displayName:$ctrl.displayName},locations=[];if(formData.fileName)if(docItem||_.set(formData,"content",imageUtilsService.getImageContentFromBase64Url($ctrl.fileContent)),$ctrl.groupsListToSave&&$ctrl.unsavedChanges&&_.set(formData,"groups",$ctrl.groupsListToSave),$ctrl.isOnboardingDoc?(locations.push("onboarding"),_.set(formData,"locations",locations)):$ctrl.hasLocationChanged&&!$ctrl.isOnboardingDoc&&_.set(formData,"locations",[]),companyFormsService.isValidCompanyDocFileName(formData.fileName))companyFormsService.addDocument($ctrl.formID,formData).then(function(){$ctrl.hideDocUploadButton=!0,$ctrl.isEditMode=!1,displayDocsAlertMsg($language.get("framework.ADMIN_COMPANY_DOCUMENTS_SAVED"),ALERT_TYPES.SUCCESS),closeCurrentSlideIn(),companyFormsService.refreshDocs()}).catch(function(error){displayDocsAlertMsg(error,ALERT_TYPES.ERROR),$ctrl.hideDocUploadButton=!1,logger.error("Error occurred saving document",error)});else{var invalidCharErrorMsg=$ctrl.isEditMode?$language.get("framework.ADMIN_COMPANY_DOCUMENTS_INVALID_FILE_TITLE"):$language.get("framework.ERROR_INVALID_CHARACTER");displayDocsAlertMsg(invalidCharErrorMsg,ALERT_TYPES.ERROR),$ctrl.hideDocUploadButton=!1}else displayDocsAlertMsg($language.get("shared.ERROR_MISSING_REQUIRED_FIELDS"),ALERT_TYPES.ERROR)}function openFormsGroupSlideIn(){acsGroupsService.openAssignGroupsSlideIn($ctrl.assignedGroupsList,getHandlerForChangedGroups())}function getHandlerForChangedGroups(){return function(changedGroups){$ctrl.unsavedChanges=null,$ctrl.pendingChanges=0,$ctrl.showGroupsAlertMsg=!1,changedGroups&&($ctrl.groupsListToSave=[],_.forEach(changedGroups,function(group){group.checked&&$ctrl.groupsListToSave.push(group.groupName),group.changed&&($ctrl.unsavedChanges+=CHANGED_GROUP,group.edited=!0)}),$ctrl.unsavedChanges&&($ctrl.showGroupsAlertMsg=!0,$ctrl.pendingChanges=$ctrl.unsavedChanges),$ctrl.assignedGroupsList=changedGroups)}}function getPropertiesForDocuments(){companyFormsService.getPropertiesForDocument(docItem.documentId).then(function(properties){var assignedGroups=_.get(properties,"groups"),locations=_.get(properties,"locations");_.isArray(assignedGroups)&&assignedGroups.length>0&&(_.forEach(assignedGroups,function(groupName){$ctrl.assignedGroupsList.push({groupName:groupName,isAssigned:!0,changed:!1,checked:!0,edited:!1})}),$ctrl.assignedGroupsCount=$ctrl.assignedGroupsList.length),_.isArray(locations)&&_.includes(locations,"onboarding")&&($ctrl.isOnboardingDoc=!0)}).catch(function(error){logger.error("Error occurred retrieving Company Documents group assignments",error),$ctrl.groupsFetchFailureMsg=$language.get("framework.ADMIN_COMPANY_DOCUMENTS_GROUPS_ASSIGNED_UNAVAILABLE"),$ctrl.showGroupsAlertMsg=!0,$ctrl.enableGroupsSlideInButton=!1,hasGroupsAssignment=!1})}function setOnboardingLocation(){$ctrl.hasLocationChanged=!0}function checkStatus(){companyFormsService.isPreviewAvailable(docItem.documentId).then(function(isPreviewAvailable){isPreviewAvailable&&($ctrl.previewLink=docItem.pdf,$ctrl.hideDocsPreview=clientDeviceService.isIE())}).catch(function(error){logger.error("Error occurred retrieving document preview status",error),displayDocsAlertMsg(error,ALERT_TYPES.WARNING)})}function previewDocument(){$scope.item=docItem,$slideIn({scope:$scope,contentTemplate:PREVIEW_FORMS_TEMPLATE})}function displayDocsAlertMsg(messageStr,alertType){resetDocsAlertMsg(),$timeout(function(){$ctrl.showAlert=!0,$ctrl.alertMsg=messageStr,$ctrl.alertType=alertType||ALERT_TYPES.ERROR,$ctrl.isClosable=alertType!==ALERT_TYPES.WARNING})}function resetDocsAlertMsg(){$ctrl.showAlert=!1,$ctrl.alertMsg=""}function cancelAddEditDocument(){$slideIn.closeCurrentSlideIn()}function closeCurrentSlideIn(){$timeout(function(){$slideIn.closeCurrentSlideIn()},1e3)}var docItem,$ctrl=this,CHANGED_GROUP=1,hasGroupsAssignment=!0,PREVIEW_FORMS_TEMPLATE="app/company/views/company-forms-preview-slidein.html",logger=loggerFactory.getLogger("redbox.admin.CompanyFormsAddEditCtrl");$ctrl.save=save,$ctrl.cancelAddEditDocument=cancelAddEditDocument,$ctrl.openFormsGroupSlideIn=openFormsGroupSlideIn,$ctrl.resetDocsAlertMsg=resetDocsAlertMsg,$ctrl.setOnboardingLocation=setOnboardingLocation,$ctrl.previewDocument=previewDocument,$ctrl.fileUploadCompleted=!1,$ctrl.hideDocUploadButton=!1,$ctrl.enableGroupsSlideInButton=!1,$ctrl.showGroupsAlertMsg=!1,$ctrl.groupsListToSave=null,$ctrl.assignedGroupsList=[],$ctrl.isUsingMobile=!1,$ctrl.enableOnboardingCheckbox=!1,$ctrl.clientHasOnboarding=!1,$ctrl.hasChangedLocation=!1,$ctrl.isOnboardingDoc=!1,$ctrl.hasLocationChanged=!1,$ctrl.hideDocsPreview=!1,$ctrl.fileSelectFuncDelegates={},_.set($ctrl.fileSelectFuncDelegates,"setSelectedImageEncodedUrlStr",setSelectedImageEncodedUrlStr),_.set($ctrl.fileSelectFuncDelegates,"getSelectedFileName",getSelectedFileName),_.set($ctrl.fileSelectFuncDelegates,"imageSelectionErrorHandler",imageSelectionErrorHandler),$ctrl.$onInit=function(){companyFormsService.doesClientHaveOnboarding().then(function(clientHasOnboarding){$ctrl.clientHasOnboarding=clientHasOnboarding}),$ctrl.isLocationTaggingEnabled=companyFormsService.isLocationTaggingEnabled(),docItem=companyFormsService.getDocItemForEdit(),$ctrl.title=docItem.fileName,$ctrl.keywords=docItem.keywords,$ctrl.displayName=docItem.displayName,$ctrl.icon=docItem.icon,$ctrl.formID=docItem.documentId||"",$ctrl.isEditMode=!!docItem,docItem&&(checkStatus(),$ctrl.enableOnboardingCheckbox=!0,$ctrl.enableGroupsSlideInButton=!0),$ctrl.isUsingMobile=clientDeviceService.isMobile()||clientDeviceService.isTablet(),getPropertiesForDocuments()}}]})}(),function(){angular.module("redbox.company").component("companyForms",{templateUrl:"app/company/modules/forms/components/company-forms-component/company-forms-component.html",bindings:{location:"@"},controller:["$scope","$language","$q","$timeout","redbox.company.forms.CompanyFormsService","adp.ng.utilities.ClientDeviceService","adp.ng.ui.slidein.FocusSlideIn","adp.ng.ui.modal.adpModalService","adp.ng.logging.LoggerFactory","adp.ng.ui.alert-message.ALERT_TYPES",function($scope,$language,$q,$timeout,companyFormsService,clientDeviceService,$slideIn,$adpModal,loggerFactory,ALERT_TYPES){function showListView(){$ctrl.cardsView=!1,$ctrl.listView=!0}function showCardsView(){$ctrl.listView=!1,$ctrl.cardsView=!0}function addEditDocument(item){companyFormsService.openDocsAddEditSlideIn(item,getDocuments),$ctrl.currentStartIndex=0}function previewDocument(item){$scope.item=item,$slideIn({scope:$scope,contentTemplate:PREVIEW_FORMS_TEMPLATE})}function deleteDocument(item){$scope.deleteDocumentOnClick=function(){deleteAction(item)},$adpModal.open({content:$language.get("framework.ADMIN_COMPANY_DOCUMENTS_DELETE_DOCUMENT_TEXT"),title:$language.get("framework.ADMIN_COMPANY_DOCUMENTS_DELETE_DOCUMENT"),closeLabel:$language.get("shared.DELETE"),closeClick:"deleteDocumentOnClick()",scope:$scope})}function deleteCard(item){deleteAction(item)}function applySearchFilter(e){var keyPress=e;keyPress.which===ENTER_KEY&&(loadSearchFilter($ctrl.searchValue),$ctrl.currentStartIndex=0,getDocuments())}function applyDateFilter(){loadDateFilter(),$ctrl.currentStartIndex=0,getDocuments()}function applyLocationsFilter(){$ctrl.locations.onboarding&&(setLoadConfig("adminMode",null),setLoadConfig("locations","onboarding"),$ctrl.currentStartIndex=0,getDocuments())}function loadMoreForms(){if($ctrl.showDataLoadingIndOnScroll){var moreFormsConfig=_.cloneDeep($ctrl.config);$ctrl.currentStartIndex+=DEFAULT_PAGE_SIZE,moreFormsConfig.params.startIndex=$ctrl.currentStartIndex,companyFormsService.getAllDocuments(moreFormsConfig).then(function(response){$ctrl.list=$ctrl.list.concat(_.get(response,"data")),$ctrl.showDataLoadingIndOnScroll=$ctrl.list.length<$ctrl.totalFormsCount,addDocTypeIcons()}).catch(function(error){logger.error("Error retrieving Company Forms",error)})}}function openMobileDocument(item){window.open(item.href,"_blank")}function addDocTypeIcons(){_.forEach($ctrl.list,function(form,index){_.forEach($ctrl.icons,function(icon,docType){$ctrl.list[index].documentType===docType&&($ctrl.list[index].icon=icon)}),_.isEmpty($ctrl.list[index].icon)&&($ctrl.list[index].icon=DEFAULT_DOCTYPE_ICON)})}function getDocuments(){companyFormsService.getAllDocuments($ctrl.config).then(function(response){$ctrl.list=_.get(response,"data"),addDocTypeIcons(),$ctrl.showHeadersOnListView=!0,companyFormsService.getFormsCount($ctrl.config).then(function(formsCount){$ctrl.totalFormsCount=_.get(formsCount,"data.stats.total"),$ctrl.showDataLoadingIndOnScroll=$ctrl.list.length<$ctrl.totalFormsCount}).catch(function(error){logger.error("Error receiving forms total",error)})}).catch(function(error){logger.error("Error retrieving company forms",error),displayDocsAlertMsg($language.get("framework.ADMIN_COMPANY_DOCUMENTS_UNAVAILABLE"),ALERT_TYPES.WARNING),$ctrl.hideAddDocumentButton=!0}).finally(function(){_.isEmpty($ctrl.list)&&($ctrl.showHeadersOnListView=!1,$ctrl.showDataLoadingIndOnScroll=!1)})}function deleteAction(item){var formId=item.documentId;return companyFormsService.removeDocument(formId).then(function(){displayDocsAlertMsg($language.get("framework.ADMIN_COMPANY_DOCUMENTS_DELETE_DOCUMENT_SUCCESS"),ALERT_TYPES.SUCCESS),$ctrl.list.splice($ctrl.list.indexOf(item),1),$ctrl.currentStartIndex=0,getDocuments()}).catch(function(error){return logger.error("Error occurred deleting form",error),displayDocsAlertMsg($language.get("framework.ADMIN_COMPANY_DOCUMENTS_DELETE_DOCUMENT_ERROR"),ALERT_TYPES.ERROR),$q.reject(error)})}function openMobileDocument(item){window.open(item.href,"_blank")}function loadDateFilter(){$ctrl.filterDates.pastThreeMonths?setLoadConfig("startDate",moment().subtract(3,"month").format()):$ctrl.filterDates.pastOneMonth?setLoadConfig("startDate",moment().subtract(1,"month").format()):$ctrl.filterDates.pastWeek?setLoadConfig("startDate",moment().subtract(1,"week").format()):setLoadConfig("startDate")}function loadSearchFilter(searchValue){setLoadConfig("search",searchValue)}function setLoadConfig(property,value){$ctrl.config.params[property]=value}function displayDocsAlertMsg(messageStr,alertType){$ctrl.showAlert=!0,$ctrl.alertMsg=messageStr,$ctrl.alertType=alertType||ALERT_TYPES.ERROR,$ctrl.hasAutoClose=alertType===ALERT_TYPES.SUCCESS}function resetDocsAlertMsg(){$ctrl.showAlert=!1,$ctrl.alertMsg=""}var $ctrl=this,logger=loggerFactory.getLogger("redbox.company.companyForms"),PREVIEW_FORMS_TEMPLATE="app/company/views/company-forms-preview-slidein.html",DEFAULT_PAGE_SIZE=25,ENTER_KEY=13,DEFAULT_DOCTYPE_ICON="fa-file-text-o";$ctrl.addEditDocument=addEditDocument,$ctrl.deleteDocument=deleteDocument,$ctrl.deleteCard=deleteCard,$ctrl.previewDocument=previewDocument,$ctrl.loadMoreForms=loadMoreForms,$ctrl.openMobileDocument=openMobileDocument,$ctrl.resetDocsAlertMsg=resetDocsAlertMsg,$ctrl.applyDateFilter=applyDateFilter,$ctrl.applySearchFilter=applySearchFilter,$ctrl.applyLocationsFilter=applyLocationsFilter,$ctrl.showListView=showListView,$ctrl.showCardsView=showCardsView,$ctrl.searchValue="",$ctrl.list=[],$ctrl.currentStartIndex=0,$ctrl.listView=!0,$ctrl.showHeadersOnListView=!1,$ctrl.totalFormsCount=0,$ctrl.hideAddDocumentButton=!1,$ctrl.isUsingAdminFlow=!1,$ctrl.isUsingMobile=!1,$ctrl.isUsingOnboardingFlow=!1,$ctrl.config={params:{}},$ctrl.filterDates={pastWeek:!1,pastOneMonth:!1,pastThreeMonths:!1},$ctrl.locations={onboarding:!1},$ctrl.icons={doc:"fa-file-word-o",docx:"fa-file-word-o",pdf:"fa-file-pdf-o",ppt:"fa-file-powerpoint-o",pptx:"fa-file-powerpoint-o",jpg:"fa-file-image-o",png:"fa-file-image-o",xls:"fa-file-excel-o",xlsx:"fa-file-excel-o",html:"fa-file-code-o"},$ctrl.$onInit=function(){companyFormsService.doesClientHaveOnboarding().then(function(clientHasOnboarding){$ctrl.clientHasOnboarding=clientHasOnboarding}),$ctrl.location&&setLoadConfig("locations",[$ctrl.location]),"Admin"===companyFormsService.getViewType()&&($ctrl.isUsingAdminFlow=!0,setLoadConfig("adminMode",!0)),$ctrl.isLocationTaggingEnabled=companyFormsService.isLocationTaggingEnabled(),$ctrl.isUsingOnboardingFlow=_.isEqual($ctrl.location,"onboarding"),$ctrl.isUsingMobile=clientDeviceService.isMobile()||clientDeviceService.isTablet(),setLoadConfig("startIndex",$ctrl.currentStartIndex),setLoadConfig("pageSize",DEFAULT_PAGE_SIZE),getDocuments($ctrl.config)},$scope.$on("clear-filter",function(event){$ctrl.config.params={},$ctrl.currentStartIndex=0,setLoadConfig("startIndex",$ctrl.currentStartIndex),setLoadConfig("pageSize",DEFAULT_PAGE_SIZE),$ctrl.isUsingAdminFlow&&setLoadConfig("adminMode",!0),getDocuments()})}]})}(),function(){angular.module("redbox.company").component("companyDocsTile",{templateUrl:"app/company/modules/forms/components/company-forms-tile-component/company-forms-tile-component.html",controller:["$scope","redbox.company.forms.CompanyFormsService","adp.ng.utilities.ClientDeviceService","adp.ng.ui.slidein.FocusSlideIn","adp.ng.logging.LoggerFactory",function($scope,companyFormsService,clientDeviceService,$slideIn,loggerFactory){function previewDocument(item){$scope.item=item,$slideIn({scope:$scope,contentTemplate:PREVIEW_FORMS_TEMPLATE})}function viewAllDocuments(){companyFormsService.setViewType("Emp"),$slideIn({scope:$scope,contentTemplate:VIEW_ALL_FORMS_TEMPLATE})}var vm=this,logger=loggerFactory.getLogger("redbox.company.CompanyFormsTileCtrl"),PREVIEW_FORMS_TEMPLATE="app/company/views/company-forms-preview-slidein.html",VIEW_ALL_FORMS_TEMPLATE="app/admin/views/company-forms.html";vm.previewDocument=previewDocument,vm.viewAllDocuments=viewAllDocuments,vm.isUsingMobile=!1,vm.list=[],vm.$onInit=function(){vm.isUsingMobile=clientDeviceService.isMobile()||clientDeviceService.isTablet(),companyFormsService.getAllDocuments().then(function(response){vm.list=_.get(response,"data"),companyFormsService.isCompanyDocsEnabled&&vm.list&&vm.list.length>0?$scope.$emit("showMe"):$scope.$emit("hideMe")}).catch(function(error){logger.error("Error retrieving company forms",error),$scope.$emit("hideMe")})}}],controllerAs:"companyDocsTileCtrl"})}(),angular.module("redbox.company.news").controller("redbox.company.news.CompanyNewsCtrl",["$scope","$q","adp.ng.logging.LoggerFactory","redbox.company.news.CompanyNewsService","$sce",function($scope,$q,LoggerFactory,companyNewsService,$sce){var logger=LoggerFactory.getLogger("redbox.company.news.CompanyNewsCtrl");$scope.getNews=function(){return companyNewsService.getNewsItem($scope.selectedNews.newsEventUri).then(function(data){return data.publicationDateTime=moment(data.publicationDateTime).format("LL"),data.trustedHtmlContent=$sce.trustAsHtml(data.contentBody.embeddedData),$scope.data=data,data}).catch(function(err){return logger.warn("Error retrieving news item",err),$q.reject(err)})},$scope.setSelectedNews=function(direction){switch(direction){case"previous":$scope.selectedIndex--;break;case"next":$scope.selectedIndex++}$scope.selectedNews=$scope.news[$scope.selectedIndex],$scope.getNews()},$scope.init=function(){return $scope.getNews()}}]),angular.module("redbox.company.news").service("redbox.company.news.CompanyNewsService",["$http","$q","adp.ng.logging.LoggerFactory",function($http,$q,LoggerFactory){function getNewsList(){return $http.get("/v1_0/O/A/news?numberofdays="+NEWS_DATE_SEARCH_LIMIT_DAYS).then(function(results){var now=moment();return _.filter(results.data.news,function(data){var pubDateTime=moment(data.publicationDateTime);if(now.isSame(pubDateTime)||now.isAfter(pubDateTime))return!0})}).catch(function(error){return logger.warn("Error in call to /v1_0/O/A/news?numberofdays="+NEWS_DATE_SEARCH_LIMIT_DAYS,error),$q.reject(error.data)})}function getNewsByUri(uri){return $http.get(uri.href).then(function(results){return results.data.newsEvent}).catch(function(error){return logger.warn("Error in call to "+uri.href,error),$q.reject(error.data)})}var logger=LoggerFactory.getLogger("redbox.company.news.CompanyNewsService"),NEWS_DATE_SEARCH_LIMIT_DAYS="365";return{getList:getNewsList,getNewsItem:getNewsByUri}}]),angular.module("redbox.company.news").controller("redbox.company.news.CompanyNewsTileCtrl",["$scope","$language","adp.ng.logging.LoggerFactory","redbox.company.news.CompanyNewsService","adp.ng.ui.slidein.FocusSlideIn",function($scope,$language,LoggerFactory,companyNewsService,$slidein){var logger=LoggerFactory.getLogger("redbox.company.news.CompanyNewsTileCtrl");$scope.news=[],$scope.init=function(){companyNewsService.getList().then(function(news){_.isEmpty(news)||($scope.$emit("showMe"),$scope.news=news,angular.forEach(news,function(value){value.publicationDateTime=moment(value.publicationDateTime).format("LL"),value.images&&(value.smallImage=_.find(value.images,function(image){return"s"===image.sizeCode}).imageUri.href)}))}).catch(function(err){logger.warn("Error retrieving company news: ",err),$scope.$emit("CompanyNewsTileFailed")})},$scope.viewAllNews=function(){var backButtonText=$language.get("company.TITLE_COMPANY");$slidein({scope:$scope,contentTemplate:"app/company/modules/news/views/company-news-all.html",backButton:backButtonText})},$scope.openNewsItem=function(index,allFlag){var backButtonText=allFlag?$language.get("company.COMPANY_NEWS"):$language.get("company.TITLE_COMPANY");$scope.selectedIndex=index,$scope.selectedNews=$scope.news[index],$slidein({scope:$scope,contentTemplate:"app/company/modules/news/views/company-news.html",backButton:backButtonText})}}]),angular.module("redbox.company.policies").controller("redbox.company.policies.PolicyCtrl",["$rootScope","$scope","$window","$filter","$language","$sce","adp.ng.ui.slidein.FocusSlideIn","redbox.company.policies.PolicyEmployeeService",function($rootScope,$scope,$window,$filter,$language,$sce,$slidein,policyEmployeeService){var pokerChipConfig={},batchCount=2,batchSize=20,vm=this;vm.showPolicies={label:$language.get("shared.MORE"),shown:0,more:0,total:0,loaded:!1,unacknowledgedShown:0},$scope.$watch(function(){return policyEmployeeService.getEmployeePolicies()},function(policies){var ordered=$filter("policyCheckAckFilter")(policies);ordered=policyEmployeeService.setStatusIcon(ordered),vm.showPolicies.total=ordered.length,vm.unacknowledgedPolicies=$filter("policyStatusFilter")(angular.copy(ordered),1),vm.acknowledgedPolicies=$filter("policyStatusFilter")(angular.copy(ordered),2),vm.policies=ordered,vm.noAcknowledgePolicies=_.where(vm.policies,{acknowledgementRequiredIndicator:!1});var value=vm.unacknowledgedPolicies.length+vm.acknowledgedPolicies.length+vm.noAcknowledgePolicies.length;pokerChipConfig={value:value,description:$language.get("company.POLICIES_TOTAL"),textColor:"brand-primary-color",color:"neutral"},vm.initializePokerChip(pokerChipConfig),vm.setUpInitialPolicies(),vm.setUpUnacknowledgedPolicies()},!0),vm.initializePokerChip=function(){setTimeout(function(){$scope.$broadcast("poker-chip-initialize-policies",[pokerChipConfig])},0)},vm.viewAllPolicies=function(config){var defaultConfig={scope:$scope,contentTemplate:"app/company/modules/policies/views/company-policies-slidein.html",backButton:config&&$language.get(config.backButton)||$language.get("company.TITLE_COMPANY")};config&&config.prefixEvent&&(defaultConfig.prefixEvent=config.prefixEvent),$slidein(defaultConfig)},vm.infiniteScroll=function(allPolicies){var displayedRecords=batchCount*batchSize;allPolicies?displayedRecords>=vm.showPolicies.total?$scope.$apply(function(){vm.showPolicies.shown=vm.showPolicies.total,vm.showPolicies.more=0}):displayedRecords<vm.showPolicies.total&&$scope.$apply(function(){vm.showPolicies.shown=displayedRecords,vm.showPolicies.more=vm.showPolicies.total-displayedRecords,vm.showPolicies.more<=0&&(vm.showPolicies.more=0),batchCount+=1}):displayedRecords>=vm.unacknowledgedPolicies.length?$scope.$apply(function(){vm.showPolicies.unacknowledgedShown=vm.unacknowledgedPolicies.length,vm.showPolicies.more=0}):displayedRecords<vm.unacknowledgedPolicies.length&&$scope.$apply(function(){vm.showPolicies.unacknowledgedShown=displayedRecords,vm.showPolicies.more=vm.unacknowledgedPolicies.length-displayedRecords,vm.showPolicies.more<=0&&(vm.showPolicies.more=0),batchCount+=1})},vm.setUpInitialPolicies=function(){vm.showPolicies.total<batchSize?(vm.showPolicies.shown=vm.showPolicies.total,vm.showPolicies.more=0):(vm.showPolicies.shown=batchSize,vm.showPolicies.more=vm.showPolicies.total-batchSize)},vm.setUpUnacknowledgedPolicies=function(){vm.unacknowledgedPolicies.length<batchSize?vm.showPolicies.unacknowledgedShown=vm.unacknowledgedPolicies.length:(vm.showPolicies.unacknowledgedShown=batchSize,vm.showPolicies.more=vm.unacknowledgedPolicies.length-batchSize)},vm.selectPolicy=function(policy){var selectPolicyScope=$rootScope.$new(),policyId=policy.policyID.idValue?policy.policyID.idValue:policy.policyID.id;policyEmployeeService.setSelectedPolicy(policyId,policy.acknowledgementDueDate,_.has(policy,"hasViewed")),$slidein({contentTemplate:"app/company/modules/policies/views/policy-detail.html",scope:selectPolicyScope})},vm.downloadPolicy=function(policy){policy.hasViewed=!0,$window.open($filter("contentUrlFilter")(policy.links[0].href))},vm.isOverDue=function(policy){return!!$filter("policyStatusFilter")(policy,3)},vm.isURL=function(policy){return!policy.links[0].mediaType},vm.fetchPolicies=function(){policyEmployeeService.fetchPolicies();
},vm.renderPolicyName=function(value){return $sce.trustAsHtml($filter("htmlToPlaintext")(value))},policyEmployeeService.fetchPolicies({refetch:!0}).then(function(){vm.showPolicies.loaded=!0})}]),angular.module("redbox.company.policies").controller("redbox.company.policies.PolicyDetailCtrl",["$scope","redbox.company.policies.PolicyEmployeeService","redbox.framework.tasks.factory.PoliciesTaskService","$filter","$window","$language","$sce",function($scope,policyEmployeeService,policiesEmpTasksService,$filter,$window,$language,$sce){function validate(){return $scope.hasError=!1,$scope.errorMsg="",!!$scope.acknowledgement.doAgree||($scope.hasError=!0,$scope.errorMsg=$language.get("company.POLICIES_PLEASE_CHECK_BOX"),!1)}$scope.policy=policyEmployeeService.getSelectedPolicy(),$scope.today=new Date,$scope.acknowledgement={doAgree:!1,isComplete:!1},$scope.hasError=!1,$scope.errorMsg="",$scope.downloadPolicy=function(){$scope.policy.hasViewed=!0;var href,protocol="http://";href=0===$scope.policy.links[0].href.indexOf("/static-content/")?$filter("contentUrlFilter")($scope.policy.links[0].href):0!==$scope.policy.links[0].href.indexOf("http://")&&0!==$scope.policy.links[0].href.indexOf("https://")&&0!==$scope.policy.links[0].href.indexOf("ftp://")?protocol+$scope.policy.links[0].href:$scope.policy.links[0].href,$window.open(href)},$scope.viewerHeight=function(){var offset=315;return!$scope.policy.acknowledgedIndicator&&$scope.policy.acknowledgementRequiredIndicator||(offset=225),$(window).height()-offset+"px"},$scope.acknowledgePolicy=function(){validate()&&policyEmployeeService.acknowledgePolicy().then(function(){var clearDeferred=!0;policiesEmpTasksService.init(clearDeferred,!0)},function(){$scope.hasError=!0,$scope.errorMsg=$language.get("company.POLICIES_UNABLE_TO_DOWNLOAD")})},$scope.isOverDue=function(){return!!$filter("policyStatusFilter")($scope.policy,3)},$scope.hasDueDate=function(){return!!$scope.policy.acknowledgementDueDate},$scope.isPDF=function(){var mimeType="unknown";try{$scope.policy.links[0].mediaType&&(mimeType=$scope.policy.links[0].mediaType)}catch(err){mimeType="unknown"}return"application/pdf"===mimeType.toLowerCase()},$scope.isURL=function(policy){return!policy.links[0].mediaType},$scope.renderPolicyName=function(value){return $sce.trustAsHtml($filter("htmlToPlaintext")(value))}}]),angular.module("redbox.company.policies").controller("redbox.company.policies.PolicyEmployeeTaskCtrl",["$scope","$window","$filter","$language","$sce","adp.ng.ui.slidein.FocusSlideIn","redbox.company.policies.PolicyEmployeeService",function($scope,$window,$filter,$language,$sce,$slidein,policyEmployeeService){var vm=this;policyEmployeeService.fetchPolicies({unacknowledged:!0}),$scope.$watch(function(){return policyEmployeeService.getEmployeePolicies()},function(policies){vm.policies=$filter("policyStatusFilter")(angular.copy(policies),1),vm.policies=policyEmployeeService.setStatusIcon(vm.policies)},!0),vm.pastDue=!1,vm.selectPolicy=function(policy){var policyId=policy.policyID.idValue?policy.policyID.idValue:policy.policyID.id;policyEmployeeService.setSelectedPolicy(policyId,policy.acknowledgementDueDate,_.has(policy,"hasViewed")),$slidein({scope:$scope,contentTemplate:"app/company/modules/policies/views/policy-detail.html",backButton:$language.get("shared.BACK")})},vm.openNeedsAcknowledgementSlide=function(){$slidein({scope:$scope,contentTemplate:"app/company/modules/policies/views/company-policies-slidein.html",backButton:$language.get("shared.BACK")})},vm.downloadPolicy=function(policy){policy.hasViewed=!0,$window.open($filter("contentUrlFilter")(policy.links[0].href))},vm.isOverDue=function(policy){return!!$filter("policyStatusFilter")(policy,3)},vm.isURL=function(policy){return!policy.links[0].mediaType};var daysBetween=function(date1,date2){var utc1=Date.UTC(date1.getFullYear(),date1.getMonth(),date1.getDate()),utc2=Date.UTC(date2.getFullYear(),date2.getMonth(),date2.getDate());return Math.floor((utc2-utc1)/864e5)};vm.statusText=function(){for(var status,closestDueDate,dueDate,dateDiff,today=new Date,count=0,overDueCount=0,i=0;i<vm.policies.length;i++)!vm.policies[i].acknowledgedIndicator&&vm.policies[i].acknowledgementRequiredIndicator&&vm.policies[i].acknowledgementDueDate&&(dueDate=new Date(vm.policies[i].acknowledgementDueDate),closestDueDate?dueDate<closestDueDate?(closestDueDate=dueDate,count=1):dueDate.toDateString()===closestDueDate.toDateString()&&count++:(closestDueDate=dueDate,count=1),dueDate<today&&overDueCount++);return closestDueDate?(dateDiff=daysBetween(today,closestDueDate),dateDiff<0?(status=overDueCount+" "+$language.get("company.POLICIES_OVERDUE"),vm.pastDue=!0):status=0===dateDiff?count+" "+$language.get("company.POLICIES_DUE_TODAY"):1===dateDiff?count+" "+$language.get("company.POLICIES_DUE_TOMORROW"):count+" "+$language.get("company.POLICIES_DUE_IN")+" "+dateDiff+" "+$language.get("company.POLICIES_DAYS")):status="",status},vm.renderPolicyName=function(value){return $sce.trustAsHtml($filter("htmlToPlaintext")(value))}}]),angular.module("redbox.company.policies").controller("redbox.company.policies.PolicyManagerTaskCtrl",["$scope","$filter","$language","$sce","$timeout","adp.ng.ui.modal.adpModalService","redbox.company.policies.PolicyManagerService","adp.ng.ui.slidein.FocusSlideIn","redbox.company.policies.PolicyEmployeeService","redbox.framework.tasks.PoliciesReminderService","redbox.ext.shared.services.UserIdentityService","redbox.ext.shared.services.ProfileService","redbox.shared.services.ClientService","redbox.connections.worker.WorkerService","adp.ng.logging.LoggerFactory",function($scope,$filter,$language,$sce,$timeout,$adpModal,policyManagerService,$slidein,policyEmployeeService,policyReminderService,userIdentity,profileService,clientService,workerService,loggerFactory){var logger=loggerFactory.getLogger("redbox.company.policies.PolicyManagerTaskCtrl");$scope.isMini=!0;var modalObj,worker=new workerService;$scope.$watch(function(){return policyManagerService.getAssociates()},function(associates){$scope.associates=associates,$scope.numberOfOverdueAssociates=0;for(var i=0;i<$scope.associates.length;i++)$scope.associates[i].totalOverDue>0&&$scope.numberOfOverdueAssociates++;1===$scope.associates.length&&$scope.selectAssociate($scope.associates[0].aoid)},!0),$scope.$watch(function(){return policyManagerService.getShowTeam()},function(showTeam){$scope.showTeam=showTeam},!0),$scope.$watch(function(){return policyManagerService.getSlideInBackBtn()},function(slideInBackBtn){$scope.slideIn={backButton:slideInBackBtn}},!0),$scope.selectAssociate=function(aoid,open){var match=!1;if(!$scope.associate||$scope.associate.aoid!==aoid){for(var i=0;i<$scope.associates.length;i++)if($scope.associates[i].aoid===aoid){$scope.selectedAssociate={aoid:$scope.associates[i].aoid,name:$scope.associates[i].name,unacknowledged:$scope.associates[i].unacknowledged,totalOverDue:$scope.associates[i].totalOverDue},match=!0;break}match&&policyManagerService.getPoliciesForAssociate($scope.selectedAssociate.aoid).then(function(policies){policies=policyEmployeeService.setStatusIcon(policies),$scope.selectedAssociate.unacknowledged=$filter("policyStatusFilter")(policies.slice(0),1),$scope.selectedAssociate.totalOverDue=$filter("policyStatusFilter")(policies.slice(0),3).length,$scope.selectedAssociate.acknowledged=$filter("policyStatusFilter")(policies.slice(0),2),$scope.initializePokerChip(),open&&$slidein({scope:$scope,contentTemplate:"app/company/modules/policies/views/manager-view-employee-policy.html",backButton:$language.get("company.POLICIES_MY_TEAM")})})}},$scope.showTeamStatus=function(){policyManagerService.getShowTeam()||policyManagerService.getPoliciesForAllAssociates().then(function(result){policyManagerService.setShowTeam(!0),$scope.initTeamPage()}),policyManagerService.reminderPermissions().then(function(result){$scope.showReminderButton=result}),$slidein({scope:$scope,contentTemplate:"app/company/modules/policies/views/manager-team-policies.html",backButton:$language.get("company.POLICIES_YOUR_POLICIES")})},$scope.showOverdueAssociates=function(){policyManagerService.getOverduePoliciesForAllAssociates().then(function(result){policyManagerService.setShowTeam(!1),policyManagerService.setSlideInBackBtn($language.get("framework.MENU_DASHBOARD"))})},$scope.initTeamPage=function(){policyManagerService.setSlideInBackBtn($language.get("company.POLICIES_MY_TEAM"))},$scope.openCompanyPoliciesManagerTeam=function(){$slidein({scope:$scope,contentTemplate:"app/company/modules/policies/views/manager-team-policies.html",backButton:$language.get("lang.framework.MENU_DASHBOARD")})},$scope.isOverDue=function(policy){return!!$filter("policyStatusFilter")(policy,3)},$scope.init=function(){policyManagerService.isManager().then(function(result){$scope.user={isManager:result}})},$scope.initializePokerChip=function(){var totalPolicies=$scope.selectedAssociate.unacknowledged.length+$scope.selectedAssociate.acknowledged.length;$scope.pokerChipAcknowledgedPolicies=[{id:"pokerChip-Unacknowledged-Policies",value:$scope.selectedAssociate.unacknowledged.length,percentage:$scope.selectedAssociate.unacknowledged.length/totalPolicies,color:"accent-6",textColor:"accent-6"},{id:"pokerChip-Acknowledged-Policies",value:$scope.selectedAssociate.acknowledged.length,percentage:$scope.selectedAssociate.acknowledged.length/totalPolicies,color:"accent-1",textColor:"accent-1"}],setTimeout(function(){for(var i=0;i<$scope.pokerChipAcknowledgedPolicies.length;i++)$scope.$broadcast("poker-chip-initialize-"+$scope.pokerChipAcknowledgedPolicies[i].id,[$scope.pokerChipAcknowledgedPolicies[i]])},750)},$scope.renderPolicyName=function(value){return $sce.trustAsHtml($filter("htmlToPlaintext")(value))};var checkForPrimaryEmail=function(){worker.get().then(function(data){data&&data.businessCommunication&&data.businessCommunication.emails[0]&&data.businessCommunication.emails[0].emailUri&&($scope.disableSendReminder=!1)})};$scope.openEmailModal=function(aoid,name,totalOverdue){$scope.disableSendReminder=!0,$scope.showError=!1,$scope.showSuccess=!1,$scope.showForm=!0,modalObj=$adpModal.open({title:$language.get("company.SEND_EMAIL_NOTIFICATION"),contentUrl:"app/company/modules/policies/views/email-notification.html",scope:$scope,footer:!1}),checkForPrimaryEmail(),clientService.getClient().then(function(client){var url=clientService.getLoginUrlWithoutVersion()+client.alias;if($scope.postData={actor:{associateOID:"",formattedName:""},originator:{associateOID:"",formattedName:""},data:{transform:{notificationRequest:{subject:$language.get("company.POLICIES_EMAIL_SUBJECT"),messageText:$language.get("company.POLICIES_EMAIL_ALL_CONTENT",{LOGIN_URL:url}),recipients:[]}}}},aoid&&name)$scope.employeeAoid=aoid,$scope.postData.data.transform.notificationRequest.recipients=[{associateOID:aoid,formattedName:name}];else for(var i=0;i<$scope.associates.length;i++)$scope.postData.data.transform.notificationRequest.recipients.push({associateOID:$scope.associates[i].aoid,formattedName:$scope.associates[i].name});totalOverdue&&(1===totalOverdue?$scope.postData.data.transform.notificationRequest.messageText=$language.get("company.POLICIES_EMAIL_SINGLE_OVERDUE_CONTENT",{OVERDUE:totalOverdue,LOGIN_URL:url}):$scope.postData.data.transform.notificationRequest.messageText=$language.get("company.POLICIES_EMAIL_MULTIPLE_OVERDUE_CONTENT",{OVERDUE:totalOverdue,LOGIN_URL:url})),userIdentity.getAoid().then(function(_aoid){$scope.postData.actor.associateOID=_aoid,$scope.postData.originator.associateOID=_aoid,profileService.getProfileForAssociate($scope.postData.actor.associateOID).then(function(myName){$scope.postData.actor.formattedName=myName.name.formatted,$scope.postData.originator.formattedName=myName.name.formatted}).catch(function(error){logger.error("error retrieving profile",error)})}).catch(function(error){logger.error("error retrieving user identity",error)})})},$scope.remindEmployee=function(){policyReminderService.postReminder($scope.postData).then(function(result){$scope.showForm=!1,$scope.showSuccess=!0,$timeout(function(){$("#sendReminderSuccess").fadeOut("0.3s",function(){$scope.showSuccess=!1,modalObj.$close()})},2e3)}).catch(function(error){$scope.showForm=!1,$scope.showError=!0,$timeout(function(){$("#sendReminderError").fadeOut("0.3s",function(){$scope.showError=!1,modalObj.$close()})},2e3)})},$scope.cancelEmail=function(){modalObj.$close()}}]),angular.module("redbox.company.policies").filter("policyCheckAckFilter",function(){var acknowledgementOutput=function(input){for(var unacknowledged=[],acknowledged=[],everythingElse=[],i=0;i<input.length;i++)!input[i].acknowledgedIndicator&&input[i].acknowledgementRequiredIndicator?unacknowledged.push(input[i]):input[i].acknowledgedIndicator?acknowledged.push(input[i]):everythingElse.push(input[i]);return unacknowledged.sort(function(a,b){var dueDateA=a.acknowledgementDueDate?new Date(a.acknowledgementDueDate):new Date(9999,11,31),dueDateB=b.acknowledgementDueDate?new Date(b.acknowledgementDueDate):new Date(9999,11,31);return dueDateA>dueDateB?1:dueDateA<dueDateB?-1:0}),acknowledged.sort(function(a,b){var effectiveDateA="9999-12-31",effectiveDateB="9999-12-31";return a.policyStatusCode&&(effectiveDateA=a.policyStatusCode.effectiveDate?a.policyStatusCode.effectiveDate:"9999-12-31"),b.policyStatusCode&&(effectiveDateB=b.policyStatusCode.effectiveDate?b.policyStatusCode.effectiveDate:"9999-12-31"),effectiveDateA>effectiveDateB?-1:effectiveDateA<effectiveDateB?1:0}),everythingElse.sort(function(a,b){var effectiveDateA="9999-12-31",effectiveDateB="9999-12-31";return a.policyStatusCode&&(effectiveDateA=a.policyStatusCode.effectiveDate?a.policyStatusCode.effectiveDate:"9999-12-31"),b.policyStatusCode&&(effectiveDateB=b.policyStatusCode.effectiveDate?b.policyStatusCode.effectiveDate:"9999-12-31"),effectiveDateA>effectiveDateB?-1:effectiveDateA<effectiveDateB?1:0}),unacknowledged.concat(acknowledged.concat(everythingElse))};return acknowledgementOutput}),angular.module("redbox.company.policies").filter("policyStatusFilter",function(){var policy=function(input,status){if(input)switch(status){case 0:return input;case 1:if(Array.isArray(input))return input=_.filter(input,function(inputPolicy){return inputPolicy.acknowledgementRequiredIndicator&&!inputPolicy.acknowledgedIndicator});if(input.acknowledgementRequiredIndicator&&!input.acknowledgedIndicator)return input;break;case 2:if(Array.isArray(input))return input=_.filter(input,function(inputPolicy){return inputPolicy.acknowledgedIndicator});if(input.acknowledgedIndicator)return input;break;case 3:if(Array.isArray(input))return input=_.filter(input,function(inputPolicy){if(inputPolicy.acknowledgementRequiredIndicator&&!inputPolicy.acknowledgedIndicator&&inputPolicy.acknowledgementDueDate&&moment(inputPolicy.acknowledgementDueDate).isBefore(moment()))return!0});if(input.acknowledgementRequiredIndicator&&!input.acknowledgedIndicator&&input.acknowledgementDueDate&&moment(input.acknowledgementDueDate).isBefore(moment()))return!0;break;case 4:if(Array.isArray(input))return input=_.filter(input,function(inputPolicy){return!inputPolicy.acknowledgementRequiredIndicator});if(!input.acknowledgementRequiredIndicator)return input}};return policy}),angular.module("redbox.company.policies").service("redbox.company.policies.PoliciesMenuService",["$q","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory",function($q,clientService,loggerFactory){var logger=loggerFactory.getLogger("redbox.company.policies.PoliciesMenuService"),showMenu=function(){var initDeferred=$q.defer();return clientService.getClient().then(function(client){client?initDeferred.resolve(!client.showCompanyPage):initDeferred.resolve(!1)}).catch(function(error){logger.warn("Error occurred retrieving client",JSON.stringify(error)),initDeferred.reject(!1)}),initDeferred.promise};this.showMenu=showMenu}]),angular.module("redbox.framework.tasks").service("redbox.framework.tasks.PoliciesReminderService",["$http","$q","adp.ng.logging.LoggerFactory",function($http,$q,loggerFactory){var logger=loggerFactory.getLogger("redbox.framework.tasks.PoliciesReminderService"),postReminder=function(postData){var deferred=$q.defer();return $http.post("/events/core/v1/policy-acknowledgement-reminder-request.add",postData).then(function(response){logger.info("Policy acknowledgement reminder request sent successfully"),deferred.resolve(response.data)}).catch(function(error){logger.error("Error sending policy acknowledgement reminder",error),deferred.reject(error)}),deferred.promise};this.postReminder=postReminder}]),angular.module("redbox.company.policies").factory("redbox.company.policies.PolicyEmployeeService",["$http","$q","$filter","$analytics","redbox.ext.shared.services.UserIdentityService",function($http,$q,$filter,$analytics,userIdentity){var selectedPolicyIndex,selectedPolicyTime,_aoid,unacknowledgedParams={params:{acknowledgementStatus:"unacknowledged"}},selectedPolicy={},employeePolicies=[],fetchDfd=null,whoAmI=function(){var deferred=$q.defer(),promise=deferred.promise;return _aoid?deferred.resolve():userIdentity.getAoid().then(function(aoid){_aoid=aoid,deferred.resolve()}),promise},API={policyAcknowledgements:function(config,bRefetch){return(null===fetchDfd||bRefetch)&&(fetchDfd=$q.defer(),config||(config={}),config.headers={"if-none-match":"any"},$http.get("/hr/v1/workers/"+_aoid+"/policy-acknowledgements",config).then(function(results){_.has(results.data,"policyAcknowledgements")?employeePolicies=$filter("policyCheckAckFilter")(results.data.policyAcknowledgements):employeePolicies.length=0,fetchDfd.resolve()}).catch(function(error){fetchDfd.reject(error.data)})),fetchDfd.promise},isOverDue:function(policy){return!!$filter("policyStatusFilter")(policy,3)},acknowledgePolicy:function(){var uri,deferred=$q.defer(),promise=deferred.promise;try{for(var actionsArr=selectedPolicy.actions,i=0;i<actionsArr.length;i++)for(var linksArr=actionsArr[i].links,k=0;k<linksArr.length;k++){var lw=linksArr[i].title.toLowerCase();"acknowledge"===lw&&(uri=linksArr[i].href)}}catch(err){}return $http.post(uri).then(function(results){employeePolicies[selectedPolicyIndex].acknowledgedIndicator=!0,employeePolicies[selectedPolicyIndex].acknowledgedDate=new Date;var now=new Date,seconds=(now.getTime()-selectedPolicyTime.getTime())/1e3,label="Time before acknowledging Policy: "+seconds+" seconds";$analytics.eventTrack("Acknowledgement",{category:"Policies",label:label}),deferred.resolve()}).catch(function(error){deferred.reject(error.data)}),promise}};return{fetchPolicies:function(config){var params,bRefetch=config&&config.refetch;config&&config.unacknowledged&&(params=unacknowledgedParams);var fetchPromise=whoAmI().then(function(){return API.policyAcknowledgements(params,bRefetch)});return fetchPromise},getEmployeePolicies:function(){return employeePolicies},getEmployeeUnackPolicyCount:function(){var employeeUnackPolicies=$filter("policyStatusFilter")(angular.copy(employeePolicies),1);return employeeUnackPolicies?employeeUnackPolicies.length:0},getEmployeeOverduePolicyDueDateList:function(){var employeeUnackPolicies=$filter("policyStatusFilter")(angular.copy(employeePolicies),3),dates=_.pluck(employeeUnackPolicies,"acknowledgementDueDate").map(function(dateISOstr){return new Date(dateISOstr)});return dates},acknowledgePolicy:function(){return API.acknowledgePolicy()},setSelectedPolicy:function(policyId,policyAcknowledgementDueDate,hasViewedPolicy){for(var i=0;i<employeePolicies.length;i++)if((employeePolicies[i].policyID.idValue===policyId||employeePolicies[i].policyID.id===policyId)&&employeePolicies[i].acknowledgementDueDate===policyAcknowledgementDueDate){selectedPolicyIndex=i;break}selectedPolicy=employeePolicies[selectedPolicyIndex],selectedPolicyTime=new Date,selectedPolicy.hasViewed=hasViewedPolicy},getSelectedPolicy:function(){return selectedPolicy},setStatusIcon:function(policies){return angular.forEach(policies,function(policy){policy.acknowledgementRequiredIndicator&&!policy.acknowledgedIndicator?API.isOverDue(policy)?API.isOverDue(policy)&&(policy.cardStatus="warning"):policy.cardStatus="info":policy.acknowledgedIndicator&&(policy.cardStatus="success"),"application/docx"===policy.links[0].mediaType?policy.icon="file-word-o":"application/pdf"===policy.links[0].mediaType?policy.icon="file-pdf-o":policy.icon="file-text-o"}),policies}}}]),angular.module("redbox.company.policies").factory("redbox.company.policies.PolicyManagerService",["$http","$q","$filter","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant",function($http,$q,$filter,userPermission,SFFO){function collatePolicyAcknowledgements(policies){var isOverDue,isNeedsAck,isAcknowledged;associates.length=0;for(var i=0;i<policies.length;i++)if(policies[i].associateID){if(isOverDue=!1,isNeedsAck=!1,isAcknowledged=!1,$filter("policyStatusFilter")(policies[i],3))isOverDue=!0;else if($filter("policyStatusFilter")(policies[i],1))isNeedsAck=!0;else{if(!$filter("policyStatusFilter")(policies[i],2))continue;isAcknowledged=!0}for(var aoid=policies[i].associateID.idValue?policies[i].associateID.idValue:policies[i].associateID.id,foundAssociate=!1,j=0;j<associates.length;j++)if(associates[j].aoid===aoid){foundAssociate=!0,isOverDue?(associates[j].unacknowledged.push(policies[i]),associates[j].totalOverDue++):isNeedsAck?associates[j].unacknowledged.push(policies[i]):isAcknowledged&&associates[j].acknowledged.push(policies[i]);break}foundAssociate||associates.push({aoid:aoid,name:policies[i].formattedName.nameValue,unacknowledged:isOverDue||isNeedsAck?[policies[i]]:[],acknowledged:isAcknowledged?[policies[i]]:[],totalOverDue:isOverDue?1:0})}}var unacknowledgedParams={params:{acknowledgementStatus:"unacknowledged"}},associateParams={params:{associateID:""}},associates=[],showTeam=!1,slideInBackBtn="",API={policyAcknowledgements:function(params,statusFilter){var deferred=$q.defer(),promise=deferred.promise;return $http.get("/hr/v1/workers/policy-acknowledgements",params).then(function(results){results.data.policyAcknowledgements?statusFilter?deferred.resolve($filter("policyStatusFilter")(results.data.policyAcknowledgements,statusFilter)):deferred.resolve(results.data.policyAcknowledgements):deferred.resolve([])}).catch(function(error){deferred.reject(error.data)}),promise}};return{getAssociates:function(){return associates},getPoliciesForAssociate:function(aoid){return associateParams.params.associateID=aoid,API.policyAcknowledgements(associateParams)},getPoliciesForAllAssociates:function(){var defer=$q.defer();return API.policyAcknowledgements().then(function(policies){collatePolicyAcknowledgements(policies),defer.resolve()}).catch(function(error){defer.resolve()}),defer.promise},getOverduePoliciesForAllAssociates:function(){var defer=$q.defer();return API.policyAcknowledgements(unacknowledgedParams,3).then(function(overDue){collatePolicyAcknowledgements(overDue),defer.resolve()}).catch(function(error){defer.resolve()}),defer.promise},isManager:function(){var defer=$q.defer(),policyAcknowledgementManagement={role:"manager",sffo:SFFO.workerInformationManagement.policyManagement.policyAcknowledgementManagement.sffo};return userPermission.init().then(function(){userPermission.hasPermission(policyAcknowledgementManagement)&&defer.resolve(!0),defer.resolve(!1)}),defer.promise},reminderPermissions:function(){var defer=$q.defer(),policyAcknowledgementManagement={role:"manager",sffo:SFFO.workerInformationManagement.policyManagement.notificationRequestManagement.policyAcknowledgementReminderRequest_add.sffo};return userPermission.init().then(function(){userPermission.hasPermission(policyAcknowledgementManagement)?defer.resolve(!0):defer.resolve(!1)}).catch(function(error){defer.reject(error)}),defer.promise},getShowTeam:function(){return showTeam},setShowTeam:function(state){showTeam=state},getSlideInBackBtn:function(){return slideInBackBtn},setSlideInBackBtn:function(label){slideInBackBtn=label}}}]),angular.module("redbox.company.rssFeed").controller("redbox.company.rssFeed.RssCtrl",["$scope","$window","redbox.company.rssFeed.RssService","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory",function($scope,$window,rssService,clientService,loggerFactory){var logger=loggerFactory.getLogger("redbox.company.rssFeed.RssCtrl");$scope.init=function(){$scope.loadFeed=function(){clientService.getClient().then(function(client){client.rssUrl&&rssService.parseFeed(client.rssUrl).then(function(response){response.responseData&&response.responseData.feed&&($scope.rssURL=response.responseData.feed.link,$scope.feeds=response.responseData.feed.entries,$scope.feeds&&($scope.$emit("showMe"),$scope.feeds.length>3&&($scope.showMoreButton=!0)),response.responseData.feed.title&&$scope.$emit("updateTitle",{title:response.responseData.feed.title}))}).catch(function(error){logger.error("Error getting RSS feed",error)})}).catch(function(error){logger.error("Error getting client data",error)})}},$scope.showMoreNews=function(){$window.open($scope.rssURL,"RSS")},$scope.openFeed=function(feedLink){$window.open(feedLink,"RSS")},$scope.init()}]),angular.module("redbox.company.rssFeed").service("redbox.company.rssFeed.RssService",["$http","$q","adp.ng.logging.LoggerFactory",function($http,$q,loggerFactory){var logger=loggerFactory.getLogger("redbox.company.rssFeed.RssService");return{parseFeed:function(url){var deferred=$q.defer();return $http.jsonp("https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&callback=JSON_CALLBACK&q="+encodeURIComponent(url)).then(function(response){deferred.resolve(response.data)}).catch(function(error){deferred.resolve(!1),logger.error("Error occurred retrieving RSS feed",JSON.stringify(error.data))}),deferred.promise}}}]),function(){angular.module("redbox.connections").controller("redbox.connections.DashboardCtrl",["$language","$q","$scope","$state","redbox.onboarding.common.OnboardingService","redbox.connections.search.EmployeeSearchService","redbox.ext.shared.services.UserIdentityService","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant",function($language,$q,$scope,$state,OnboardingService,EmployeeSearchService,UserIdentityService,UserPermissionService,SFFO){function goToFirstShownState(){if("connections"===$state.$current.name){var firstShown=_.find([{show:self.showYourTeam,state:"connections.yourteam"},{show:self.showTeamTimecards,state:"connections.teamtimecards"},{show:self.showDirectory,state:"connections.directory"},{show:self.hasOrgChart,state:"connections.orgchart"},{show:self.showNewhires,state:"connections.newhires"},{show:self.showTeamSchedule,state:"connections.teamschedule"}],function(tab){return tab.show});$state.go(firstShown.state,null,{location:"replace"})}}var self=this;self.strings={companyDirectory:$language.get("connections.DIRECTORY_COMPANY_DIRECTORY"),orgChart:$language.get("connections.ORGCHART_ORGCHART")},UserPermissionService.init().then(function(){self.hasOrgChart=UserPermissionService.hasPermission(SFFO.enterpriseInformationManagement.flexGraphManagement.hierarchyViewing),self.showYourTeam=UserPermissionService.hasPermission(SFFO.userManagement.userLogin.userAuthorization.object_entitle)}),$q.all({userPermissionService:UserPermissionService.init(),hasOnboardingPremium:OnboardingService.hasOnboardingPremium(),team:UserIdentityService.getAoid().then(function(aoid){return EmployeeSearchService.getTeamForManager(aoid,1)})}).then(function(results){self.showTeamTimecards=UserPermissionService.hasPermission({role:"manager",sffo:SFFO.timeLaborManagement.timeEntryManagement.timeSheetManagement.sffo}),self.showDirectory=UserPermissionService.hasPermissionsOne([SFFO.organizationInformationManagement.corporateDirectoryManagement.corporateDirectoryManagement,SFFO.organizationInformationManagement.orgRelationshipManagement.orgHierarchyManagement.orgHierarchy_read]),self.showNewhires=results.team.employees&&results.team.employees.length&&UserPermissionService.hasPermission(SFFO.organizationInformationManagement.corporateDirectoryManagement.corporateDirectoryManagement)&&results.hasOnboardingPremium,self.showTeamSchedule=UserPermissionService.hasPermission({role:"manager",sffo:SFFO.timeLaborManagement.scheduleManagement.workScheduleManagement.sffo})}).catch(function(){self.showNewhires=!1}).finally(function(){goToFirstShownState(),$scope.$on("$stateChangeSuccess",function(){goToFirstShownState()})})}])}(),function(){function AddressSuggestionComponent($scope){}angular.module("redbox.connections.addressvalidation").component("conAddressSuggestion",{bindings:{validationObject:"<",onApply:"&",onCancel:"&"},templateUrl:"app/connections/modules/address-validation/address-suggestion/address-suggestion-component.html",controller:AddressSuggestionComponent})}(),angular.module("redbox.connections.addressvalidation").constant("redbox.connections.addressvalidation.CONSTANTS",{VALID:"valid",INCOMPLETE:"incomplete",INVALID:"invalid"}),function(){function USPSValidationService($q,$http,ADDRESS_CONSTANTS){function buildQueryObject(addressQuery){return{lineOne:addressQuery.lineOne,lineTwo:addressQuery.lineTwo,city:addressQuery.city,state:addressQuery.state,postalCode:addressQuery.postalCode}}function parseResponse(addressQuery,validationObject){return validationObject.validationResult===ADDRESS_CONSTANTS.VALID&&(validationObject.suggestedAddress.postalCode=validationObject.suggestedAddress.postalCode+"-"+validationObject.suggestedAddress.postalCodeSuffix,delete validationObject.suggestedAddress.postalCodeSuffix,validationObject.hasCorrections=hasCorrections(addressQuery,validationObject.suggestedAddress),validationObject.suggestedAddress.lineOne=capitalize(validationObject.suggestedAddress.lineOne),validationObject.suggestedAddress.lineTwo=capitalize(validationObject.suggestedAddress.lineTwo),validationObject.suggestedAddress.city=capitalize(validationObject.suggestedAddress.city)),validationObject}function hasCorrections(query,suggestion){var hasCorrectedFields=!1;return _.forEach(suggestion,function(value,key){hasCorrectedFields=hasCorrectedFields||!query[key]||suggestion[key]&&suggestion[key].toLowerCase()!==query[key].toLowerCase()}),hasCorrectedFields}function capitalize(str){return str?str.replace(/\w\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}):""}var URL="/redboxapi/core/v1/addressvalidation/validate";this.performQuery=function(addressQuery){var deferred=$q.defer(),queryObj=buildQueryObject(addressQuery);return $http.get(URL,{params:queryObj}).then(function(response){deferred.resolve(parseResponse(addressQuery,response.data))}).catch(function(err){deferred.reject(err)}),deferred.promise}}angular.module("redbox.connections.addressvalidation").service("redbox.connections.addressvalidation.USPSValidationService",USPSValidationService),USPSValidationService.$inject=["$q","$http","redbox.connections.addressvalidation.CONSTANTS"]}(),angular.module("redbox.connections.contacts").constant("CONTACTS_CONSTANTS",{RECALL_EVENT_URL:"/wf/recall/events/hr/v1/worker.personal-contact.",ADD_NEW_CONTACT_URI:"/wf/events/hr/v1/worker.personal-contact.add",CHANGE_CONTACT_URI:"/wf/events/hr/v1/worker.personal-contact.change",REMOVE_CONTACT_URI:"/wf/events/hr/v1/worker.personal-contact.remove",WORKFLOW_SUCCESS_STATUS_CODE:1e3,WORKFLOW_REQUIRED_STATUS_CODE:1001,WORKFLOW_PENDING_STATUS_CODE:1002}),angular.module("redbox.connections.contacts").directive("adpContactsCardDeck",["$rootScope",function($rootScope){return{scope:{worker:"&"},restrict:"E",controller:"redbox.connections.contacts.directives.ContactsCardDeckCtrl",controllerAs:"contactsCardDeckCtrl",bindToController:!0,templateUrl:"app/connections/modules/contacts/views/contacts-card-deck-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.contacts.directives.ContactsCardDeckCtrl",["$scope","$injector",function($scope,$injector){var currentCard,userIdentity=$injector.get("redbox.ext.shared.services.UserIdentityService"),codeListsService=$injector.get("adp.ng.meta.CodeListsService"),contactsService=$injector.get("redbox.connections.contacts.ContactsService"),CONTACTS_CONSTANTS=$injector.get("CONTACTS_CONSTANTS"),contactsPermissionService=$injector.get("redbox.connections.contacts.ContactsPermissionService"),$filter=$injector.get("$filter"),$q=$injector.get("$q"),vm=this;
vm.emergencyContact={},userIdentity.getAoid().then(function(aoid){vm.aoid=aoid}),vm.config={loading:!0,duplicateName:!1,fromRedbox:!0,mode:"",error:!1,view:2},vm.deckDisable=function(card){card.scope.$disableCards()},vm.deckReset=function(card){card.scope.$resetCards([]),card.scope.$enableCards([])},vm.isDuplicateItemID=function(){var tempItemID,flag=!1;if("add"===vm.config.mode){tempItemID=vm.contactModel.lastName+","+vm.contactModel.firstName;for(var i=0;i<vm.contacts.length;i++)if(vm.contacts[i].itemID.toLowerCase()===tempItemID.toLowerCase()){flag=!0;break}vm.config.duplicateName=flag}return flag},vm.setContactModel=function(contact){var tmp={firstName:"",lastName:"",relation:{codeValue:""},phone:{home:{number:"",countryDialing:""},work:{number:"",countryDialing:""}},address:{sameAsAddressIndicator:!1,lineOne:"",lineTwo:"",cityName:"",state:{codeValue:""},postalCode:"",country:{codeValue:""}},primary:0===vm.contacts.length};contact?(tmp.itemID=angular.copy(contact.itemID),tmp.firstName=angular.copy(contact.personName.firstName),tmp.lastName=angular.copy(contact.personName.lastName),contact.address&&(tmp.address.sameAsAddressIndicator=angular.copy(contact.address.sameAsAddressIndicator),tmp.address.lineOne=angular.copy(contact.address.lineOne),tmp.address.lineTwo=angular.copy(contact.address.lineTwo),tmp.address.cityName=angular.copy(contact.address.cityName),tmp.address.postalCode=angular.copy(contact.address.postalCode),contact.address.countrySubdivisionLevel1&&(tmp.address.state.codeValue=angular.copy(contact.address.countrySubdivisionLevel1.codeValue)),contact.address.countryCode&&(tmp.address.country.codeValue=contact.address.countryCode)),_.forEach(_.get(contact,"communication.landlines"),function(landline){!landline.nameCode.codeValue||"Home Phone"!==landline.nameCode.codeValue&&"PRIM"!==landline.nameCode.codeValue?!landline.nameCode.codeValue||"Work Phone"!==landline.nameCode.codeValue&&"ALT"!==landline.nameCode.codeValue||(tmp.phone.work.formattedNumber=angular.copy(landline.formattedNumber),tmp.phone.work.countryDialing=angular.copy(landline.countryDialing),tmp.phone.work.countryDialing&&tmp.phone.work.countryDialing.indexOf("+")===-1&&(tmp.phone.work.countryDialing="+"+tmp.phone.work.countryDialing)):(tmp.phone.home.formattedNumber=angular.copy(landline.formattedNumber),tmp.phone.home.countryDialing=angular.copy(landline.countryDialing),tmp.phone.home.countryDialing&&tmp.phone.home.countryDialing.indexOf("+")===-1&&(tmp.phone.home.countryDialing="+"+tmp.phone.home.countryDialing))}),tmp.relation.codeValue=contact.relationshipTypeCode.codeValue,"Y"===_.get(contact,"precedenceCode.codeValue")||"PRIM"===_.get(contact,"precedenceCode.codeValue")?tmp.primary=!0:tmp.primary=!1):tmp.address.country.codeValue="US",vm.contactModel=tmp},vm.clickSameAsMyAddress=function(){vm.contactModel.address.sameAsAddressIndicator&&vm.worker()&&vm.worker().person&&vm.worker().person.legalAddress&&(vm.contactModel.address.lineOne=getPendingValue(angular.copy(vm.worker().person.legalAddress.lineOne)),vm.contactModel.address.lineTwo=getPendingValue(angular.copy(vm.worker().person.legalAddress.lineTwo)),vm.contactModel.address.cityName=getPendingValue(angular.copy(vm.worker().person.legalAddress.cityName)),vm.contactModel.address.postalCode=getPendingValue(angular.copy(vm.worker().person.legalAddress.postalCode)),vm.contactModel.address.country.codeValue=getPendingValue(angular.copy(vm.worker().person.legalAddress.countryCode)),vm.worker().person.legalAddress.countrySubdivisionLevel1?(vm.contactModel.address.state.codeValue=getPendingValue(angular.copy(vm.worker().person.legalAddress.countrySubdivisionLevel1.codeValue)),vm.contactModel.address.state.shortName=getPendingValue(angular.copy(vm.worker().person.legalAddress.countrySubdivisionLevel1.longName))):(vm.contactModel.address.state.codeValue="",vm.contactModel.address.state.shortName=""),vm.contactModel.address.addressLine=getAddressLine(vm.contactModel));try{vm.contactModel.phone.home.formattedNumber=getPendingValue(vm.worker().person.communication.landlines[0].formattedNumber),vm.contactModel.phone.home.countryDialing=getPendingValue(vm.worker().person.communication.landlines[0].countryDialing)}catch(e){vm.contactModel.phone.home.formattedNumber="",vm.contactModel.phone.home.countryDialing=""}},vm.addContact=function(addCard){vm.config.error=!1,addCard.$disableCards(),vm.setContactModel(),vm.config.mode="add",addCard.$gotoState("page1")},vm.editContact=function(card,contact){vm.config.error=!1,vm.deckDisable(card),vm.setContactModel(contact),vm.config.mode="edit",vm.currentContact=angular.copy(vm.contactModel)},vm.cancelEditContact=function(card){vm.config.duplicateName=!1,vm.deckReset(card)},vm.contactChanged=function(){return!_.isEqual(vm.currentContact,vm.contactModel)},vm.saveContact=function(card){var deferred=$q.defer();return vm.config.error=!1,loadingIndicator(!0),vm.contactModel.itemID?contactsService.changeContact(vm.contactModel,vm.worker().associateOID).then(function(){getContacts().finally(function(){vm.deckReset(card),emitContactUpdate(),loadingIndicator(!1),deferred.resolve()})},function(){vm.config.error=!0,vm.deckReset(card),loadingIndicator(!1)}):(vm.contactModel.formattedName=vm.contactModel.lastName+","+vm.contactModel.firstName,contactsService.addContact(vm.contactModel,vm.worker().associateOID).then(function(){getContacts().finally(function(){vm.deckReset(card),emitContactUpdate(),loadingIndicator(!1),deferred.resolve()})},function(){vm.config.error=!0,vm.deckReset(card),loadingIndicator(!1)})),deferred.promise},vm.removeContact=function(card,contact){vm.emergencyContact=contact,currentCard=card,currentCard.scope.$gotoState("remove-form"),vm.deckDisable(currentCard)},vm.cancelDelete=function(){currentCard&&vm.deckReset(currentCard)},vm.confirmDelete=function(){var deferred=$q.defer();return vm.config.error=!1,vm.emergencyContact.status="default",loadingIndicator(!0),contactsService.removeContact(vm.emergencyContact,vm.worker().associateOID).then(function(results){if(results.wfStatusCode===CONTACTS_CONSTANTS.WORKFLOW_REQUIRED_STATUS_CODE)getContacts().finally(function(){emitContactUpdate(),loadingIndicator(!1),deferred.reject()});else{for(var i=vm.contacts.length-1;i>=0;i--)vm.contacts[i].itemID===vm.emergencyContact.itemID&&vm.contacts.splice(i,1);vm.cancelDelete(),emitContactUpdate(),loadingIndicator(!1),deferred.resolve()}},function(error){vm.config.error=!0,vm.emergencyContact.status="error",vm.cancelDelete(),loadingIndicator(!1),deferred.reject(error)}),deferred.promise},vm.cancelRequest=function(){loadingIndicator(!0),vm.config.error=!1,contactsService.recallEvent(vm.config.pendingAction,vm.worker().associateOID).then(function(){getContacts().then(function(){emitContactUpdate(),loadingIndicator(!1)},function(){vm.config.error=!0,loadingIndicator(!1)})},function(){vm.config.error=!0,loadingIndicator(!1)})};var loadingIndicator=function(show){if(vm.contactsSlideIn)vm.contactsSlideIn.loadingIndicator(show);else for(var i=0,obj=$scope.$parent;i<4;){if(obj.hasOwnProperty("loading")){obj.loading=show;break}obj.$parent&&(obj=obj.$parent),i++}},getAddressLine=function(contact){var addressArray=[];return contact.address?(contact.address.cityName&&""!==contact.address.cityName&&addressArray.push(contact.address.cityName),contact.address.countrySubdivisionLevel1&&contact.address.countrySubdivisionLevel1.codeValue&&""!==contact.address.countrySubdivisionLevel1.codeValue?(contact.address.cityName&&""!==contact.address.cityName&&(addressArray[0]=addressArray[0]+","),addressArray.push(contact.address.countrySubdivisionLevel1.codeValue)):contact.address.state&&contact.address.state.codeValue&&""!==contact.address.state.codeValue&&(contact.address.cityName&&""!==contact.address.cityName&&(addressArray[0]=addressArray[0]+","),addressArray.push(contact.address.state.codeValue)),contact.address.postalCode&&""!==contact.address.postalCode&&addressArray.push(contact.address.postalCode),0===addressArray.length?"":addressArray.join(" ")):""},getContacts=function(){var defer=$q.defer();return loadingIndicator(!0),contactsService.getContacts(vm.worker().associateOID).then(function(results){angular.forEach(results.contacts,function(contact){contact.address.addressLine=getAddressLine(contact),contact.pending&&contact.pending.data&&contact.pending.data.address&&(contact.pending.data.address.addressLine=getAddressLine(contact.pending.data),contact.pending.data.relationshipTypeCode&&contact.pending.data.relationshipTypeCode.codeValue&&!contact.pending.data.relationshipTypeCode.shortName&&codeListsService.getCodeListItem("/codelists/hr/v3/worker-management/relationshipvalues",contact.pending.data.relationshipTypeCode.codeValue).then(function(relationshipTypeCode){relationshipTypeCode&&(contact.pending.data.relationshipTypeCode=relationshipTypeCode)}))}),vm.contacts=$filter("orderBy")(results.contacts,"precedenceCode.codeValue",!0),vm.config.fromRedbox=results.fromRedbox,vm.config.pendingAction=results.pendingAction,defer.resolve()},function(error){defer.reject(error)}).finally(function(){loadingIndicator(!1)}),defer.promise},emitContactUpdate=function(){$scope.$emit("contacts-card-deck-contact-update",{contacts:vm.contacts,pendingAction:vm.config.pendingAction,fromRedbox:vm.config.fromRedbox})},getPendingValue=function(modelValue){var pendingValue;if(modelValue)switch(modelValue.pending){case"add":case"change":pendingValue=modelValue.value;break;case"remove":break;default:pendingValue=modelValue}return pendingValue};vm.worker()?contactsPermissionService.getPermissions(vm.worker().associateOID).then(function(permissions){_.get(permissions,"personalContact.read")&&(vm.permissions=permissions,getContacts())}):userIdentity.getAoid().then(function(aoid){aoid&&(vm.worker=function(){return{associateOID:aoid}},contactsPermissionService.getPermissions(aoid).then(function(permissions){vm.permissions=permissions,getContacts()}))})}]),angular.module("redbox.connections.contacts").directive("adpContactsTile",["$rootScope",function($rootScope){return{scope:{worker:"&"},restrict:"E",controller:"redbox.connections.contacts.directives.ContactsTileCtrl",controllerAs:"contactsTileCtrl",bindToController:!0,templateUrl:"app/connections/modules/contacts/views/contacts-tile-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.contacts.directives.ContactsTileCtrl",["$scope","$injector",function($scope,$injector){var contactsService=$injector.get("redbox.connections.contacts.ContactsService"),contactsPermissionService=$injector.get("redbox.connections.contacts.ContactsPermissionService"),focusSlideIn=$injector.get("adp.ng.ui.slidein.FocusSlideIn"),$language=$injector.get("$language"),vm=this;vm.openSlideIn=function(){focusSlideIn({scope:$scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/contacts/views/contacts-card-deck.html"})},$scope.$on("contacts-card-deck-contact-update",function(event,msg){if(vm.contacts=msg.contacts,vm.found=!1,vm.primaryContact){for(var i=0;i<msg.contacts.length;i++)if(msg.contacts[i].itemID===vm.primaryContact.itemID){vm.primaryContact=msg.contacts[i],vm.found=!0;break}}else vm.primaryContact=msg.contacts[0],vm.pendingAction=msg.pendingAction,vm.fromRedbox=msg.fromRedbox,vm.found=!0;vm.found===!1&&getPrimary(),vm.pendingAction=msg.pendingAction,vm.fromRedbox=msg.fromRedbox});var getPrimary=function(){return contactsService.getPrimary(vm.worker().associateOID).then(function(results){vm.contacts=results.contacts,results.pendingContact&&results.primaryContacts.length<1?vm.primaryContact=results.contacts[0]:results.primaryContacts&&results.primaryContacts.length>0&&(vm.primaryContact=results.primaryContacts[0]),vm.pendingAction=results.pendingAction,vm.fromRedbox=results.fromRedbox})};contactsPermissionService.getPermissions(vm.worker().associateOID).then(function(permissions){_.get(permissions,"personalContact.read")&&(vm.permissions=permissions,getPrimary().finally(function(){$scope.$emit("showMe")}))})}]),angular.module("redbox.connections.contacts").factory("redbox.connections.contacts.ContactsPermissionService",["$injector",function($injector){var $q=$injector.get("$q"),UserPermissionService=$injector.get("redbox.ext.shared.services.UserPermissionService"),SFFO=$injector.get("redbox.ext.shared.constants.SFFOConstant"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=loggerFactory.getLogger("redbox.connections.contacts.ContactsPermissionService"),API={getPermissions:function(aoid){var permissions,deferred=$q.defer();try{UserPermissionService.init().then(function(){permissions={personalContact:{read:!1,add:!1,change:!1,remove:!1}},permissions.personalContact.read=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.personalContactManagement.personalContact_read,aoid),permissions.personalContact.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_add,aoid),permissions.personalContact.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_change,aoid),permissions.personalContact.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_remove,aoid),deferred.resolve(permissions)})}catch(e){logger.error("workerProfilePermissions: exception caught",e),deferred.reject(e)}return deferred.promise}};return API}]),angular.module("redbox.connections.contacts").service("redbox.connections.contacts.ContactsService",["$injector",function($injector){function contactModel(){var model={personName:{formattedName:""},address:{lineOne:"",lineTwo:"",cityName:"",countrySubdivisionLevel1:{codeValue:""},countryCode:"",postalCode:""},communication:{landlines:[{nameCode:{codeValue:""},formattedNumber:""},{nameCode:{codeValue:""},formattedNumber:""}]},relationshipTypeCode:{codeValue:""},precedenceCode:{codeValue:""}};return model}function enrichContact(contact,pending){var pendingContactItemID,formattedName=contact.personName.formattedName,tmp=formattedName.split(",");if(contact.personName={formattedName:formattedName,firstName:tmp[1],lastName:tmp[0]},contact.itemID&&0!==contact.itemID.length||(contact.itemID=formattedName),pending)try{try{pendingContactItemID=pending.pendingData.body.events[0].data.transform.personalContact.itemID?pending.pendingData.body.events[0].data.transform.personalContact.itemID:pending.pendingData.body.events[0].data.eventContext.personalContact.itemID}catch(e){pendingContactItemID=pending.pendingData.body.events[0].data.eventContext.personalContact.itemID}if(contact.itemID===pendingContactItemID){if(contact.pending={},contact.comments=[],pending.pendingEvents&&pending.pendingEvents[0]&&pending.pendingEvents[0].history)for(var i=0;i<pending.pendingEvents[0].history.length;i++)"string"==typeof pending.pendingEvents[0].history[i].comments&&contact.comments.push(pending.pendingEvents[0].history[i]);pending.pendingEvents&&pending.pendingEvents[0]&&pending.pendingEvents[0].submitter?contact.pending.submitterOID=pending.pendingEvents[0].submitter.userOID:contact.pending.submitterOID=selfAoid,contact.pending.action=pending.pendingData.resourcePath.split(".")[2],"change"===contact.pending.action&&(contact.pending.data=pending.pendingData.body.events[0].data.transform.personalContact),contact.status="pending",contact.disabled=!1}else contact.status="default",contact.disabled=!0}catch(e){}else contact.pending=null,contact.status="default";return contact}function getApplicationId(){applicationId=userPermissionService.getApplicationId("MobileESSWorkerProfile")}function mapPersonalContact(contact){var model,defer=$q.defer();return $q.when(applicationId||getApplicationId()).then(function(){model=contactModel(),model.personName.formattedName=contact.formattedName?contact.formattedName:contact.itemID,model.address.sameAsAddressIndicator=contact.address.sameAsAddressIndicator,model.address.lineOne=contact.address.lineOne,model.address.lineTwo=contact.address.lineTwo,model.address.cityName=contact.address.cityName,model.address.countrySubdivisionLevel1.codeValue=contact.address.state.codeValue,model.address.countrySubdivisionLevel1.shortName=contact.address.state.shortName,model.address.countryCode=contact.address.country.codeValue,model.address.postalCode=contact.address.postalCode,model.communication.landlines[0].formattedNumber=contact.phone.home.formattedNumber,model.communication.landlines[0].countryDialing=contact.phone.home.countryDialing,model.communication.landlines[1].formattedNumber=contact.phone.work.formattedNumber,model.communication.landlines[1].countryDialing=contact.phone.work.countryDialing,model.relationshipTypeCode.codeValue=contact.relation.codeValue,model.relationshipTypeCode.shortName=contact.relation.shortName,"Vantage"===applicationId?(model.precedenceCode.codeValue=contact.primary===!0?"PRIM":"",model.communication.landlines[0].nameCode.codeValue="PRIM",model.communication.landlines[1].nameCode.codeValue="ALT"):(model.precedenceCode.codeValue=contact.primary===!0?"Y":"N",model.communication.landlines[0].nameCode.codeValue="Home Phone",model.communication.landlines[1].nameCode.codeValue="Work Phone",model.address.countrySubdivisionLevel1.subdivisionType="State"),defer.resolve(model)},function(error){defer.reject(error)}),defer.promise}var applicationId,selfAoid,$http=$injector.get("$http"),$q=$injector.get("$q"),userPermissionService=$injector.get("redbox.ext.shared.services.UserPermissionService"),userIdentity=$injector.get("redbox.ext.shared.services.UserIdentityService"),CONTACTS_CONSTANTS=$injector.get("CONTACTS_CONSTANTS"),SERVICE_URL="/wf/hr/v2/associates/{associateoid}/personal-contacts",self=this;userIdentity.getAoid().then(function(aoid){selfAoid=aoid}),this.getContactsList=function(aoid){var deferred=$q.defer(),url=SERVICE_URL.replace("{associateoid}",aoid),config={headers:{"if-none-match":"any","loading-indicator":!1},aoid:aoid};return $http.get(url,config).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),deferred.promise},this.getPrimary=function(aoid){var pending,personalContacts,deferred=$q.defer(),promise=deferred.promise,detailPromise=[],result={fromRedbox:!0,contacts:[],primaryContacts:[],pendingContact:[]};return aoid?self.getContactsList(aoid).then(function(results){if(results.wfStatusCode&&results.wfStatusCode===CONTACTS_CONSTANTS.WORKFLOW_PENDING_STATUS_CODE)if(results.hasOwnProperty("error")&&!results.hasOwnProperty("pendingData"))result.fromRedbox=!1;else{pending={pendingData:results.pendingData,pendingEvents:results.pendingEvents},result.pendingAction=pending.pendingData.resourcePath.split(".")[2];try{"add"===result.pendingAction&&(result.contacts.length<1?result.contacts.push(enrichContact(pending.pendingData.body.events[0].data.transform.personalContact,pending)):"PRIM"===result.contacts[0].precedenceCode.codeValue&&result.contacts.push(enrichContact(pending.pendingData.body.events[0].data.transform.personalContact,pending)))}catch(e){}}if(results.currentData&&results.currentData.personalContacts?personalContacts=results.currentData.personalContacts:results.personalContacts?personalContacts=results.personalContacts:results.pendingData&&(personalContacts=results.pendingData.body.events[0].data.transform.personalContact),personalContacts){personalContacts.pending&&result.pendingContact.push(personalContacts);for(var i=0;i<personalContacts.length;i++)personalContacts[i].contactTypeCode&&"EMRG"!==personalContacts[i].contactTypeCode.codeValue||personalContacts[i].precedenceCode&&"PRIM"!==personalContacts[i].precedenceCode.codeValue||detailPromise.push(self.getContactDetail(personalContacts[i].links[0].href,aoid));detailPromise.length?$q.all(detailPromise).then(function(details){details.forEach(function(detail){result.contacts.push(enrichContact(detail.personalContacts[0],pending))});for(var j=0;j<result.contacts.length;j++)result.contacts[j].precedenceCode&&"PRIM"===result.contacts[j].precedenceCode.codeValue&&result.primaryContacts.push(result.contacts.slice(result.contacts.indexOf(result.contacts[j]),result.contacts.indexOf(result.contacts[j])+1)),result.contacts[j].precedenceCode&&"Y"===result.contacts[j].precedenceCode.codeValue&&result.primaryContacts.push(result.contacts.slice(result.contacts.indexOf(result.contacts[j]),result.contacts.indexOf(result.contacts[j])+1));result.primaryContacts.length>0&&(result.primaryContacts=result.primaryContacts[0]),result.primaryContacts.length<1&&result.primaryContacts.push(result.contacts[0]),deferred.resolve(result)},function(error){deferred.reject(error)}):deferred.resolve(result)}else deferred.resolve([])},function(error){deferred.reject(error)}):deferred.reject("missing aoid"),promise},this.getContacts=function(aoid,options){var pending,deferred=$q.defer(),promise=deferred.promise,result={fromRedbox:!0,contacts:[]},detailPromises=[],lazyLoadDetails=options&&options.lazyLoadDetails;return aoid?self.getContactsList(aoid).then(function(results){if(results.wfStatusCode&&results.wfStatusCode===CONTACTS_CONSTANTS.WORKFLOW_PENDING_STATUS_CODE)if(results.hasOwnProperty("error")&&!results.hasOwnProperty("pendingData"))result.fromRedbox=!1;else{pending={pendingData:results.pendingData,pendingEvents:results.pendingEvents},result.pendingAction=pending.pendingData.resourcePath.split(".")[2];try{"add"===result.pendingAction&&result.contacts.push(enrichContact(pending.pendingData.body.events[0].data.transform.personalContact,pending))}catch(e){}}lazyLoadDetails&&results.currentData&&results.currentData.personalContacts?deferred.resolve(results.currentData):results.currentData&&results.currentData.personalContacts?(angular.forEach(results.currentData.personalContacts,function(contact){detailPromises.push(self.getContactDetail(contact.links[0].href,aoid))}),detailPromises.length>0?$q.all(detailPromises).then(function(details){angular.forEach(details,function(detail){result.contacts.push(enrichContact(detail.personalContacts[0],pending))}),deferred.resolve(result)}):deferred.resolve(result)):deferred.resolve(result)},function(error){deferred.reject(error)}):deferred.reject("aoid is undefined"),promise},this.getContactDetail=function(url,aoid){var deferred=$q.defer(),promise=deferred.promise,config={headers:{"if-none-match":"any","loading-indicator":!1},aoid:aoid};return $http.get(url,config).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),promise},this.addContact=function(contact,aoid){var payload,deferred=$q.defer(),promise=deferred.promise,addContactRequest={method:"POST",url:CONTACTS_CONSTANTS.ADD_NEW_CONTACT_URI,config:{aoid:aoid}};return mapPersonalContact(contact).then(function(mappedContact){contact=mappedContact,payload={events:[{data:{transform:{personalContact:contact},eventContext:{worker:{associateOID:aoid}}}}]},addContactRequest.data=payload,$http(addContactRequest).then(function(results){results=_.get(results,"data",results),results.wfStatusCode===CONTACTS_CONSTANTS.WORKFLOW_REQUIRED_STATUS_CODE?(contact=enrichContact(contact,{pendingData:{body:payload}}),contact.pending.msg=results.workflowResponse):contact=enrichContact(contact),deferred.resolve(contact)}).catch(function(error){deferred.reject(error)})},function(error){deferred.reject(error)}),promise},this.changeContact=function(contact,aoid){var payload,deferred=$q.defer(),promise=deferred.promise,changeContactRequest={method:"POST",url:CONTACTS_CONSTANTS.CHANGE_CONTACT_URI,config:{aoid:aoid}};return mapPersonalContact(contact).then(function(mappedContact){contact=mappedContact,payload={events:[{data:{transform:{personalContact:contact},eventContext:{worker:{associateOID:aoid},personalContact:{itemID:contact.personName.formattedName}}}}]},changeContactRequest.data=payload,$http(changeContactRequest).then(function(results){results=_.get(results,"data",results),results.wfStatusCode===CONTACTS_CONSTANTS.WORKFLOW_REQUIRED_STATUS_CODE?(contact=enrichContact(contact,{pendingData:{body:payload}}),contact.pending.msg=results.workflowResponse):contact=enrichContact(contact),deferred.resolve(contact)}).catch(function(error){deferred.reject(error)})},function(error){deferred.reject(error)}),promise},this.removeContact=function(contact,aoid){var payload,deferred=$q.defer(),promise=deferred.promise,removeContactRequest={method:"POST",url:CONTACTS_CONSTANTS.REMOVE_CONTACT_URI,config:{aoid:aoid}};return payload={events:[{data:{eventContext:{worker:{associateOID:aoid},personalContact:{itemID:contact.itemID}}}}]},removeContactRequest.data=payload,$http(removeContactRequest).then(function(results){deferred.resolve(_.get(results,"data",results))}).catch(function(error){deferred.reject(error)}),promise},this.recallEvent=function(type,aoid){var payload,deferred=$q.defer(),promise=deferred.promise,uri=CONTACTS_CONSTANTS.RECALL_EVENT_URL+type,recallContactRequest={method:"POST",url:uri,config:{aoid:aoid}};return payload={events:[{data:{eventContext:{worker:{associateOID:aoid}}}}]},recallContactRequest.data=payload,$http(recallContactRequest).then(function(results){results=_.get(results,"data",results),results.wfStatusCode===CONTACTS_CONSTANTS.WORKFLOW_SUCCESS_STATUS_CODE?deferred.resolve(results):deferred.reject(results)}).catch(function(error){deferred.reject(error)}),promise}}]),angular.module("redbox.connections").controller("redbox.connections.DirectoryCtrl",["$scope","$filter","$location","$q","$sce","$language","redbox.connections.DirectoryService","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant","redbox.ext.shared.services.ProfileService","redbox.shared.services.ImpersonationService",function($scope,$filter,$location,$q,$sce,$language,DirectoryService,UserPermissionService,SFFO,UserProfileService,ImpersonationService){var vm=this;$scope.query={loading:!1,moreResults:!1,preloaded:void 0},$scope.query.hasMyTeam=DirectoryService.hasMyTeam,$scope.$on("directory-service-has-my-team",function(event,value){$scope.query.hasMyTeam=value}),$scope.query.myteam=DirectoryService.query.myteam,vm.toggleMyTeam=function(){$scope.query.myteam=DirectoryService.query.myteam=!$scope.query.myteam,$scope.query.mypeers=DirectoryService.query.mypeers=!1,$scope.query.group=DirectoryService.query.group=void 0,DirectoryService.query.offset=0,searchDirectory()},$scope.query.hasMyPeers=DirectoryService.hasMyPeers,$scope.$on("directory-service-has-my-peers",function(event,value){$scope.query.hasMyPeers=value}),$scope.query.mypeers=DirectoryService.query.mypeers,vm.toggleMyPeers=function(){$scope.query.mypeers=DirectoryService.query.mypeers=!$scope.query.mypeers,$scope.query.myteam=DirectoryService.query.myteam=!1,$scope.query.group=DirectoryService.query.group=void 0,DirectoryService.query.offset=0,searchDirectory()},$scope.toggleGroup=function(group){$scope.query.group=DirectoryService.query.group=$scope.query.group===group.name?void 0:group.name,$scope.query.myteam=DirectoryService.query.myteam=!1,$scope.query.mypeers=DirectoryService.query.mypeers=!1,DirectoryService.query.offset=0,searchDirectory()},vm.changeLocation=function(loc){for(var i=0;i<DirectoryService.locations.length;i++)if(loc===DirectoryService.locations[i].label){DirectoryService.locations[i].selected=!DirectoryService.locations[i].selected;break}DirectoryService.query.offset=0,searchDirectory()},vm.changeDepartment=function(dept){for(var i=0;i<DirectoryService.departments.length;i++)if(dept===DirectoryService.departments[i].label){DirectoryService.departments[i].selected=!DirectoryService.departments[i].selected;break}DirectoryService.query.offset=0,searchDirectory()},$scope.sort={options:DirectoryService.sortOptions},$scope.$watch("sort.selected",function(newValue,oldValue){newValue&&newValue!==oldValue?changeSort(newValue):newValue&&0===$scope.profiles.length&&searchDirectory()});var changeSort=function(sort){DirectoryService.setSortOption(sort.id),DirectoryService.query.offset=0,searchDirectory()};vm.renderHtml=function(value){return $sce.trustAsHtml(value)},vm.config={profileCount:0,loadingProfile:!1,loadingProfileAoid:"",error:!1,resultsLabel:$language.get("connections.DIRECTORY_PEOPLE_RESULTS")},$scope.showPhone=function(profile,raw){var pPhone,res=[];return pPhone=$filter("phoneNumberFilter")({number:profile.phone},raw),res.push(pPhone),res},$scope.isMobile=!1,vm.openWorkerProfile=function(aoid){$location.path("/profile/"+aoid)},vm.openOrgChart=function(aoid){vm.hasOrgChart&&$location.path("/connections/orgchart/"+aoid)},$scope.downloadProfileCard=function(){},vm.reset=function(){resetAllSelections(),$scope.companySelected=!0,$scope.locationSelected=!1,$scope.departmentSelected=!1,DirectoryService.query.offset=0,DirectoryService.query.value="",$scope.preloadedSelectionClass=!1,searchDirectory()},vm.clearPreloaded=function(){$scope.companySelected=!0,DirectoryService.query.offset=0,DirectoryService.query.value="",$scope.preloadedSelectionClass=!1,searchDirectory()};var resetAllSelections=function(){$scope.query.myteam=DirectoryService.query.myteam=!1,$scope.query.mypeers=DirectoryService.query.mypeers=!1,$scope.query.group=DirectoryService.query.group=void 0,DirectoryService.clearFilters(),$scope.locations=DirectoryService.locations,$scope.departments=DirectoryService.departments};vm.showDepartments={label:$language.get("shared.MORE"),count:5},vm.moreDepartments=function(){5===vm.showDepartments.count?(vm.showDepartments.count=999,vm.showDepartments.label=$language.get("shared.CLOSE")):(vm.showDepartments.count=5,vm.showDepartments.label=$language.get("shared.MORE"))},vm.showLocations={label:$language.get("shared.MORE"),count:5},vm.moreLocations=function(){5===vm.showLocations.count?(vm.showLocations.count=999,vm.showLocations.label=$language.get("shared.CLOSE")):(vm.showLocations.count=5,vm.showLocations.label=$language.get("shared.MORE"))},vm.showFilterOptions=function(){$scope.showArrow?($scope.showArrow=!1,$scope.showX=!0):($scope.showArrow=!0,$scope.showX=!1)},$scope.showCompanyTab=function(){$scope.companySelected=!0,$scope.locationSelected=!1,$scope.departmentSelected=!1},$scope.showLocationTab=function(){$scope.locationSelected=!0,$scope.companySelected=!1,$scope.departmentSelected=!1},$scope.showDepartmentTab=function(){$scope.departmentSelected=!0,$scope.companySelected=!1,$scope.locationSelected=!1},$scope.$on("directory-refresh",function(){DirectoryService.query.offset=0,searchDirectory()});var searchDirectory=function(){var deferred=$q.defer(),promise=deferred.promise;return $scope.query.loading=!0,$scope.profiles.length=0,$scope.query.preloaded=DirectoryService.query.value.length>0?DirectoryService.query.value:void 0,$scope.query.preloaded?($scope.preloadedSelectionClass=!0,$scope.companySelected=!0,vm.config.resultsLabel="'"+$scope.query.preloaded+"' "+$language.get("connections.DIRECTORY_RESULTS")):$scope.query.myteam?vm.config.resultsLabel=$language.get("connections.DIRECTORY_MY_TEAM_RESULTS"):vm.config.resultsLabel=$language.get("connections.DIRECTORY_PEOPLE_RESULTS"),DirectoryService.search().then(function(results){results&&results.length>0?(angular.forEach(results,function(profile){profile.selected=!1}),getProfileImageURLs(results).then(function(profilesWithImageURLs){$scope.profiles=$scope.profiles.concat(profilesWithImageURLs),$scope.query.loading=!1,vm.config.profileCount<=$scope.profiles.length?$scope.query.moreResults=!1:$scope.query.moreResults=!0,deferred.resolve()}),$scope.locations=DirectoryService.locations,$scope.departments=DirectoryService.departments,vm.config.profileCount=DirectoryService.searchMatches):(vm.config.profileCount=0,$scope.query.loading=!1,$scope.query.moreResults=!1)}),promise};vm.moreResults=function(){!$scope.query.loading&&$scope.query.moreResults&&($scope.query.loading=!0,DirectoryService.query.offset=DirectoryService.query.offset+100,
DirectoryService.search().then(function(results){results&&results.length>0?getProfileImageURLs(results).then(function(profilesWithImageURLs){$scope.profiles=$scope.profiles.concat(profilesWithImageURLs),$scope.query.loading=!1,vm.config.profileCount<=$scope.profiles.length?$scope.query.moreResults=!1:$scope.query.moreResults=!0}):($scope.query.loading=!1,$scope.query.moreResults=!1)}))};var getProfileImageURLs=function(profiles){var deferred=$q.defer(),promise=deferred.promise,aoids=[];return angular.forEach(profiles,function(profile){aoids.push(profile.aoid)}),UserProfileService.getImagesForAssociates(aoids).then(function(images){angular.forEach(profiles,function(profile){images[profile.aoid]&&images[profile.aoid].images&&images[profile.aoid].images.profile?profile.imageURL=ImpersonationService.addActingSessionIdParamSync(images[profile.aoid].images.profile.binaryHref):profile.imageURL=void 0}),deferred.resolve(profiles)}),promise};$scope.showArrow=!0,$scope.showX=!1,$scope.companySelected=!0,$scope.profiles=[],DirectoryService.query.offset=0,UserPermissionService.init().then(function(){vm.hasOrgChart=UserPermissionService.hasPermission(SFFO.enterpriseInformationManagement.flexGraphManagement.hierarchyViewing)}),DirectoryService.init().then(function(){$scope.sort.selected=DirectoryService.sortOptions[DirectoryService.sortOption],$scope.groups=DirectoryService.groups})}]),angular.module("redbox.connections").directive("adpInfiniteScroll",["$window","$document",function($window,$document){var link=function(scope,element,attrs){function handleScroll(){scrollTop=$document.scrollTop(),scrollTop+$window.innerHeight+offset>e.offset().top?inTheZone||(scope.scrollCallback(),inTheZone=!0):inTheZone=!1}var scrollTop,offset=parseInt(attrs.threshold)||0,e=angular.element(element[0]),inTheZone=!1;e.addClass("adp-infinite-scroll"),angular.element($document).bind("scroll",function(){handleScroll()});var slideIn=angular.element(document.querySelector(".slidein"));slideIn&&slideIn.bind("scroll",function(){handleScroll()}),element.on("$destroy",function(){element.unbind()})};return{link:link,replace:!1,restrict:"A",scope:{scrollCallback:"&"}}}]),angular.module("redbox.connections").filter("emailStrip",function(){var emailName=function(actualEmail){var em=actualEmail.split("@");return em[0]};return emailName}),angular.module("redbox.connections").constant("CONSTANTS_DIRECORY",{MAX_RESULTS:100}).service("redbox.connections.DirectoryService",["$q","$language","$rootScope","redbox.connections.search.EmployeeSearchService","redbox.ext.shared.services.UserIdentityService","redbox.ext.shared.services.UserPreferenceService","adp.ng.logging.LoggerFactory","redbox.connections.worker.WorkerService","CONSTANTS_DIRECORY",function($q,$language,$rootScope,employeeSearchService,UserIdentity,UserPreferenceService,loggerFactory,WorkerService,CONSTANTS_DIRECORY){var workerService,self=this,initialized=!1,logger=loggerFactory.getLogger("redbox.connections.DirectoryService");this.sortOptions=[{id:0,param:"sr_sv_workerLegalLastNameSort asc"},{id:1,param:"sr_sv_workerLegalLastNameSort desc"},{id:2,param:"sr_sv_workerLegalFirstNameSort asc"},{id:3,param:"sr_sv_workerLegalFirstNameSort desc"}],this.hasMyTeam=!1,this.hasMyPeers=!1,this.groups=[];var loadStrings=function(){self.sortOptions[0].label=$language.get("connections.DIRECTORY_SORT_LAST_NAME_ASC"),self.sortOptions[1].label=$language.get("connections.DIRECTORY_SORT_LAST_NAME_DESC"),self.sortOptions[2].label=$language.get("connections.DIRECTORY_SORT_FIRST_NAME_ASC"),self.sortOptions[3].label=$language.get("connections.DIRECTORY_SORT_FIRST_NAME_DESC")};$rootScope.$on("$languageChangeSuccess",function(){loadStrings()}),this.sortOption=0,this.setSortOption=function(value){!isNaN(value)&&value>=0&&value<=4&&(self.sortOption=value,setSortPreference())};var getSortPreference=function(){var deferred=$q.defer(),promise=deferred.promise;return UserPreferenceService.getPreference(UserPreferenceService.KEYS.COMPANY_DIRECTORY_SORT).then(function(result){result&&result.value&&!isNaN(result.value)&&result.value>=0&&result.value<=4&&(self.sortOption=result.value),deferred.resolve()},function(error){logger.error("Get sort preference failed: "+error),deferred.reject(error)}),promise},setSortPreference=function(){var deferred=$q.defer(),promise=deferred.promise;return UserPreferenceService.setPreference(UserPreferenceService.KEYS.COMPANY_DIRECTORY_SORT,self.sortOption).then(function(){logger.info("Set sort preference success: "+self.sortOption),deferred.resolve()},function(error){logger.error("Set sort preference failed: "+error),deferred.reject(error)}),promise},getDirectoryGroups=function(){var deferred=$q.defer(),promise=deferred.promise;return UserPreferenceService.getPreference("companyDirectoryGroups").then(function(result){result&&result.length>0?self.groups=result.value:self.groups.length=0,deferred.resolve()},function(error){logger.error("Get directory groups failed: "+error),self.groups.length=0,deferred.reject(error)}),promise};this.query={value:"",offset:0,myteam:!1,mypeers:!1,group:void 0},this.searchMatches=0,this.departments=[],this.locations=[];var previousQuery,locationInclude=function(){var includes=[];return angular.forEach(self.locations,function(location){location.selected&&includes.push('f_mv_workerAssignedWorkCityCountrySubdivision:"'+location.label+'"')}),0===includes.length?"":1===includes.length?includes[0]:"("+includes.join(" OR ")+")"},departmentInclude=function(){var includes=[];return angular.forEach(self.departments,function(department){department.selected&&includes.push('f_mv_workerAssignedOrgUnitNameLong:"'+department.label+'"')}),0===includes.length?"":1===includes.length?includes[0]:"("+includes.join(" OR ")+")"},init=function(){var primaryManager,deferred=$q.defer(),promise=deferred.promise,reportsToQuery={queryObject:{offset:0,searchType:"advance",additionalSearchParams:[],excludeWildcard:!0},count:1},userPreferencePromises=[];return initialized?deferred.resolve():UserIdentity.getAoid().then(function(aoid){aoid&&(self.associateoid=aoid),userPreferencePromises.push(getSortPreference()),userPreferencePromises.push(getDirectoryGroups()),$q.all(userPreferencePromises).finally(function(){initialized=!0,deferred.resolve()}),reportsToQuery.queryObject.query="id_reportingManagerAssociateOID:"+self.associateoid,employeeSearchService.getSearchResults(reportsToQuery).then(function(data){data&&data.matches&&data.matches>0&&(self.hasMyTeam=!0,$rootScope.$broadcast("directory-service-has-my-team",!0))}),workerService=new WorkerService({workflowEnabled:!1}),workerService.get().then(function(){try{primaryManager=workerService.getPrimaryManager(),_.has(primaryManager,"associateOID")&&(self.managerAssociateoid=primaryManager.associateOID,reportsToQuery.queryObject.query="id_reportingManagerAssociateOID:"+self.managerAssociateoid,employeeSearchService.getSearchResults(reportsToQuery).then(function(data){data&&data.matches&&data.matches>0&&(self.hasMyPeers=!0,$rootScope.$broadcast("directory-service-has-my-peers",!0))}))}catch(e){logger.error("Error determining peers : ",e)}})}),promise},apiCall=function(query){var queryObject,locationQuery,departmentQuery,deferred=$q.defer(),promise=deferred.promise;if(query)queryObject=query;else{if(queryObject={offset:self.query.offset,searchType:"advance",additionalSearchParams:[],excludeWildcard:!0},previousQuery!==self.query.value&&(previousQuery=self.query.value),self.query.value&&self.query.value.length>0?queryObject.query="("+self.query.value.split(" ").join("* OR ")+"*)":queryObject.query="",self.query.myteam&&self.associateoid&&(queryObject.query.length>0&&(queryObject.query=queryObject.query+" AND "),queryObject.query=queryObject.query+"id_reportingManagerAssociateOID:"+self.associateoid),self.query.mypeers&&self.managerAssociateoid&&(queryObject.query.length>0&&(queryObject.query=queryObject.query+" AND "),queryObject.query=queryObject.query+"id_reportingManagerAssociateOID:"+self.managerAssociateoid),self.query.group){queryObject.query.length>0&&(queryObject.query=queryObject.query+" AND ");for(var i=0;i<self.groups.length;i++)if(self.query.group===self.groups[i].name){queryObject.query=queryObject.query+"id_UUID:"+self.groups[i].people.join(" OR id_UUID:");break}}queryObject.sort=self.sortOptions[self.sortOption].param,locationQuery=locationInclude(),locationQuery.length>0&&(queryObject.query.length>0&&(queryObject.query=queryObject.query+" AND "),queryObject.query=queryObject.query+locationQuery),departmentQuery=departmentInclude(),departmentQuery.length>0&&(queryObject.query.length>0&&(queryObject.query=queryObject.query+" AND "),queryObject.query=queryObject.query+departmentQuery),0===queryObject.query.length&&(queryObject.excludeWildcard=!1)}var config={queryObject:queryObject,count:CONSTANTS_DIRECORY.MAX_RESULTS};return logger.info("Advance search query: "+config.queryObject.query),employeeSearchService.getSearchResults(config).then(function(data){data&&(self.searchMatches=data.matches,updateFacets(data.facets,departmentQuery,locationQuery)),data.employees?deferred.resolve(data.employees):deferred.resolve([])}),promise};this.clearFilters=function(){var i;for(i=0;i<this.locations.length;i++)this.locations[i].selected===!0&&(this.locations[i].selected=!1);for(i=0;i<this.departments.length;i++)this.departments[i].selected===!0&&(this.departments[i].selected=!1)},this.search=function(){var deferred=$q.defer(),promise=deferred.promise;return apiCall().then(function(results){deferred.resolve(results)}),promise},this.init=function(){var deferred=$q.defer(),promise=deferred.promise;return init().then(function(){deferred.resolve()}),promise};var updateFacets=function(dataFacets,departmentQuery,locationQuery){self.query.myteam&&self.query.mypeers&&previousQuery===self.query.value||""!==departmentQuery||""!==locationQuery||!dataFacets||(self.departments=dataFacets.departments,self.locations=dataFacets.locations)};loadStrings()}]),angular.module("redbox.connections.newhires").component("adpNewhireCard",{controller:"redbox.connections.newhires.NewhireCardCtrl",controllerAs:"newhireCardCtrl",templateUrl:"app/connections/modules/newhires/components/newhire-card/newhire-card-component.html",bindings:{newhire:"<",checklistSummary:"<?",shouldShowChecklistSection:"<",fetchChecklistSummaries:"&"}}).controller("redbox.connections.newhires.NewhireCardCtrl",["$language","$sce","redbox.connections.newhires.NewhiresService","redbox.onboarding.steps.welcome.WelcomeMessageService","redbox.onboarding.display.DisplayService","redbox.framework.checklists.ChecklistService",function($language,$sce,NewhiresService,WelcomeMessageService,DisplayService,ChecklistService){function getButtonDetails(){var isComplete=onboardingSetupIsComplete();return{style:isComplete?"btn-secondary btn-bordered":"btn-primary",text:isComplete?$language.get("shared.EDIT"):$language.get("connections.NEWHIRE_SETUP_ONBOARDING"),analyticsLabel:isComplete?"Newhire Edit Onboarding":"Newhire Setup Onboarding",isComplete:isComplete}}function showSetupOnboardingModal(){var onboardingModalConfig={type:"modal",parameters:{keyboard:!1,backdrop:!1,size:"full-screen",fullscreenTheme:"light",footer:!1,contentUrl:"app/connections/modules/newhires/views/newhire-wizard.html",windowClass:"new-hire-wizard-modal",controller:"redbox.connections.NewhireWizardCtrl as NewhireWizardCtrl"}};return NewhiresService.setSelectedNewHire(vm.newhire.aoid).then(function(){return DisplayService.open(onboardingModalConfig,updateNewhireOnboardingStatus)})}function updateNewhireOnboardingStatus(){WelcomeMessageService.hasWelcomeMessage(vm.newhire.aoid,!0).then(function(hasWelcomeMessage){vm.newhire.hasWelcomeMessage=hasWelcomeMessage,vm.onboardingSetupAccordionOpen=!hasWelcomeMessage})}function getStartDateKey(){var days=getStartDateInfo().actualDays,startDateObject=getStartDateObject();return _.find(startDateObject,function(sdObj){var passesMax=!!_.isUndefined(sdObj.max)||days<=sdObj.max,passesMin=!!_.isUndefined(sdObj.min)||days>=sdObj.min;return passesMax&&passesMin}).key}function getStartDateInfo(){var startDate=moment(vm.newhire.startDate),now=moment().startOf("day"),daysDiff=startDate.diff(now,"days");return{days:Math.abs(daysDiff),actualDays:daysDiff,date:startDate.format("MMM D, YYYY")}}function getStartDateString(){var str=$language.get(getStartDateKey(),getStartDateInfo());return $sce.trustAsHtml(str),str}function getStartDateObject(){return[{key:"connections.NEWHIRE_STARTED_ON",max:-8},{key:"connections.NEWHIRE_STARTED_DAYS_AGO",min:-7,max:-2},{key:"connections.NEWHIRE_STARTED_YESTERDAY",min:-1,max:-1},{key:"connections.NEWHIRE_STARTING_TODAY",min:0,max:0},{key:"connections.NEWHIRE_STARTING_TOMORROW",min:1,max:1},{key:"connections.NEWHIRE_STARTING_IN",min:2,max:7},{key:"connections.NEWHIRE_STARTING_ON",min:8}]}function onboardingPeriodPassed(){return getStartDateInfo().actualDays<-7}function onboardingSetupIsComplete(){return(vm.newhire||{}).hasWelcomeMessage}function showFullChecklist(){return ChecklistService.viewIndividualChecklist(vm.newhire.aoid,"onboarding").then(reloadChecklistSummary)}function reloadChecklistSummary(){return vm.fetchChecklistSummaries(),vm.checklistLoading=!0,ChecklistService.getChecklistSummariesForAoids([vm.newhire.aoid],"onboarding").then(function(result){vm.checklistLoading=!1,vm.checklistSummary=result.results[0],0===vm.checklistSummary.overdueTaskCount&&(vm.checklistAccordionOpen=!1)})}function shouldShowChecklistSection(){return vm.shouldShowChecklistSection}var vm=this;_.assign(vm,{getButtonDetails:getButtonDetails,showSetupOnboardingModal:showSetupOnboardingModal,getStartDateString:getStartDateString,onboardingSetupAccordionOpen:!onboardingSetupIsComplete(),onboardingPeriodPassed:onboardingPeriodPassed,onboardingSetupIsComplete:onboardingSetupIsComplete,shouldShowChecklistSection:shouldShowChecklistSection,showFullChecklist:showFullChecklist})}]),angular.module("redbox.connections.newhires").component("peopleNewhiresComponent",{controller:"redbox.connections.newhires.NewhiresCtrl",controllerAs:"newhiresCtrl",templateUrl:"app/connections/modules/newhires/components/people-newhires/people-newhires-component.html"}).controller("redbox.connections.newhires.NewhiresCtrl",["$q","redbox.framework.checklists.ChecklistConstant","redbox.connections.newhires.NewhiresService","redbox.framework.checklists.ChecklistService","redbox.framework.checklists.ChecklistTemplateService",function($q,ChecklistConstant,NewhiresService,ChecklistService,ChecklistTemplateService){function onInit(){getAllOnboardersAndEmployeesWithOverdueChecklists().then(populateNewhireObjs).then(fetchChecklistSummaries).then(setShouldShowChecklistSection).catch(function(err){vm.error=!0}).finally(function(){vm.loadingOnboarders=!1})}function populateNewhireObjs(newhires){aoids=_.pluck(newhires,"aoid"),vm.newhireObjs=_.map(newhires,function(newhire){return{newhire:newhire,shouldShowChecklistSection:!1}}),vm.newhireCount=newhires.length}function setShouldShowChecklistSection(clientHasChecklistTemplate){_.forEach(vm.newhireObjs,function(newhireObj){newhireObj.shouldShowChecklistSection=!newhireObj.newhire.isRehire&&(clientHasChecklistTemplate||newhireObj.checklistSummary.found)})}function fetchChecklistSummaries(){return vm.loadingSummaries=!0,$q.all({checklistTemplate:wrapPromise(ChecklistTemplateService.getChecklistTemplate()),summaries:ChecklistService.getChecklistSummariesForAoids(aoids,"onboarding")}).then(function(results){return rollupOverdueChecklists(results.summaries),vm.hasChecklistError=!1,results.checklistTemplate.success&&!!results.checklistTemplate.result}).catch(function(){return delete vm.overdueTaskCount,vm.hasChecklistError=!0,$q.reject()}).finally(function(){vm.loadingSummaries=!1})}function wrapPromise(promise){return promise.then(function(result){return{success:!0,result:result}},function(err){return{success:!1,error:err}})}function rollupOverdueChecklists(response){vm.overdueTaskCount=_.chain(response.results).pluck("overdueTaskCount").sum().value(),_.forEach(response.results,function(summary){var newhireObj=_.find(vm.newhireObjs,function(nho){return summary.assigneeAoid===nho.newhire.aoid})||{};newhireObj.checklistSummary=summary})}function getAllOnboardersAndEmployeesWithOverdueChecklists(){return $q.all({onboarders:NewhiresService.getMyOnboarders(),checklists:getEmployeesWithDueChecklists()}).then(concatenateOnboardersAndChecklists)}function getEmployeesWithDueChecklists(){return NewhiresService.getTeamForManager().then(function(team){var teamAoids=_.pluck(team,"aoid");return ChecklistService.getChecklistSummaries(teamAoids,"onboarding",[ChecklistConstant.INCOMPLETE]).then(function(summaries){return _.chain(summaries.results).filter("found").map(function(summary){return _.find(team,{aoid:summary.assigneeAoid})}).compact().value()}).then(function(employees){return $q.all(employees.map(function(employee){return NewhiresService.populateEmployeeOnboardingInformation(employee)}))})})}function concatenateOnboardersAndChecklists(results){var concatenated=[].concat(results.onboarders||[],results.checklists||[]);return _.uniq(concatenated,function(emp){return emp.aoid})}var aoids,vm=this;angular.extend(vm,{newhireCount:0,newhireObjs:[],error:!1,loadingOnboarders:!0,loadingSummaries:!0,fetchChecklistSummaries:fetchChecklistSummaries,$onInit:onInit})}]),angular.module("redbox.connections").controller("redbox.connections.NewhireWizardCtrl",["adp.ng.ui.modal.adpModalService","$language","$timeout","$modalInstance","redbox.wizard.WizardConstant","redbox.wizard.WizardRendererService","redbox.wizard.WizardDriverService","redbox.wizard.WizardEvaluatorService","redbox.wizard.WizardPagemakerService","redbox.wizard.WizardStyleService","redbox.connections.newhires.NewhiresService","redbox.connections.NewhireWizardService",function($adpModal,$language,$timeout,$modalInstance,wizardConstant,Renderer,Driver,Evaluator,Pagemaker,WizardStyleService,NewhiresService,NewhireWizardService){function closeWizard(){driver.stop()}function cleanupUI(){$modalInstance.close()}function attemptToCloseWizard(){driver.unsavedDataExists()&&!saveComplete()?triggerUnsavedDataModal().then(closeWizard):closeWizard()}function triggerUnsavedDataModal(){var options={closeLabel:$language.get("shared.OK"),dismissLabel:$language.get("shared.CANCEL"),title:$language.get("shared.UNSAVED_CHANGES"),content:$language.get("shared.DIRTY_CHECK"),size:"md",analytics:{close:{event:"Link",category:"Onboarding",label:"New Hire Wizard - MODAL_CLOSE"},dismiss:{event:"Link",category:"Onboarding",label:"New Hire Wizard - MODAL_DISMISS"}}},modal=$adpModal.open(options);return modal.result}function init(){selectedAOID=NewhiresService.getSelectedNewHire().aoid,vm.newHireFirstName=parseFirstName(NewhiresService.getSelectedNewHire().name),$timeout(function(){nhWizardDiv=$(".adp-wizard-pages-content")}).then(getInitialPagesAndData).then(startWizard)}function startWizard(initialPagesAndData){saveComplete=initialPagesAndData.saveComplete,saveStarted=initialPagesAndData.saveStarted;var renderer,hooks,pagemaker;return pagemaker=new Pagemaker(initialPagesAndData.pages),renderer=new Renderer({target:nhWizardDiv,containerClass:"container",templateUrl:"app/connections/modules/newhires/views/newhire-wizard-template.html"}),hooks={onStopDriver:cleanupUI,onSetValidationErrors:function(page,data,errors,isErrorState){WizardStyleService.setErrorState(isErrorState)},preShow:function(page,data,animationDirection){WizardStyleService.setCurrentPage(page),handleAnimation(page,data,animationDirection,nhWizardDiv)}},driver=new Driver(initialPagesAndData.data,pagemaker,hooks,renderer,Evaluator),vm.callbacks=driver.callbacks,vm.style=WizardStyleService,driver.start().then(function(){wizardLoading=!1})}function displayButtons(){return!wizardLoading&&!saveStarted()}function displayCloseButton(){return saveComplete()}function showLoadingIndicator(){return wizardLoading||saveStarted()&&!saveComplete()}function getInitialPagesAndData(){return NewhireWizardService.getInitialPagesAndData(selectedAOID).catch(showLoadingErrorModal)}function showLoadingErrorModal(){var modalOptions={title:$language.get("shared.OOPS_SOMETHING"),content:$language.get("shared.SERVICE_FAILURE_ERROR_MESSAGE"),closeLabel:$language.get("shared.CLOSE"),type:"error",closeable:!1,dismissButton:!1},modal=$adpModal.open(modalOptions);modal.result.finally(cleanupUI)}function handleAnimation(page,data,animationDirection,element){var animationClass="";switch(element.removeClass("animation-slide-forward animation-slide-backward animation-fade animation-fade-in-review"),animationDirection){case wizardConstant.animationDirections.BACKWARD:animationClass="animation-slide-backward";break;case wizardConstant.animationDirections.NONE:animationClass="animation-fade";break;case wizardConstant.animationDirections.FORWARD:animationClass="animation-slide-forward"}element.addClass(animationClass)}function parseFirstName(name){return name&&name.split(" ")[0]}var nhWizardDiv,selectedAOID,driver,vm=this,wizardLoading=!0,saveStarted=function(){return!1},saveComplete=function(){return!1};angular.extend(vm,{attemptToCloseWizard:attemptToCloseWizard,displayButtons:displayButtons,displayCloseButton:displayCloseButton,showLoadingIndicator:showLoadingIndicator,newHireFirstName:void 0}),init()}]),angular.module("redbox.connections").controller("redbox.connections.NewhireWizardSelectEmployeesCtrl",["$scope","$q",function($scope,$q){function toggle(employee){return _.forEach(vm.possibleTeamMembers.members,function(member){delete member.adhocError}),employee.disabled?void(employee.adhocError="onboarding.NEWHIRE_INELIGIBLE_BUDDY"):(employee.isSelected()?canSelectFewer()&&employee.setSelected(!1):canSelectMore()?employee.setSelected(!0):vm.removePrevious&&(_.find(getTeam().members,function(emp){return emp.isSelected()}).setSelected(!1),employee.setSelected(!0)),void setTeamMembers())}function canSelectMore(){return!vm.selectMax||getTeam().countSelected()<vm.selectMax}function canSelectFewer(){return!vm.selectMin||getTeam().countSelected()>vm.selectMin}function setTeamMembers(){vm.possibleTeamMembers=getterSetter().clone(),getterSetter(getTeam())}function getTeam(){function resolvePromisedValues(name,getFn,transformFn){var me=this;me[getFn]().then(function(result){transformFn&&"function"==typeof transformFn?$q.when(transformFn(result)).then(function(value){me[name]=value}):me[name]=result})}return _.forEach(vm.possibleTeamMembers.members,function(member){resolvePromisedValues.call(member,"jobTitle","getJobTitle"),resolvePromisedValues.call(member,"name","getName")}),vm.possibleTeamMembers}var vm=this,wzField=$scope.wzField,getterSetter=$scope.getModel();angular.extend(vm,wzField,{toggle:toggle,canSelectMore:canSelectMore,canSelectFewer:canSelectFewer}),setTeamMembers()}]),angular.module("redbox.connections").factory("redbox.connections.NewhireWizardService",["$q","$language","adp.ng.ui.modal.adpModalService","redbox.wizard.WizardConstant","redbox.onboarding.steps.welcome.WelcomeMessageService","redbox.onboarding.team.TeamService","redbox.onboarding.socialRelationships.SocialRelationshipsService","redbox.onboarding.team.EmployeeService","redbox.connections.newhires.NewhiresValidationService","redbox.onboarding.common.StartDateService","redbox.connections.worker.WorkerService","redbox.onboarding.template.TemplateService",function($q,$language,$adpModal,wizardConstant,WelcomeMessageService,TeamService,SocialRelationshipsService,Employee,NewhiresValidationService,StartDateService,WorkerService,TemplateService){function getInitialPagesAndData(selectedAOID){function handleSuccess(results){0===results.team.countSelected()&&results.team.members.forEach(function(employee){employee.setSelected(!0)}),savedBuddy=_.find(results.team.members,function(member){return member.getAoid()===results.buddyAoid});var initialData={welcomeMessage:getWelcomeMessage(results.hasWelcomeMessage,results.welcomeMessage,results.isRehire),shouldShowTeamSelection:!!results.team.members.length&&results.teamStepPotentiallyVisible,team:results.team};return{saveComplete:function(){return saveComplete},saveStarted:function(){return saveStarted},selectedBuddy:function(){return selectedBuddy},pages:{start:{hooks:{preShow:function(page,data){data.shouldShowTeamSelection||(page.terminal=!0)},onValidatedSubmit:function(page,data){if(!data.shouldShowTeamSelection)return saveWizardData(data).then(function(){return $q.when(wizardConstant.specialValues.CLOSE_WIZARD)})}},progress:0,title:"connections.NEWHIRE_WIZARD_WELCOME_MESSAGE_TITLE",templateUrl:"app/wizard/views/page-default.html",cls:"adp-wizard-header-with-subtitle",next:'"selectTeamMembers"',initial:!0,fields:[{key:"subtitle",type:"div",cls:"adp-wizard-subtitle",label:"connections.NEWHIRE_WIZARD_WELCOME_MESSAGE_SUBHEAD"},{key:"welcomeMessage",type:"wysiwyg",resetTextTo:getDefaultWelcomeMessage(results.isRehire),validate:[{optional:!1,message:"shared.VALIDATION_REQUIRED"},{expr:"globals.customValidationService.isOverCharLimit(data, 500) === false",globals:{customValidationService:NewhiresValidationService},message:"connections.NEWHIRE_WIZARD_MESSAGE_TOO_LONG"}]}]},selectTeamMembers:{title:"connections.NEWHIRE_WIZARD_SELECT_TEAM_MEMBERS_TITLE",templateUrl:"app/wizard/views/page-default.html",cls:"adp-wizard-header-with-subtitle",progress:25,next:'"selectBuddy"',fields:[{type:"div",cls:"adp-wizard-subtitle",label:"connections.NEWHIRE_WIZARD_SELECT_TEAM_MEMBERS_SUBHEAD"},{key:"team",templateUrl:"app/connections/modules/newhires/views/newhire-wizard-select-employees.html",selectedClass:"adp-selection-check",validate:[{expr:"data.countSelected() >= 1",message:"connections.NEWHIRE_WIZARD_MUST_SELECT_TEAM"}]}]},selectBuddy:{hooks:{preShow:function(page,data,animationDirection){var foundCurrentBuddy,employeePromises,selectedBuddyChoices=data.team.clone();if(animationDirection===wizardConstant.animationDirections.FORWARD)return selectedBuddyChoices.members=_.filter(selectedBuddyChoices.members,function(member){return member.isSelected()}),employeePromises=_.map(selectedBuddyChoices.members,function(member,index){return member.getStartDate().then(function(startDate){member.disabled=startDate.isAfter(moment().startOf("day"))}).catch(function(){selectedBuddyChoices.members[index]=null})}),$q.all(employeePromises).then(function(){var shouldDeselectBuddies,allBuddiesDisabled,noBuddies;selectedBuddyChoices.members=_.compact(selectedBuddyChoices.members),noBuddies=!selectedBuddyChoices.members.length,shouldDeselectBuddies=selectedBuddyChoices.members.length>1||1===selectedBuddyChoices.members.length&&selectedBuddyChoices.members[0].disabled,shouldDeselectBuddies&&selectedBuddyChoices.members.forEach(function(member){member.setSelected(!1)}),noBuddies?(_.find(page.fields,{key:"selectedBuddy"}).showNoBuddyError=!0,page.requireBuddy=!1):page.requireBuddy=!0,allBuddiesDisabled=_.every(selectedBuddyChoices.members,"disabled"),allBuddiesDisabled&&!noBuddies&&(_.find(page.fields,{key:"selectedBuddy"}).showAllBuddiesDisabledError=!0),savedBuddy&&(foundCurrentBuddy=_.find(selectedBuddyChoices.members,function(member){return member.getAoid()===savedBuddy.getAoid()}),foundCurrentBuddy&&foundCurrentBuddy.setSelected(!0)),data.selectedBuddy=selectedBuddyChoices})},onValidatedSubmit:function(page,data){if(selectedBuddy=_.find(data.selectedBuddy&&data.selectedBuddy.members,function(emp){return emp.isSelected()}),!selectedBuddy&&page.requireBuddy)return $adpModal.open({title:$language.get("connections.NEWHIRE_WIZARD_BUDDY_WARNING_TITLE"),content:$language.get("connections.NEWHIRE_WIZARD_BUDDY_WARNING")}).result}},next:'"confirmation"',title:"connections.NEWHIRE_WIZARD_SELECT_BUDDY_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:50,cls:"adp-wizard-header-with-subtitle",fields:[{type:"div",cls:"adp-wizard-subtitle",label:"connections.NEWHIRE_WIZARD_SELECT_BUDDY_SUBHEAD"},{key:"selectedBuddy",templateUrl:"app/connections/modules/newhires/views/newhire-wizard-select-employees.html",selectMax:1,selectMin:0,removePrevious:!0,selectedClass:"adp-selection-star",validate:[{expr:"data.countSelected() <= 1"}]}]},confirmation:{hooks:{preShow:function(page,data,animationDirection){var confirmationPageSubtitle=_.find(page.fields,{id:"confirmation-page-subtitle"}),buddy=_.find(data.selectedBuddy&&data.selectedBuddy.members,function(emp){return emp.isSelected()});confirmationPageSubtitle.label=buddy?"connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_SUBHEAD_NOTIFY_BUDDY":"connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_SUBHEAD"},onValidatedSubmit:function(page,data){return saveStarted?$q.when(wizardConstant.specialValues.CLOSE_WIZARD):(saveStarted=!0,saveWizardData(data).then(function(saveResults){var pageFields=page.fields,saveWelcomeMessageAlert=_.find(pageFields,{id:"welcome-message-alert"}),saveTeamAlert=_.find(pageFields,{id:"save-team-alert"}),saveBuddyAlert=_.find(pageFields,{id:"save-buddy-alert"}),notifyBuddyAlert=_.find(pageFields,{id:"notify-buddy-alert"});return saveComplete=!0,saveResults.success?$q.when(wizardConstant.specialValues.CLOSE_WIZARD):(saveWelcomeMessageAlert.hidden=!1,saveWelcomeMessageAlert.alert.type=saveResults.welcomeMessage.success?"success":"error",saveWelcomeMessageAlert.alert.content=saveResults.welcomeMessage.success?"connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_WELCOME_MESSAGE_SUCCESS_ALERT":"connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_WELCOME_MESSAGE_ERROR_ALERT",saveTeamAlert.hidden=!1,saveTeamAlert.alert.type=saveResults.saveTeam.success?"success":"error",saveTeamAlert.alert.content=saveResults.saveTeam.success?"connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_SAVE_TEAM_SUCCESS_ALERT":"connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_SAVE_TEAM_ERROR_ALERT",saveResults.saveBuddy.success||(saveBuddyAlert.hidden=!1,saveBuddyAlert.alert.type="error",saveBuddyAlert.alert.content="connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_SAVE_BUDDY_ERROR_ALERT"),!saveResults.notifyBuddy.success&&saveResults.saveBuddy.success&&(notifyBuddyAlert.hidden=!1,notifyBuddyAlert.alert.type="error",notifyBuddyAlert.alert.content="connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_NOTIFY_BUDDY_ERROR_ALERT"),saveResults.saveBuddy.success&&saveResults.notifyBuddy.success&&(saveBuddyAlert.hidden=!1,saveBuddyAlert.alert.type="success",saveBuddyAlert.alert.content="connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_SAVE_BUDDY_SUCCESS_ALERT"),$q.reject())}))}},title:"connections.NEWHIRE_WIZARD_CONFIRMATION_PAGE_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:75,cls:"adp-wizard-header-with-subtitle",terminal:!0,fields:[{id:"confirmation-page-subtitle",type:"div",cls:"adp-wizard-subtitle"},{id:"welcome-message-alert",type:"alert",hidden:!0,alert:{closeable:!1}},{id:"save-team-alert",type:"alert",hidden:!0,alert:{closeable:!1}},{id:"save-buddy-alert",type:"alert",hidden:!0,alert:{closeable:!1}},{id:"notify-buddy-alert",type:"alert",hidden:!0,alert:{closeable:!1}}]}},data:initialData}}function getDefaultWelcomeMessage(isRehire){return isRehire?$language.get("connections.COMPANY_WELCOME_MESSAGE_REHIRE"):$language.get("connections.COMPANY_WELCOME_MESSAGE")}function getWelcomeMessage(hasWelcomeMessage,welcomeMessage,isRehire){return hasWelcomeMessage?welcomeMessage:getDefaultWelcomeMessage(isRehire)}function saveWizardData(data){function notifyBuddy(){if(!savedBuddy||savedBuddy.aoid!==selectedBuddy.aoid)return selectedBuddy.notifyOfBuddy(onboarder)}var onboarder=new Employee({aoid:selectedAOID}),saveBuddyPromise=$q.when(),notifyBuddyPromise=$q.when();return selectedBuddy?(saveBuddyPromise=onboarder.saveBuddy(selectedBuddy),notifyBuddyPromise=saveBuddyPromise.then(notifyBuddy)):saveBuddyPromise=onboarder.unassignBuddy(),$q.all({welcomeMessage:catchErrorsForPromise(WelcomeMessageService.saveWelcomeMessage(selectedAOID,data.welcomeMessage)),saveTeam:catchErrorsForPromise(data.team.save()),saveBuddy:catchErrorsForPromise(saveBuddyPromise),notifyBuddy:catchErrorsForPromise(notifyBuddyPromise)}).then(function(result){
var allSucceeded=_.chain(result).pluck("success").every().value();return{success:allSucceeded,welcomeMessage:result.welcomeMessage,saveTeam:result.saveTeam,saveBuddy:result.saveBuddy,notifyBuddy:result.notifyBuddy}})}function userHasProperExemptionStatusForTeamStep(){function isWorkerExempt(worker){var code=_.get(worker,"workAssignments[0].wageLawCoverage.coverageCode.codeValue");return"N"!==code}var config={href:"/hr/v2/workers/"+selectedAOID,workflowEnabled:!0,masked:!1},workerService=new WorkerService(config),workerProfilePromise=workerService.get(),getTemplatePromise=TemplateService.getUnfilteredTemplate();return $q.all({template:getTemplatePromise,workerProfile:workerProfilePromise}).then(function(results){var template=results.template,teamStep=_.find(template.pages,function(page){return"team"===page.key}),tags=teamStep&&teamStep.tags||[];return isWorkerExempt(results.workerProfile)?_.includes(tags,"exempt"):_.includes(tags,"nonexempt")})}var savedBuddy,selectedBuddy,saveStarted=!1,saveComplete=!1;return $q.all({welcomeMessage:WelcomeMessageService.getWelcomeMessage(selectedAOID,!0),hasWelcomeMessage:WelcomeMessageService.hasWelcomeMessage(selectedAOID),team:TeamService.getOnboardingTeamForManager(selectedAOID),buddyAoid:SocialRelationshipsService.getOnboardingBuddyFor(selectedAOID),teamStepPotentiallyVisible:userHasProperExemptionStatusForTeamStep(),isRehire:StartDateService.isRehire(selectedAOID)}).then(handleSuccess)}function catchErrorsForPromise(promise){return promise.then(function(successValue){return{success:!0,value:successValue}},function(errorValue){return{success:!1,error:errorValue}})}return{getInitialPagesAndData:getInitialPagesAndData}}]),angular.module("redbox.connections.newhires").factory("redbox.connections.newhires.NewhiresService",["$q","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserIdentityService","redbox.connections.search.EmployeeSearchService","redbox.onboarding.common.StartDateService","redbox.onboarding.steps.welcome.WelcomeMessageService","redbox.onboarding.team.EmployeeService",function($q,LoggerFactory,UserIdentity,EmployeeSearchService,StartDateService,WelcomeMessageService,Employee){function getMyOnboarders(){return getTeamForManager().then(function(employees){return $q.all(_.map(employees,populateEmployeeOnboardingInformation))}).then(function(employees){return _.chain(employees).filter(function(employee){return employee.daysUntilStart>-8}).sortBy("daysUntilStart").value()})}function catchErrors(promise){return promise.then(function(success){return{success:!0,result:success}},function(err){return{success:!1,error:err}})}function getTeamForManager(force){return teamForManagerPromise&&!force||(teamForManagerPromise=UserIdentity.getAoid().then(EmployeeSearchService.getTeamForManager).then(function(team){return $q.all(_.map(team.employees,function(employee){return new Employee(employee)}))})),teamForManagerPromise}function setSelectedNewHire(aoid){return getTeamForManager().then(function(employees){var newHire=_.find(employees,{aoid:aoid});return selectedNewHire={aoid:newHire.aoid,name:newHire.attrs.name},selectedNewHire.aoid&&selectedNewHire.name&&$q.when(selectedNewHire)||$q.reject()}).catch(function(err){return logger.info("Error occurred attempting to retrieve team for manager: "+err),$q.reject(err)})}function getSelectedNewHire(){return selectedNewHire}function populateEmployeeOnboardingInformation(employee){return $q.all({daysUntilStart:catchErrors(StartDateService.getDaysUntilStart(employee.aoid,{isManager:!0})),startDate:catchErrors(StartDateService.getFormattedStartDate(employee.aoid,{isManager:!0})),isRehire:catchErrors(StartDateService.isRehire(employee.aoid)),hasWelcomeMessage:catchErrors(WelcomeMessageService.hasWelcomeMessage(employee.aoid,!0))}).then(function(results){return employee.daysUntilStart=results.daysUntilStart.result,employee.startDate=results.startDate.result,employee.isRehire=results.isRehire.result,employee.hasWelcomeMessage=results.hasWelcomeMessage.success&&results.hasWelcomeMessage.result,employee})}var teamForManagerPromise,selectedNewHire={},logger=LoggerFactory.getLogger("redbox.connections.newhires.NewhiresService");return{getMyOnboarders:getMyOnboarders,getTeamForManager:getTeamForManager,setSelectedNewHire:setSelectedNewHire,getSelectedNewHire:getSelectedNewHire,populateEmployeeOnboardingInformation:populateEmployeeOnboardingInformation}}]),angular.module("redbox.connections.newhires").factory("redbox.connections.newhires.NewhiresValidationService",[function(){function isOverCharLimit(data,limit){var el=angular.element("<div>"+data+"</div>");return el.text().length>limit}return{isOverCharLimit:isOverCharLimit}}]),angular.module("redbox.connections").directive("adpOrgChart",["$rootScope",function($rootScope){return{restrict:"E",controller:"redbox.connections.directives.OrgChartCtrl",controllerAs:"orgChartCtrl",bindToController:!0,templateUrl:"app/connections/modules/orgchart/views/org-chart-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.directives.OrgChartCtrl",["$injector",function($injector){function updateTierTwo(){vm.tierTwo[1]=vm.peers.visible[0],vm.tierTwo[3]=vm.peers.visible[1],vm.tierTwo[0]=vm.peers.visible[2],vm.tierTwo[4]=vm.peers.visible[3],vm.tierTwo[0].person?(vm.tierTwo[0].connector={lRight:!0},vm.tierTwo[1].person&&(vm.tierTwo[1].connector={t:!0})):vm.tierTwo[1].person&&(vm.tierTwo[1].connector={lRight:!0}),vm.tierTwo[4].person?(vm.tierTwo[4].connector={lLeft:!0},vm.tierTwo[3].person&&(vm.tierTwo[3].connector={t:!0})):vm.tierTwo[3].person&&(vm.tierTwo[3].connector={lLeft:!0}),vm.tierTwo[1].person&&vm.tierTwo[3].person&&vm.tierTwo[2].person?vm.tierTwo[2].connector={t:!0}:vm.tierTwo[1].person&&vm.tierTwo[2].person?vm.tierTwo[2].connector={lLeft:!0}:vm.tierTwo[3].person&&vm.tierTwo[2].person&&(vm.tierTwo[2].connector={lRight:!0})}function updateTierThree(){vm.tierThree[2]=vm.children.visible[0],vm.tierThree[1]=vm.children.visible[1],vm.tierThree[3]=vm.children.visible[2],vm.tierThree[0]=vm.children.visible[3],vm.tierThree[4]=vm.children.visible[4],vm.tierThree[0].person?(vm.tierThree[0].connector={lRight:!0},vm.tierThree[1].person&&(vm.tierThree[1].connector={t:!0})):vm.tierThree[1].person&&(vm.tierThree[1].connector={lRight:!0}),vm.tierThree[4].person?(vm.tierThree[4].connector={lLeft:!0},vm.tierThree[3].person&&(vm.tierThree[3].connector={t:!0})):vm.tierThree[3].person&&(vm.tierThree[3].connector={lLeft:!0}),vm.tierThree[1].person&&vm.tierThree[3].person&&vm.tierThree[2].person?vm.tierThree[2].connector={t:!0}:vm.tierThree[1].person&&vm.tierThree[2].person?vm.tierThree[2].connector={lLeft:!0}:vm.tierThree[3].person&&vm.tierThree[2].person&&(vm.tierThree[2].connector={lRight:!0})}var OrgChartService=$injector.get("redbox.connections.OrgChartService"),UserIdentity=$injector.get("redbox.ext.shared.services.UserIdentityService"),$q=$injector.get("$q"),$location=$injector.get("$location"),$state=$injector.get("$state"),$stateParams=$injector.get("$stateParams"),vm=this;vm.loading=!0,vm.resultNotFound=!1,vm.orgchart={loading:!0},vm.children={visible:[],currentPage:0,pageSize:5},vm.peers={visible:[],currentPage:0,pageSize:4},vm.tierTwo=[{},{},{},{},{}],vm.tierThree=[{},{},{},{},{}],vm.showPage=function(index,tier){var start=(index-1)*vm[tier].pageSize;vm[tier].visible.length=0;for(var i=0;i<vm[tier].pageSize;i++)vm.orgchart[tier].length>start+i?vm[tier].visible.push(vm.orgchart[tier][start+i]):vm[tier].visible.push({});"peers"===tier?updateTierTwo():updateTierThree()},vm.showPreviousPage=function(tier){vm[tier].numberOfPages>1&&(1===vm[tier].currentPage?vm[tier].currentPage=vm[tier].numberOfPages:vm[tier].currentPage--,vm.showPage(vm[tier].currentPage,tier)),"peers"===tier&&updateTierTwo()},vm.showNextPage=function(tier){vm[tier].numberOfPages>1&&(vm[tier].currentPage===vm[tier].numberOfPages?vm[tier].currentPage=1:vm[tier].currentPage++,vm.showPage(vm[tier].currentPage,tier))},vm.getChildCount=function(node){var count="0";return node&&node.children&&(count=node.children.length<100?node.children.length.toString():"99+"),count},vm.openWorkerProfile=function(person){person.aoid&&!person.isTerminated&&$location.path("/profile/"+person.aoid)},vm.openOrgChart=function(aoid){vm.associateOID!==aoid&&$state.go("connections.orgchart",{associateOID:aoid},{reload:!0})};var getOrgChart=function(aoid){return OrgChartService.getOrgChart({aoid:aoid})};$q.when($stateParams.associateOID||UserIdentity.getAoid()).then(function(aoid){vm.associateOID=aoid,getOrgChart(vm.associateOID).then(function(orgChartResult){vm.orgchart=orgChartResult,vm.tierTwo[2]={person:{name:vm.orgchart.person.value,aoid:vm.orgchart.person.aoid,isTerminated:vm.orgchart.person.isTerminated},position:{name:vm.orgchart.position.value},department:vm.orgchart.position.department,children:vm.orgchart.children},_.get(vm,"orgchart.children[0].person.aoid")?(vm.children.numberOfPages=Math.ceil(vm.orgchart.children.length/vm.children.pageSize),vm.children.currentPage=1,vm.showPage(vm.children.currentPage,"children")):(vm.orgchart.children=[],vm.children.numberOfPages=0,vm.children.visible.length=0),vm.orgchart&&vm.orgchart.parent&&vm.orgchart.parent.person&&vm.orgchart.parent.person.aoid?getOrgChart(vm.orgchart.parent.person.aoid).then(function(resultParent){if(resultParent&&resultParent.person)if(vm.orgchart.parent=angular.copy(resultParent),resultParent.children&&resultParent.children.length>0){for(var i=resultParent.children.length;i--;)if(vm.associateOID===resultParent.children[i].person.aoid){resultParent.children.splice(i,1);break}_.get(resultParent,"children[0].person.aoid")?(vm.orgchart.peers=resultParent.children,vm.peers.numberOfPages=Math.ceil(resultParent.children.length/vm.peers.pageSize),vm.peers.currentPage=1,vm.showPage(vm.peers.currentPage,"peers")):(vm.orgchart.peers=[],vm.peers.numberOfPages=0,vm.peers.visible.length=0)}else vm.peers.numberOfPages=0,vm.peers.visible.length=0}).finally(function(){vm.loading=!1}):vm.loading=!1},function(){vm.resultNotFound=!0,vm.loading=!1})})}]),angular.module("redbox.connections").directive("adpOrgChartTile",["$rootScope",function($rootScope){return{scope:{worker:"&"},restrict:"E",controller:"redbox.connections.directives.OrgChartTileCtrl",controllerAs:"orgChartTileCtrl",bindToController:!0,templateUrl:"app/connections/modules/orgchart/views/org-chart-tile-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.directives.OrgChartTileCtrl",["$scope","$injector",function($scope,$injector){var OrgChartService=$injector.get("redbox.connections.OrgChartService"),UserIdentity=$injector.get("redbox.ext.shared.services.UserIdentityService"),$q=$injector.get("$q"),$location=$injector.get("$location"),$state=$injector.get("$state"),$stateParams=$injector.get("$stateParams"),vm=this;vm.orgchart={loading:!0},vm.visibleChildren=[],vm.currentPage=0,vm.pageSize=3,vm.showPage=function(index){var start=(index-1)*vm.pageSize;vm.visibleChildren.length=0;for(var i=0;i<vm.pageSize;i++)vm.orgchart.children.length>start+i&&vm.visibleChildren.push(vm.orgchart.children[start+i])},vm.showPreviousPage=function(){vm.numberOfPages>1&&(1===vm.currentPage?vm.currentPage=vm.numberOfPages:vm.currentPage--,vm.showPage(vm.currentPage))},vm.showNextPage=function(){vm.numberOfPages>1&&(vm.currentPage===vm.numberOfPages?vm.currentPage=1:vm.currentPage++,vm.showPage(vm.currentPage))},vm.openWorkerProfile=function(person){person&&person.aoid&&!person.isTerminated&&($location.path().indexOf("/profile/")!==-1?$state.go("profile.view",{associateOID:person.aoid},{reload:!0}):$location.path("/profile/"+person.aoid))},vm.goToOrgChart=function(){$location.path("/connections/orgchart/"+vm.worker().associateOID)};var getOrgChart=function(){$q.when(vm.worker()&&vm.worker().associateOID||$stateParams.associateOID||UserIdentity.getAoid()).then(function(aoid){vm.associateOID=aoid,OrgChartService.getOrgChart({mini:!0,aoid:vm.associateOID}).then(function(result){vm.orgchart=result,vm.orgchart&&vm.orgchart.children&&vm.orgchart.children.length>0?vm.orgchart.children[0].person&&vm.orgchart.children[0].person.aoid?(vm.numberOfPages=Math.ceil(vm.orgchart.children.length/vm.pageSize),vm.currentPage=1,vm.showPage(vm.currentPage)):(vm.orgchart.children.length=0,vm.numberOfPages=0,vm.visibleChildren.length=0):(vm.numberOfPages=0,vm.visibleChildren.length=0)},function(){vm.orgchart.error=!0}).finally(function(){vm.orgchart.loading=!1,$scope.$emit("showMe")})})};getOrgChart()}]);angular.module("redbox.connections").factory("redbox.connections.OrgChartService",["$injector",function($injector){var $http=$injector.get("$http"),$q=$injector.get("$q"),$window=$injector.get("$window"),ORGCHART_SERVICE_URI="/core/v1/flex-graphs/org-hierarchies/redbox/{associateoid}",isTerminated=function(person){var endDate,today;return!!(person&&person.hasOwnProperty("effectiveEndDate")&&person.effectiveEndDate&&$window.moment(person.effectiveEndDate).isValid()&&(endDate=$window.moment(person.effectiveEndDate),today=$window.moment(),today>endDate))},hasChildren=function(person){var childCount=0;return _.get(person,"children[0].person.aoid")&&(childCount=person.children.length),childCount>0},removeTerminated=function(nodes){var i;for(i=nodes.length-1;i>=0;i--)nodes[i].person.isTerminated=isTerminated(nodes[i].person),hasChildren(nodes[i])&&removeTerminated(nodes[i].children),nodes[i].person.isTerminated&&!hasChildren(hasChildren(nodes[i]))&&nodes.splice(i,1)},API={getOrgChart:function(aoid){var deferred=$q.defer(),configuration={cache:!0},URL="";return aoid?(URL=ORGCHART_SERVICE_URI.replace("{associateoid}",aoid),$http.get(URL,configuration).then(function(results){results.data&&(results.data.person&&(results.data.person.isTerminated=isTerminated(results.data.person)),results.data.parent&&results.data.parent.person&&results.data.parent.person.aoid&&(results.data.parent.person.isTerminated=isTerminated(results.data.parent.person)),removeTerminated(results.data.children),!hasChildren(results.data)&&results.data.person.isTerminated&&deferred.reject("Request for inactive worker with no direct reports")),deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)})):deferred.reject("Missing aoid parameter"),deferred.promise}};return{getOrgChart:function(config){return API.getOrgChart(config.aoid)}}}]);angular.module("redbox.connections").controller("redbox.connections.PromotionCardCtrl",["$scope",function($scope){var stepIndex=0,actionSteps=["reason","effective-date","position","pay"];$scope.actionStep=actionSteps[stepIndex],$scope.startAction=function(){stepIndex=0,$scope.actionStep=actionSteps[stepIndex]},$scope.nextStep=function(){stepIndex<=actionSteps.length&&stepIndex++,$scope.actionStep=actionSteps[stepIndex]}}]),angular.module("redbox.connections.search").constant("redbox.connections.search.CONSTANTS_SEARCH",{MINIMUM_LENGTH:2}).controller("redbox.connections.search.EmployeeSearchCtrl",["$scope","$sce","$filter","$timeout","$location","$state","adp.ng.utilities.ClientDeviceService","redbox.connections.search.EmployeeSearchService","redbox.connections.DirectoryService","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant","redbox.connections.search.CONSTANTS_SEARCH",function($scope,$sce,$filter,$timeout,$location,$state,clientDeviceService,EmployeeSearchService,DirectoryService,UserPermissionService,SFFO,CONSTANTS_SEARCH){var MAX_SEARCH_RESULTS=clientDeviceService.isMobile()?3:5,vm=this,warmupCalled=!1;vm.query="",vm.searchResult={},vm.location="",vm.department="",vm.matches=0,vm.noMatchesFound=!1,vm.showLastResults=!0,vm.config={loading:!1,error:!1,inputInterval:500},vm.onInputClick=function(){vm.config.error=!1,vm.config.inputTimer&&$timeout.cancel(vm.config.inputTimer),vm.config.inputTimer=$timeout(function(){if(0===vm.query.length){vm.noMatchesFound=!1,vm.showLastResults=!0,warmupCalled||EmployeeSearchService.warmup().then(function(){warmupCalled=!0});var queryObject={query:"",additionalSearchParams:[]};EmployeeSearchService.getSearchResults({queryObject:queryObject,count:MAX_SEARCH_RESULTS}).then(function(data){if(data&&0!==Object.keys(data).length){vm.searchResult.employees=data.employees,data.pages&&data.pages.length>0&&(vm.searchResult.pages=data.pages);for(var i=0;i<vm.searchResult.employees.length;i++)vm.searchResult.employees[i].name=$filter("htmlToPlaintext")(vm.searchResult.employees[i].name),vm.searchResult.employees[i].title=$filter("htmlToPlaintext")(vm.searchResult.employees[i].title);data.facets?(vm.location=data.facets.locations[0].label,vm.department=data.facets.departments[0].label):(vm.location=void 0,vm.department=void 0),vm.matches=data.matches,showLastResults()}else showNoMatches()},function(){showNoMatches()})}else showSearchResults()},vm.config.inputInterval)},vm.onClearSearchClick=function(){vm.query="",vm.config.error=!1,EmployeeSearchService.hideClearButton(),EmployeeSearchService.hideDropdownMenu()},vm.onQueryChange=function(){vm.config.error=!1,vm.query.length>=CONSTANTS_SEARCH.MINIMUM_LENGTH?(vm.noMatchesFound=!1,vm.showLastResults=!1,vm.config.inputTimer&&$timeout.cancel(vm.config.inputTimer),vm.config.inputTimer=$timeout(function(){var queryObject={query:vm.query,additionalSearchParams:[]};EmployeeSearchService.getSearchResults({queryObject:queryObject,count:MAX_SEARCH_RESULTS}).then(function(data){data&&(0!==data.employees.length||data.pages&&0!==data.pages.length)?(vm.searchResult.employees=data.employees,data.facets?(vm.location=data.facets.locations[0].label,vm.department=data.facets.departments[0].label):(vm.location=void 0,vm.department=void 0),vm.matches=data.matches,data.pages&&data.pages.length>0?vm.searchResult.pages=data.pages:vm.searchResult.pages=void 0,showSearchResults()):showNoMatches()},function(){})},vm.config.inputInterval)):EmployeeSearchService.hideDropdownMenu()},vm.openPage=function(page){"/profile"===page.location?$location.path("/profile/"):$location.path(page.location),EmployeeSearchService.hideDropdownMenu()},vm.renderHtml=function(value){return $sce.trustAsHtml(value)};var showNoMatches=function(){vm.showNoMatchesFound=!0,vm.showLastResults=!1,EmployeeSearchService.showDropdownMenu()},showLastResults=function(){vm.showNoMatchesFound=!1,vm.showLastResults=!0,EmployeeSearchService.showDropdownMenu()},showSearchResults=function(){vm.showNoMatchesFound=!1,vm.showLastResults=!1,EmployeeSearchService.showDropdownMenu()};vm.openWorkerProfile=function(worker){worker&&(EmployeeSearchService.clickHistory(worker),$location.path().indexOf("/profile/")!==-1?$state.go("profile.view",{associateOID:worker.aoid},{reload:!0}):$location.path("/profile/"+worker.aoid),EmployeeSearchService.hideDropdownMenu())},vm.openOrgChart=function(aoid){vm.hasOrgChart&&($location.path().indexOf("/connections/orgchart")!==-1?$state.go("connections.orgchart",{associateOID:aoid},{reload:!0}):$location.path("/connections/orgchart/"+aoid),EmployeeSearchService.hideDropdownMenu())},vm.preloadDirectory=function(){DirectoryService.query.value=vm.query,DirectoryService.clearFilters(),"/connections/directory"===$location.path()?$scope.$broadcast("directory-refresh"):$location.path("/connections/directory")},UserPermissionService.init().then(function(){vm.hasOrgChart=UserPermissionService.hasPermission(SFFO.enterpriseInformationManagement.flexGraphManagement.hierarchyViewing)})}]),angular.module("redbox.connections.search").controller("redbox.connections.search.MyTeamTileCtrl",["$scope","$location","redbox.connections.search.EmployeeSearchService","redbox.connections.DirectoryService","redbox.ext.shared.services.UserIdentityService","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant",function($scope,$location,EmployeeSearchService,DirectoryService,UserIdentity,UserPermissionService,SFFO){var self=this,showYourTeam=!1;self.config={clazz:["my-team-1","my-team-2","my-team-3","my-team-4","my-team-5","my-team-6"],clazzFour:["my-team-four-1","my-team-four-2","my-team-four-3","my-team-four-4"],clazzThree:["my-team-three-1","my-team-three-2","my-team-three-3"]},self.openWorkerProfile=function(worker){worker&&(EmployeeSearchService.clickHistory(worker),$location.path("/profile/"+worker.aoid))},UserPermissionService.init().then(function(){showYourTeam=UserPermissionService.hasPermission(SFFO.userManagement.userLogin.userAuthorization.object_entitle)}),self.loadTeamOrDirectory=function(){showYourTeam?$location.path("/connections"):(DirectoryService.query={value:"",offset:0,myteam:!0},DirectoryService.clearFilters(),"/connections/directory"===$location.path()?$scope.$broadcast("directory-refresh"):$location.path("/connections/directory"))},UserIdentity.getAoid().then(function(aoid){return EmployeeSearchService.getTeamForManager(aoid,6)}).then(function(team){self.team=team,team.employees&&team.employees.length>0&&$scope.$emit("showMe")})}]),angular.module("redbox.connections.search").directive("adpEmployeeSearch",["redbox.connections.search.EmployeeSearchService",function(EmployeeSearchService){return{restrict:"E",templateUrl:"app/connections/modules/search/views/employee-search-template.html",replace:!0,link:function(scope,element){element.find("input").bind("keyup",function(event){var text=angular.element(event.target).val();0===text.length?$(".employee-search-clear span").fadeOut("fast"):text.length>=1&&$(".employee-search-clear span").fadeIn("fast")}),$(document).bind("click",function(){EmployeeSearchService.hideDropdownMenu()}),$(document).bind("scroll",function(){EmployeeSearchService.hideDropdownMenu()})}}}]),angular.module("redbox.connections.search").factory("redbox.connections.search.EmployeeSearchService",["$http","$q","$injector","$timeout","$language","$rootScope","redbox.ext.shared.services.UserPermissionService",function($http,$q,$injector,$timeout,$language,$rootScope,UserPermission){var pages;$rootScope.$on("$languageChangeSuccess",function(){localizePageData()});var localizePageData=function(){var key;angular.forEach(pages,function(page){key="connections.SEARCH_PAGE_"+page.id.toUpperCase()+"_",page.title=$language.get(key+"TITLE"),page.desc=$language.get(key+"DESC"),page.tags=$language.get(key+"TAGS").split(",")})},getPages=function(){return $http.get("app/connections/modules/search/pages.json").then(function(results){return UserPermission.init().then(function(){return UserPermission.filterListByPermissions(results.data.list?results.data.list:[])})}).catch(function(){return[]})},getOnboardingPages=function(){return UserPermission.init().then(function(){if(UserPermission.hasOnboarding()){var OnboardingService=$injector.get("redbox.onboarding.common.OnboardingService");return OnboardingService.isOnboarding().then(function(isOnboarding){return isOnboarding?$http.get("app/connections/modules/search/pages-onboarding.json").then(function(results){return filterOnboardingPages(results.data?results.data:[])}):[]})}return[]}).catch(function(){return[]})},filterOnboardingPages=function(onboardingPages){var TemplateService=$injector.get("redbox.onboarding.template.TemplateService");return TemplateService.getTemplate().then(function(templatePages){var filteredOnboardingPages=onboardingPages.filter(function(onboardingPage){return templatePages.pages.some(function(templatePage){return onboardingPage.id.replace("onboarding_","")===templatePage.key})});return _.isEmpty(filteredOnboardingPages)||filteredOnboardingPages.unshift(_.find(onboardingPages,{id:"onboarding"})),filteredOnboardingPages})},API={getFormattedResults:function(data,count){var employees=[],facets={departments:[],locations:[]};try{var workerGroup=this.getGroupByValue(data,"W");if(workerGroup)for(var i=0;i<workerGroup.docs.length&&i!==count;i++){var worker=workerGroup.docs[i],workerAPIUri=worker.r_sv_uri.split("/"),aoid=workerAPIUri[workerAPIUri.length-1],employee={uuid:worker.id_UUID,aoid:aoid,name:worker.sr_sv_workerLegalFullName,title:"",phone:"",email:"",reportsTo:"",department:"",location:"",employeeId:worker.sr_sv_workerID};worker.sr_mv_workerJobPositionTitle&&(employee.title=worker.sr_mv_workerJobPositionTitle[0]),worker.r_mv_workerBusinessLandline&&(employee.phone=worker.r_mv_workerBusinessLandline[0]),worker.r_mv_workerBusinessEmail&&(employee.email=worker.r_mv_workerBusinessEmail[0]),worker.sr_sv_workerJobPositionReportingManagerFullName&&(employee.reportsTo=worker.sr_sv_workerJobPositionReportingManagerFullName),worker.sr_mv_workerAssignedOrgUnitNameLong&&(employee.department=worker.sr_mv_workerAssignedOrgUnitNameLong[0]),worker.sr_mv_workerAssignedWorkCityCountrySubdivision&&(employee.location=worker.sr_mv_workerAssignedWorkCityCountrySubdivision[0]),employees.push(employee)}if(data.facets){if(data.facets.f_mv_workerAssignedWorkCityCountrySubdivision)for(var loc in data.facets.f_mv_workerAssignedWorkCityCountrySubdivision)data.facets.f_mv_workerAssignedWorkCityCountrySubdivision.hasOwnProperty(loc)&&facets.locations.push({label:loc,count:data.facets.f_mv_workerAssignedWorkCityCountrySubdivision[loc]});if(data.facets.f_mv_workerAssignedOrgUnitNameLong)for(var dept in data.facets.f_mv_workerAssignedOrgUnitNameLong)data.facets.f_mv_workerAssignedOrgUnitNameLong.hasOwnProperty(dept)&&facets.departments.push({label:dept,count:data.facets.f_mv_workerAssignedOrgUnitNameLong[dept]})}var results={employees:employees,matches:workerGroup?workerGroup.numFound:0};return data.pages&&data.pages.length>0&&(results.pages=data.pages),(facets.departments.length>0||facets.locations.length>0)&&(results.facets=facets),results}catch(err){}},getGroupByValue:function(data,value){try{for(var groups=data.grouped.id_type.groups,i=0;i<groups.length;i++)if(groups[i].groupValue===value)return groups[i].doclist}catch(err){}return null},getPermittedPages:function(){return pages?$q.when(pages):$q.all({pages:getPages(),onboardingPages:getOnboardingPages()}).then(function(results){return pages=results.pages.concat(results.onboardingPages),localizePageData(),pages})},queryPages:function(query,allPages){var score,hits=[];return angular.forEach(allPages,function(page){score=0,angular.forEach(page.tags,function(tag){query.toLowerCase().indexOf(tag.toLowerCase())!==-1&&score++}),score>0&&hits.push(page)}),hits}};return{getGroupByValue:function(data,value){return API.getGroupByValue(data,value)},getSearchResults:function(config){var offset=config.queryObject.offset||0,query=config.queryObject.query||"",sort=config.queryObject.sort,include=config.queryObject.include||void 0,excludeWildcard=config.queryObject.excludeWildcard||!1,searchType=config.queryObject.searchType||"instant",searchParams={};searchParams.q=query,excludeWildcard||"instant"===searchType||(searchParams.q+="*"),searchParams.q.length>0&&(searchParams.documentType="W"),searchParams.locale="en-US",searchParams.resultSize=config.count,searchParams.offset=offset,searchType&&(searchParams.searchType=searchType),include&&(searchParams.include=include),sort&&(searchParams.sort=sort);var additionalSearchParams=config.queryObject.additionalSearchParams;if(void 0!==additionalSearchParams)for(var l=additionalSearchParams.length,i=0;i<l;i++)searchParams[additionalSearchParams[i].name]=additionalSearchParams[i].value;var configuration={params:searchParams,headers:{"loading-indicator":!1}};return $q.all({search:$http.get("/core/v1/search",configuration),pages:API.getPermittedPages()}).then(function(results){var mixedSearchResults=results.search.data,pageResults=query&&query.length>0?API.queryPages(query,results.pages):[];return _.isEmpty(pageResults)||(mixedSearchResults.pages=pageResults),config.raw?mixedSearchResults:API.getFormattedResults(mixedSearchResults,config.count)})},warmup:function(){var deferred=$q.defer(),promise=deferred.promise;return $http.get("/core/v1/search/warmup").then(function(){deferred.resolve([])}).catch(function(error){deferred.reject(error.data)}),promise},clickHistory:function(employee){var data;employee&&employee.uuid&&(data={id_UUID:employee.uuid},$http.post("/core/v1/search/click",data))},showDropdownMenu:function(){$timeout(function(){$(".search-result-dropdown").show()})},hideDropdownMenu:function(){$(".search-result-dropdown").hide()},isDropdownMenuHidden:function(){return"none"===$(".search-result-dropdown").css("display")},hideClearButton:function(){$(".employee-search-clear span").fadeOut("fast")},getTeamForManager:function(aoid,maxResults){var deferred=$q.defer(),promise=deferred.promise,searchParams={q:"id_reportingManagerAssociateOID:"+aoid,documentType:"W",locale:"en-US",resultSize:angular.isDefined(maxResults)?maxResults:100,offset:0,searchType:"advance"},configuration={params:searchParams,headers:{"loading-indicator":!1}};return $http.get("/core/v1/search",configuration).then(function(results){deferred.resolve(API.getFormattedResults(results.data,searchParams.resultSize))}).catch(function(error){deferred.reject(error.data)}),promise}}}]),function(){function adpWorkerCustomField($injector){function controller($scope){function showAlert(type,msg){vm.alert={},$timeout(function(){vm.alert={show:!0,type:type,msg:msg}})}var $filter=$injector.get("$filter"),WORKFLOW_CONSTANT=$injector.get("redbox.workflow.CONSTANTS"),$http=$injector.get("$http"),$timeout=$injector.get("$timeout"),UserIdentityService=$injector.get("redbox.ext.shared.services.UserIdentityService"),CustomFieldPermissionService=$injector.get("redbox.connections.worker.CustomFieldPermissionService"),vm=this;vm.state="view",vm.formModel="",UserIdentityService.getAoid().then(function(aoid){vm.userOID=aoid}),CustomFieldPermissionService.canEdit(vm.fieldData).then(function(canEdit){vm.canEdit=canEdit}),vm.getDisplayValue=function(value){var displayVal=_.isUndefined(value)?"":value;return"dateFields"===vm.fieldData.dataGroupType&&displayVal&&(displayVal=$filter("amDateFormat")(displayVal,"ll")),displayVal},vm.isBlank=function(){var val=vm.fieldData.value;return!_.isNumber(val)&&_.isEmpty(val)},vm.isReadOnly=function(){return vm.readOnly},vm.edit=function(){vm.isEditing=!0},vm.cancelCustomFieldChangeRequest=function(){var payload={},recallUrl=WORKFLOW_CONSTANT.WORKER_WF_RECALL_URL.replace("/{operation}",vm.fieldData.eventUri);_.set(payload,WORKFLOW_CONSTANT.WORKER_WF_RECALL_PAYLOAD,vm.fieldData.associateOID),vm.isLoading=!0,$http.post(recallUrl,payload).then(function(res){$scope.$emit("adp-cdf-form-success",{result:res}),showAlert("warning",$scope.lang.connections.PROFILE_REQUEST_CANCELLED)}).catch(function(err){showAlert("error",$scope.lang.shared.OOPS_SOMETHING)}).finally(function(){vm.isLoading=!1})}}function link(scope){var $rootScope=$injector.get("$rootScope");scope.lang=$rootScope.lang}return{scope:{fieldData:"=",readOnly:"="},restrict:"E",controller:["$scope",controller],controllerAs:"customFieldCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/custom-field.html",link:link}}angular.module("redbox.connections.worker").directive("adpWorkerCustomField",adpWorkerCustomField),adpWorkerCustomField.$inject=["$injector"]}(),function(){function adpWorkerCustomFieldForm($injector){function controller($scope){function postForm(isManager){var postValue=_.isUndefined(vm.formModel)?"":vm.formModel,payload={},config={},url=vm.fieldData.eventUri;url="person"===vm.fieldData.groupType?"/wf"+url:url,isManager&&(config.headers={rolecode:Role.MANAGER}),vm.isFieldType("date")&&postValue.format&&(postValue=postValue.format(CUSTOM_FIELD_DATE_FORMAT)),_.set(payload,"events[0].data.eventContext.worker.associateOID",vm.fieldData.associateOID),_.set(payload,"events[0].data.eventContext"+vm.fieldData.eventCtxPath,vm.fieldData.itemID),_.set(payload,"events[0].data.transform"+vm.fieldData.transformPath,postValue),vm.isLoading=!0,$http.post(url,payload,config).then(function(res){vm.isLoading=!1,vm.state="hide",res.data.wfStatusCode||(vm.fieldData.value=vm.formModel,showAlert("success",$scope.lang.connections.PROFILE_SAVED)),$scope.$emit("adp-cdf-form-success",{result:res})},function(err){vm.isLoading=!1,
vm.state="hide",showAlert("error",$scope.lang.shared.OOPS_SOMETHING),$scope.$emit("adp-cdf-form-error",{result:err})})}function showAlert(type,msg){vm.alert={},$timeout(function(){vm.alert={show:!0,type:type,msg:msg,onClose:function(){vm.hideForm()}}})}var $http=$injector.get("$http"),$timeout=$injector.get("$timeout"),CustomFieldParser=$injector.get("redbox.connections.worker.CustomFieldParserService"),ObjectEntitlementsService=$injector.get("redbox.ext.shared.services.ObjectEntitlementsService"),UserIdentityService=$injector.get("redbox.ext.shared.services.UserIdentityService"),Role=$injector.get("redbox.ext.shared.constants.Role"),CUSTOM_FIELD_DATE_FORMAT=$injector.get("redbox.connections.worker.CustomFieldConstant").CUSTOM_FIELD_DATE_FORMAT,vm=this;vm.isFormValid=!0,vm.loadFormMeta=function(){var url=vm.fieldData.eventUri+"/meta";vm.metaCached?(vm.formModel=vm.isFieldType("date")?moment(vm.fieldData.value):vm.fieldData.value,vm.state="edit"):(vm.isLoading=!0,$http.get(url).then(function(res){vm.metaCached=!0,vm.isLoading=!1,CustomFieldParser.parseFieldMeta(vm.fieldData,res.data.meta),vm.formModel=vm.isFieldType("date")?moment(vm.fieldData.value):vm.fieldData.value,vm.state="edit"},function(err){vm.isLoading=!1,showAlert("error",$scope.lang.shared.OOPS_SOMETHING)}))},vm.hideForm=function(){vm.state="hide",vm.alert={},vm.showForm=!1},vm.getDisableStatus=function(){var _formModel=_.isUndefined(vm.formModel)?"":vm.formModel,disabled=!0;if(vm.isFieldType("date")){var currentDateObj=moment(vm.fieldData.value),selectedDateObj=_formModel.format?_formModel:moment(_formModel);disabled=selectedDateObj.format(CUSTOM_FIELD_DATE_FORMAT)===currentDateObj.format(CUSTOM_FIELD_DATE_FORMAT)}else disabled=_formModel===vm.fieldData.value;return disabled||!vm.isFormValid},vm.save=function(){UserIdentityService.getAoid().then(function(aoid){aoid===vm.fieldData.associateOID?postForm(!1):ObjectEntitlementsService.getManagerEntitlements().then(function(){ObjectEntitlementsService.verifyManagerEntitlements(vm.fieldData.associateOID)?postForm(!0):showAlert("error",$scope.lang.shared.OOPS_SOMETHING)})})},vm.onValidate=function(validationResult){vm.isFormValid=validationResult.isValid},vm.isFieldType=function(type){switch(type){case"text":return"stringFields"===vm.fieldData.dataGroupType&&!vm.fieldData.valueSet;case"select":return"stringFields"===vm.fieldData.dataGroupType&&vm.fieldData.valueSet;case"number":return"numberFields"===vm.fieldData.dataGroupType;case"date":return"dateFields"===vm.fieldData.dataGroupType;default:return!1}},$scope.$watch("customFieldFormCtrl.showForm",function(show){show&&vm.loadFormMeta()})}function link(scope){var $rootScope=$injector.get("$rootScope");scope.lang=$rootScope.lang}return{scope:{fieldData:"=",showForm:"="},restrict:"E",controller:["$scope",controller],controllerAs:"customFieldFormCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/custom-field-form.html",link:link}}angular.module("redbox.connections.worker").directive("adpWorkerCustomFieldForm",adpWorkerCustomFieldForm),adpWorkerCustomFieldForm.$inject=["$injector"]}(),function(){function adpWorkerCustomFieldGroup(){function controller(){var vm=this;vm.isReadOnly=function(){return vm.readOnly||vm.customFieldGroup.hasPendingEvent()}}return{scope:{customFieldGroup:"=",maxFields:"=?",readOnly:"=?"},restrict:"E",controller:["$scope",controller],controllerAs:"customFieldGroupCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/custom-field-group.html"}}angular.module("redbox.connections.worker").directive("adpWorkerCustomFieldGroup",adpWorkerCustomFieldGroup),adpWorkerCustomFieldGroup.$inject=["$injector"]}(),function(){angular.module("redbox.connections.worker").directive("customFieldsTilesAddInfo",["$rootScope",function($rootScope){return{restrict:"E",scope:{workerService:"="},controller:"redbox.connections.worker.directives.CustomFieldsTilesAddInfoCtrl",controllerAs:"customFieldsTilesAddInfoCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/custom-field-tile-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.CustomFieldsTilesAddInfoCtrl",["$scope","$injector",function($scope,$injector){var vm=this,FocusSlideInService=$injector.get("redbox.connections.worker.FocusSlideInService");vm.maxFieldLength=4,vm.customFieldGroup=vm.workerService.customFields.getFlatFieldGroup(),vm.originalFields=vm.customFieldGroup.fields,vm.remainingFieldCount=function(){var validFieldLength=_.get(vm,"customFieldGroup.fields.length",0),renderedFieldLength=validFieldLength>vm.maxFieldLength?vm.maxFieldLength:validFieldLength,totalFieldLength=_.get(vm,"originalFields.length",0);return totalFieldLength-renderedFieldLength},vm.showRemainingMessage=function(){return _.get(vm,"customFieldGroup.fields.length",0)>vm.maxFieldLength},vm.openSlideIn=function(){FocusSlideInService.openSlideIn("custom-field-slide-info",$scope)}}])}(),angular.module("redbox.connections.worker").directive("adpEmployeeTasksTile",["$rootScope",function($rootScope){return{scope:{},restrict:"E",controller:"redbox.connections.worker.TasksEmployeeCtrl",controllerAs:"tasksEmployeeCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/employee-approve-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.TasksEmployeeCtrl",["$scope","redbox.connections.worker.FocusSlideInService","redbox.ext.shared.services.UserIdentityService","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService","$stateParams",function($scope,FocusSlideInService,userIdentity,tasksService,portalMessagesService,$stateParams){var vm=this,associateOID=$stateParams.associateOID;vm.employeeTasks=[],vm.init=function(){userIdentity.getAoid().then(function(aoid){aoid!==associateOID&&portalMessagesService.getRedboxWorkflowTasksForEmployee(associateOID).then(function(tasks){_.isEmpty(tasks)||$scope.$emit("showMe")}).finally(function(){tasksService.init(!0,associateOID)})})},$scope.$watch(function(){return tasksService.taskData.tasks},function(tasks,previousTasks){vm.employeeTasks=tasks,previousTasks.length>=1&&0===vm.employeeTasks.length&&$scope.$emit("hideMe"),1===vm.employeeTasks.length&&1===vm.employeeTasks[0].count?(vm.singleItemUrl=vm.employeeTasks[0].singleItemUrl,vm.showSingleItem=!0):(vm.singleItemUrl="",vm.showSingleItem=!1)}),vm.openSlide=function(task){$scope.taskType=task.id,FocusSlideInService.openSlideIn("employee-tasks",$scope)},vm.init()}]),angular.module("redbox.connections.worker").directive("adpWhatIDoTile",["$rootScope",function($rootScope){return{scope:{worker:"&"},restrict:"E",controller:"redbox.connections.worker.directives.WhatIDoTileCtrl",controllerAs:"whatIDoTileCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/what-i-do-tile-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.WhatIDoTileCtrl",["$scope","$injector",function($scope,$injector){var naturalLanguageFormService=$injector.get("redbox.shared.services.NaturalLanguageFormService"),workerPermissionService=$injector.get("redbox.connections.worker.WorkerPermissionService"),UserPreferenceService=$injector.get("redbox.ext.shared.services.UserPreferenceService"),$language=$injector.get("$language"),$rootScope=$injector.get("$rootScope"),vm=this;vm.maxLengthExceeded=!1,vm.hasChanges=!1,vm.currentForm=0,vm.hasSelectedForm=!1,$scope.$on("form-max-length-update",function(event,args){"whatIDo"===args[0]&&(vm.maxLengthExceeded=args[1])}),$scope.$on("form-has-changes",function(event,args){"whatIDo"===args[0]&&(vm.hasChanges=args[1])}),$scope.$on("adp-focus-slide-in.open",function(){$rootScope.$broadcast("adp-natural-form.close-text-edit"),$rootScope.$broadcast("adp-natural-form.close-select-edit")}),vm.selectForm=function(index){vm.currentForm=index},vm.formChanged=function(value){vm.forms[vm.currentForm]=value},vm.saveWhatIDo=function(){naturalLanguageFormService.saveUserForm(vm.worker().associateOID,vm.forms[vm.currentForm]).then(function(){angular.forEach(vm.forms,function(form,index){form.selected=index===vm.currentForm}),$rootScope.$broadcast("close-tile-what-i-do"),$rootScope.$broadcast("what-i-do-update",[vm.forms[vm.currentForm].readForm()])})};var adjustFormForLanguage=function(form,skipOption){var baseKey="connections.FORMS_"+form.type.toUpperCase()+"_"+form.templateId+"_";form.text=$language.get(baseKey+"TEXT"),angular.forEach(form.options,function(option){var optionKey=baseKey+"OPTIONS_"+option.id.toUpperCase();"select"===option.type?angular.forEach(option.list,function(select,idx){select.label=$language.get(optionKey+"_"+idx)}):skipOption===!1&&(option.value=$language.get(optionKey))})},loadForms=function(){return naturalLanguageFormService.getFormsByType(vm.worker().associateOID,"whatIDo").then(function(results){vm.forms=results,vm.hasSelectedForm=!1,angular.forEach(vm.forms,function(form,index){adjustFormForLanguage(form,form.selected),form.selected===!0&&(vm.currentForm=index,vm.hasSelectedForm=!0)})})};$scope.$on("what-i-do-show",function(event,args){args[0]||args[1]?workerPermissionService.isEntitled(vm.worker().associateOID).then(function(){$scope.$emit("showMe")}):$scope.$emit("hideMe")}),UserPreferenceService.getPreferences().then(function(preferences){var statusMsgDisabled=_.get(preferences,UserPreferenceService.KEYS.DISALLOW_STATUS_UPDATE+".value",!1);statusMsgDisabled||loadForms().then(function(){vm.hasSelectedForm||workerPermissionService.isEntitled(vm.worker().associateOID).then(function(){$scope.$emit("showMe")})})})}]),angular.module("redbox.connections.worker").directive("adpOnboardingChecklistTile",["$rootScope",function(){return{scope:{worker:"&"},restrict:"E",controller:"redbox.connections.worker.directives.OnboardingChecklistTileCtrl",controllerAs:"onboardingChecklistTileCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/onboarding-checklist-tile-content.html"}}]).controller("redbox.connections.worker.directives.OnboardingChecklistTileCtrl",["$scope","$timeout","adp.ng.logging.LoggerFactory","redbox.connections.worker.directives.OnboardingChecklistCheckerService",function($scope,$timeout,loggerFactory,checkerService){function displayAoids(aoids){_.isEmpty(aoids)||(vm.aoids=aoids,$scope.$emit("showMe"))}function createChecklists(){vm.aoids&&(vm.createChecklistsLoader=!0,vm.buttonDisabled=!0,checkerService.createNewhireChecklists(vm.aoids).then(function(){vm.checklistsCreatedError=!1,vm.checklistsCreatedSuccess=!0}).catch(function(){vm.checklistsCreatedError=!0,vm.checklistsCreatedSuccess=!1,vm.buttonDisabled=!1,vm.errorCloseCallback=function(){$timeout(function(){vm.checklistsCreatedError=!1},400)}}).finally(function(){vm.createChecklistsLoader=!1}))}var vm=this,logger=loggerFactory.getLogger("redbox.connections.worker.directives.OnboardingChecklistTileCtrl");vm.createChecklists=createChecklists,vm.buttonDisabled=!1,checkerService.getAoidsThatNeedOnboardingChecklistCreated(vm.worker().associateOID).then(displayAoids).catch(function(err){logger.info("Not showing onboarding checklist creation buttons",err)})}]).factory("redbox.connections.worker.directives.OnboardingChecklistCheckerService",["$q","redbox.ext.shared.services.ProfileService","redbox.framework.checklists.ChecklistService","redbox.framework.checklists.ChecklistTemplateService","redbox.onboarding.checklists.ManagerNewHiresService",function($q,profileService,checklistService,checklistTemplateService,managerNewHiresService){function createNewhireChecklists(aoids){return checklistService.createChecklistsFromTemplate(aoids,"onboarding")}function getAoidsThatNeedOnboardingChecklistCreated(profileAOID){return ensureIsPractitioner().then(function(){return getChecklistTemplate().then(function(checklistTemplate){return checklistTemplate?findReportsTo(profileAOID):[]})}).then(reduceToAoidsWithoutChecklists)}function ensureIsPractitioner(){return profileService.get().then(function(profileResult){return profileResult.isPractitioner?profileResult.associateoid:$q.reject("Not a practitioner")})}function getChecklistTemplate(){return checklistTemplateService.getChecklistTemplate()}function getStartDateRange(range,rangeType){return moment().subtract(range,rangeType).format("YYYY-MM-DD")}function getEndDateRange(range,rangeType){return moment().add(range,rangeType).format("YYYY-MM-DD")}function findReportsTo(aoid){return managerNewHiresService.getNewHiresAoids(aoid,getStartDateRange(6,"M"),getEndDateRange(6,"M"))}function reduceToAoidsWithoutChecklists(aoids){return _.isEmpty(aoids)?[]:checklistService.getChecklistSummariesForAoids(aoids,"onboarding").then(function(summaries){return _.pluck(_.filter(summaries.results,function(summary){return!summary.found}),"assigneeAoid")})}return{getAoidsThatNeedOnboardingChecklistCreated:getAoidsThatNeedOnboardingChecklistCreated,createNewhireChecklists:createNewhireChecklists}}]),angular.module("redbox.connections.worker").directive("adpWorkerPayInfoTile",["$rootScope",function($rootScope){return{scope:{worker:"="},restrict:"E",controller:"redbox.connections.worker.directives.WorkerPayInfoTileCtrl",controllerAs:"workerPayInfoTileCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/worker-pay-info-tile-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.WorkerPayInfoTileCtrl",["$scope","$injector",function($scope,$injector){var userIdentity=$injector.get("redbox.ext.shared.services.UserIdentityService"),FocusSlideInService=$injector.get("redbox.connections.worker.FocusSlideInService"),$q=$injector.get("$q"),vm=this;vm.openSlideIn=function(){FocusSlideInService.openSlideIn("worker-pay-info",$scope)};var isSelfView=function(){return userIdentity.getAoid().then(function(aoid){return aoid===vm.worker.associateOID})};$q.when(isSelfView()).then(function(){$scope.$emit("showMe")})}]),angular.module("redbox.connections.worker").directive("adpWorkerPersonalInfoTile",["$rootScope",function($rootScope){return{scope:{workerService:"="},restrict:"E",controller:"redbox.connections.worker.directives.WorkerPersonalInfoTileCtrl",controllerAs:"workerPersonalInfoTileCtrl",bindToController:!0,templateUrl:function(elem,attrs){return attrs.source?attrs.source:"app/connections/modules/worker/views/worker-personal-info-tile-content.html"},link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.WorkerPersonalInfoTileCtrl",["$scope","$injector",function($scope,$injector){function setWorkflowStatus(){var address=1,personalAddress=1,email=1,landline=1,mobile=1,count=0;_.forEach(vm.workflow,function(eventStatus){_.isEqual(SFFO.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_add.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_change.sffo,eventStatus.sffo)?1===eventStatus.status?(address=4,count++):2===eventStatus.status&&4!==address&&(address=6):_.isEqual(SFFO.workerInformationManagement.workerManagement.addressManagement.worker_personalAddress_change.sffo,eventStatus.sffo)?1===eventStatus.status?(personalAddress=4,count++):2===eventStatus.status&&4!==personalAddress&&(personalAddress=6):_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_add.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_change.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_remove.sffo,eventStatus.sffo)?1===eventStatus.status?(email=4,count++):2===eventStatus.status&&4!==email&&(email=6):_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_add.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_change.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_remove.sffo,eventStatus.sffo)?1===eventStatus.status?(landline=4,count++):2===eventStatus.status&&4!==landline&&(landline=6):(_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_add.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_change.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_remove.sffo,eventStatus.sffo))&&(1===eventStatus.status?(mobile=4,count++):2===eventStatus.status&&4!==mobile&&(mobile=6))}),vm.addressLegal.status=address,vm.addressPersonal.status=personalAddress,vm.email.status=email,vm.landline.status=landline,vm.mobile.status=mobile,count=vm.customFieldGroup.hasPendingEvent()?count+1:count,vm.pendingEvents.isPending=count>0,vm.pendingEvents.count=count}function updateEvent(formName,data){var obj;switch(formName){case META_CONSTANTS.EVENTS.LEGAL_ADDRESS_ADD.NAME:case META_CONSTANTS.EVENTS.LEGAL_ADDRESS_CHANGE.NAME:obj="addressLegal";break;case META_CONSTANTS.EVENTS.PERSONAL_ADDRESS_CHANGE.NAME:obj="addressPersonal";break;case META_CONSTANTS.EVENTS.PERSONAL_EMAIL_ADD.NAME:case META_CONSTANTS.EVENTS.PERSONAL_EMAIL_CHANGE.NAME:case META_CONSTANTS.EVENTS.PERSONAL_EMAIL_REMOVE.NAME:obj="email";break;case META_CONSTANTS.EVENTS.PERSONAL_LANDLINE_ADD.NAME:case META_CONSTANTS.EVENTS.PERSONAL_LANDLINE_CHANGE.NAME:case META_CONSTANTS.EVENTS.PERSONAL_LANDLINE_REMOVE.NAME:obj="landline";break;case META_CONSTANTS.EVENTS.PERSONAL_MOBILE_ADD.NAME:case META_CONSTANTS.EVENTS.PERSONAL_MOBILE_CHANGE.NAME:case META_CONSTANTS.EVENTS.PERSONAL_MOBILE_REMOVE.NAME:obj="mobile";break;case META_CONSTANTS.EVENTS.BIRTHDATE_CHANGE.NAME:obj="birthdate";break;case META_CONSTANTS.EVENTS.GENDER_CHANGE.NAME:obj="gender";break;case META_CONSTANTS.EVENTS.RACE_CHANGE.NAME:obj="race";break;case META_CONSTANTS.EVENTS.ETHNICITY_CHANGE.NAME:obj="ethnicity";break;case META_CONSTANTS.EVENTS.MILITARY_STATUS_CHANGE.NAME:obj="militaryStatus";break;case META_CONSTANTS.EVENTS.MILITARY_CLASSIFICATION_CHANGE.NAME:obj="militaryClassification";break;case META_CONSTANTS.EVENTS.HIGHEST_EDUCATION_LEVEL_CHANGE.NAME:obj="highestEducationLevel";break;case META_CONSTANTS.EVENTS.DISABILITY_CHANGE.NAME:obj="disability"}vm[obj].status=data.status?data.status:vm[obj].status,vm[obj].notificationType=data.notificationType?data.notificationType:vm[obj].notificationType,vm[obj].workflowResponse=data.workflowResponse?data.workflowResponse:""}var WorkerPermissionService=$injector.get("redbox.connections.worker.WorkerPermissionService"),WorkflowRecallService=$injector.get("redbox.workflow.WorkflowRecallService"),FocusSlideInService=$injector.get("redbox.connections.worker.FocusSlideInService"),SFFO=$injector.get("redbox.ext.shared.constants.SFFOConstant"),META_CONSTANTS=$injector.get("redbox.framework.meta.META_CONSTANTS"),$q=$injector.get("$q"),$timeout=$injector.get("$timeout"),$stateParams=$injector.get("$stateParams"),WORKER_CONSTANTS=$injector.get("WORKER_CONSTANTS"),vm=this;vm.worker=vm.workerService.worker,vm.workflow=vm.workerService.workflowStatus,vm.customFieldGroup=vm.workerService.customFields.getFieldGroup("person"),vm.isManager=!1,vm.addressLegal={},vm.addressPersonal={status:1},vm.email={},vm.landline={},vm.mobile={},vm.birthdate={status:1},vm.gender={status:1},vm.ethnicity={status:1},vm.race={status:1},vm.disability={status:1,changeModel:{}},vm.militaryStatus={status:1,changeModel:{}},vm.militaryClassification={status:1},vm.highestEducationLevel={status:1},vm.pendingEvents={isPending:!1,count:0},vm.WORKER_CONSTANTS=WORKER_CONSTANTS,$scope.$watch("workerPersonalInfoTileCtrl.workerService.worker",function(newValue,oldValue){newValue&&!_.isEqual(newValue,oldValue)&&(vm.worker=newValue)}),$scope.$watch("workerPersonalInfoTileCtrl.workerService.customFields",function(newValue,oldValue){newValue&&!_.isEqual(newValue,oldValue)&&(vm.customFieldGroup=vm.workerService.customFields.getFieldGroup("person"))}),$scope.$watch("workerPersonalInfoTileCtrl.workerService.workflowStatus",function(newValue,oldValue){_.isEqual(newValue,oldValue)||(vm.workflow=newValue,setWorkflowStatus())},!0),$scope.$watch("workerPersonalInfoTileCtrl.workerService.workflow.pendingEvents",function(newValue,oldValue){newValue&&(vm.submitterAOID=_.get(newValue[0],"submitter.userOID")||"")}),$scope.$on("adp-meta-form-cancel",function(event,msg){msg&&msg.formName&&updateEvent(msg.formName,{status:1})}),$scope.$on("adp-meta-form-success",function(event,msg){msg&&msg.formName&&msg.result&&(msg.result.data&&1001===msg.result.data.wfStatusCode?updateEvent(msg.formName,{status:4,workflowResponse:msg.result.data.workflowResponse}):(updateEvent(msg.formName,{status:3,notificationType:1}),$timeout(function(){updateEvent(msg.formName,{status:1,notificationType:-1})},2e3)),$scope.$emit("worker-profile-refresh"))}),$scope.$on("adp-meta-form-processing",function(event,msg){msg&&FocusSlideInService.loadingIndicator("personal-info-slide",msg.processing)}),$scope.$on("adp-cdf-form-success",function(event,msg){$scope.$emit("worker-profile-refresh")}),vm.openSlideIn=function(){FocusSlideInService.openSlideIn("worker-personal-info",$scope)},vm.recallEvent=function(eventId){var key,config={payload:{}};switch(config.payload={events:[{data:{eventContext:{worker:{associateOID:$stateParams.associateOID}}}}]},FocusSlideInService.loadingIndicator("personal-info-slide",!0),eventId){case"WORKER_PERSONAL_EMAIL_CHANGE":key="email";break;case"WORKER_PERSONAL_LANDLINE_CHANGE":key="landline";break;case"WORKER_PERSONAL_MOBILE_CHANGE":key="mobile";break;case"WORKER_LEGAL_ADDRESS_CHANGE":key="addressLegal";break;case"WORKER_PERSONAL_ADDRESS_CHANGE":key="addressPersonal"}WorkflowRecallService.recallEvent(eventId,config).then(function(){vm[key].status=3,vm[key].notificationType=3,$scope.$emit("worker-profile-refresh")},function(){vm[key].status=3,vm[key].notificationType=4}).finally(function(){FocusSlideInService.loadingIndicator("personal-info-slide",!1)})},vm.loadForm=function(eventId){var key;switch(eventId){case"LEGAL_ADDRESS_ADD":case"LEGAL_ADDRESS_CHANGE":key="addressLegal";break;case"PERSONAL_ADDRESS_CHANGE":key="addressPersonal";break;case"PERSONAL_EMAIL_ADD":case"PERSONAL_EMAIL_CHANGE":case"PERSONAL_EMAIL_REMOVE":key="email";break;case"PERSONAL_LANDLINE_ADD":case"PERSONAL_LANDLINE_CHANGE":case"PERSONAL_LANDLINE_REMOVE":key="landline";break;case"PERSONAL_MOBILE_ADD":case"PERSONAL_MOBILE_CHANGE":case"PERSONAL_MOBILE_REMOVE":key="mobile";break;case"BIRTHDATE_CHANGE":key="birthdate";break;case"GENDER_CHANGE":key="gender";break;case"RACE_CHANGE":key="race";break;case"ETHNICITY_CHANGE":key="ethnicity";break;case"MILITARY_STATUS_CHANGE":key="militaryStatus",vm.militaryStatus.changeModel={militaryStatusCode:vm.worker.person.militaryStatusCode,militaryDischargeDate:vm.worker.person.militaryDischargeDate};break;case"MILITARY_CLASSIFICATION_CHANGE":key="militaryClassification";break;case"HIGHEST_EDUCATION_LEVEL_CHANGE":key="highestEducationLevel";break;case"DISABILITY_CHANGE":key="disability",vm.disability.changeModel={disabledIndicator:vm.worker.person.disabledIndicator||!1},_.set(vm.disability.changeModel,"disabilityIdentificationDeclinedIndicator",vm.worker.person.disabilityIdentificationDeclinedIndicator),vm.worker.person.disabilityTypeCodes&&vm.worker.person.disabilityTypeCodes[0]&&(vm.disability.changeModel.disabilityTypeCode=vm.worker.person.disabilityTypeCodes[0])}vm[key].eventId=eventId,vm[key].status=2},vm.isAddressSame=function(){return _.isObject(vm.worker.person.otherPersonalAddresses[0].sameAsAddressIndicator)?vm.worker.person.otherPersonalAddresses[0].sameAsAddressIndicator.value:vm.worker.person.otherPersonalAddresses[0].sameAsAddressIndicator},vm.showField=function(field){return vm.workerService.showField(field)},vm.isFieldOptional=function(field){return vm.workerService.isFieldOptional(field)},vm.getHelperMessage=function(field){return vm.workerService.getHelperMessage(field)},vm.onCancelForm=function(formName){$scope.$emit("adp-meta-form-cancel",{formName:formName})},vm.onSaveForm=function(formName,result){$scope.$emit("adp-meta-form-success",{formName:formName,result:result})},vm.onLoadingForm=function(formName,loading){FocusSlideInService.loadingIndicator("personal-info-slide",loading)};var isEntitled=function(){var defer=$q.defer();return WorkerPermissionService.isEntitled(vm.worker.associateOID).then(function(result){vm.selfAoid=_.get(result,"selfAoid"),vm.isManager=_.get(result,"hasManagerEntitlements"),defer.resolve()}).catch(function(error){defer.reject(error)}),defer.promise},getPermissions=function(){var defer=$q.defer();return WorkerPermissionService.getPermissions(vm.worker.associateOID).then(function(result){vm.permissions=result,defer.resolve()}).catch(function(error){defer.reject(error)}),defer.promise};$q.all([isEntitled(),getPermissions(),setWorkflowStatus()]).then(function(){$scope.$emit("showMe")})}]),angular.module("redbox.connections.worker").directive("adpWorkerProfile",["$rootScope",function($rootScope){return{scope:{},templateUrl:"app/connections/modules/worker/views/worker-profile.html",replace:!0,controller:"redbox.connections.worker.directives.WorkerProfileCtrl",controllerAs:"workerProfileCtrl",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.WorkerProfileCtrl",["$scope","$injector",function($scope,$injector){function hasContentToDisplay(tile){var hasContent=!0;return"customfield"===tile.id&&(hasContent=vm.workerService.customFields&&vm.workerService.customFields.getFlatFieldGroup().hasFields()),hasContent}function setTiles(){var hasPreference,visibleTiles=[];_.forEach(_.keys(vm.workerService.workerMeta.meta),function(key){key.indexOf("/workers/customFieldGroup")!==-1&&_.has(vm.workerService.worker,"customFieldGroup")&&_.set(vm.permissions,"customFieldGroup.read",!0),key.indexOf("/workers/person/customFieldGroup")!==-1&&_.has(vm.workerService.worker,"person.customFieldGroup")&&_.set(vm.permissions,"person.customFieldGroup.read",!0)}),vm.isSelfView?vm.permittedTiles=WorkerPermissionService.getPermittedTiles(vm.permissions,vm.talentPermissions):vm.permittedTiles=_.remove(WorkerPermissionService.getPermittedTiles(vm.permissions,vm.talentPermissions),function(tile){return!tile.isSelfView}),_.forEach(vm.permittedTiles,function(permittedTile){hasContentToDisplay(permittedTile)&&(permittedTile.title=$language.get(permittedTile.title),_.has(permittedTile,"privacyAcknowledged")&&(hasPreference=_.find(vm.userPreferences,function(preference){preference.name===permittedTile.id&&preference.privacyAcknowledged&&(permittedTile.privacyAcknowledged=preference.privacyAcknowledged)})),permittedTile.isHideable?(hasPreference=_.find(vm.userPreferences,function(preference){return preference.name===permittedTile.id&&(preference.hidden||visibleTiles.push(permittedTile),!0)}),hasPreference||visibleTiles.push(permittedTile)):visibleTiles.push(permittedTile))}),vm.tiles=visibleTiles}function getWorker(bustCache){return vm.workerService.get(bustCache).then(function(){vm.worker=vm.workerService.worker,vm.workflow=vm.workerService.workflowStatus,_.isEmpty(vm.worker)&&(vm.workerNotFound=!0)},function(error){vm.workerNotFound=!0}).finally(function(){vm.loading=!1})}var $q=$injector.get("$q"),$language=$injector.get("$language"),$timeout=$injector.get("$timeout"),$stateParams=$injector.get("$stateParams"),LoggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),UserIdentity=$injector.get("redbox.ext.shared.services.UserIdentityService"),WorkerPermissionService=$injector.get("redbox.connections.worker.WorkerPermissionService"),TalentPermissionService=$injector.get("redbox.shared.services.TalentPermissionService"),objectEntitlementsService=$injector.get("redbox.ext.shared.services.ObjectEntitlementsService"),WorkerService=$injector.get("redbox.connections.worker.WorkerService"),WorkerPreferenceService=$injector.get("redbox.connections.worker.WorkerPreferencesService"),logger=LoggerFactory.getLogger("redbox.connections.worker.directives.WorkerProfileCtrl"),associateOID=$stateParams.associateOID,config={workflowEnabled:!1,currentViewAoid:$stateParams.associateOID},vm=this;vm.loading=!0,vm.workerNotFound=!1,vm.associateOID=associateOID,$scope.$on("worker-profile-refresh",function(event){getWorker(!0)});var getPermissions=function(){return $q.when(WorkerPermissionService.getPermissions(associateOID).then(function(result){vm.permissions=result})&&TalentPermissionService.getPermissions(associateOID).then(function(result){vm.talentPermissions=result}))},getUserPerferences=function(){var deferred=$q.defer(),promise=deferred.promise;return WorkerPreferenceService.getPreferences().then(function(preferences){vm.userPreferences=preferences,deferred.resolve()},function(error){logger.error("Get profile dashboard preferences failed: "+error),deferred.reject(error)}),promise};vm.isSelfView=!1,UserIdentity.getAoid().then(function(aoid){associateOID?config.href="/hr/v2/workers/"+associateOID:associateOID=aoid,aoid===associateOID?(vm.isSelfView=!0,config.workflowEnabled=!0,config.masked=!1,vm.workerService=new WorkerService(config),$q.all([getWorker(),getPermissions(),getUserPerferences()]).then(function(){setTiles()})):objectEntitlementsService.getManagerEntitlements().then(function(){objectEntitlementsService.verifyManagerEntitlements(associateOID)&&(config.workflowEnabled=!0,config.masked=!1)}).catch(function(){vm.isSelfView=!1}).finally(function(){vm.workerService=new WorkerService(config),$q.all([getWorker(),getPermissions(),getUserPerferences()]).then(function(){setTiles()})})}),vm.removePrivacyTile=function(tile){tile.isPrivacyAcknowledged?WorkerPreferenceService.acknowledgePrivacy(tile).then(function(){animateOverlay(tile)}):animateOverlay(tile)};var animateOverlay=function(tile){$("."+tile.id+"-tile-privacy").fadeOut(1e3),$timeout(function(){tile.privacyAcknowledged=!0},1e3)};$scope.$on("profile-preferences-changed",function(){getUserPerferences().then(function(){setTiles()})})}]),angular.module("redbox.connections.worker").directive("adpWorkerProfileHeader",["$rootScope",function($rootScope){return{scope:{workerService:"="},template:'<ng-include src="workerProfileHeaderCtrl.templateUrl"></ng-include>',replace:!0,controller:"redbox.connections.worker.directives.WorkerProfileHeaderCtrl",controllerAs:"workerProfileHeaderCtrl",bindToController:!0,link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.WorkerProfileHeaderCtrl",["$rootScope","$scope","$injector",function($rootScope,$scope,$injector){function setClientPreferences(preferences){vm.disablePhotoUpdate=_.get(preferences,UserPreferenceService.KEYS.DISALLOW_IMAGE_UPLOAD+".value",!1),vm.disableBackgroundUpdate=_.get(preferences,UserPreferenceService.KEYS.DISALLOW_BACKGROUND_IMAGE_UPLOAD+".value",!1),vm.disableStatusMsg=_.get(preferences,UserPreferenceService.KEYS.DISALLOW_STATUS_UPDATE+".value",!1)}function setBackground(profile){profile&&profile.images&&profile.images.background&&(vm.headerStyle["background-image"]="url("+ImpersonationService.addActingSessionIdParamSync(profile.images.background.binaryHref)+")"),vm.hasBackgroundImage=_.get(profile,"images.background",!1),vm.hasProfileImage=_.get(profile,"images.profile",!1)}function setWhatIDoTile(){NaturalLanguageFormService.getFormattedUserForm(vm.worker.associateOID,"whatIDo").then(function(form){adjustFormForLanguage(form,!0),vm.whatIDo=form.readForm()},function(){$rootScope.$broadcast("what-i-do-show",[vm.isSelfView&&!vm.disableStatusMsg,vm.isManagerView&&!vm.disableStatusMsg]);
})}var vm=this,$language=$injector.get("$language"),$q=$injector.get("$q"),$location=$injector.get("$location"),UserProfileService=$injector.get("redbox.ext.shared.services.ProfileService"),ImpersonationService=$injector.get("redbox.shared.services.ImpersonationService"),NaturalLanguageFormService=$injector.get("redbox.shared.services.NaturalLanguageFormService"),objectEntitlementsService=$injector.get("redbox.ext.shared.services.ObjectEntitlementsService"),userIdentityService=$injector.get("redbox.ext.shared.services.UserIdentityService"),VCardService=$injector.get("redbox.connections.worker.VCardService"),UserPreferenceService=$injector.get("redbox.ext.shared.services.UserPreferenceService"),FocusSlideIn=$injector.get("adp.ng.ui.slidein.FocusSlideIn"),ContactPreferencesService=$injector.get("redbox.settings.contacts.ContactPreferencesService"),ContactPreferencesConstant=$injector.get("redbox.settings.contacts.ContactPreferencesConstant"),DEFAULT_TEMPLATE="app/connections/modules/worker/views/worker-profile-header.html",NO_BG_TEMPLATE="app/connections/modules/worker/views/worker-profile-header-no-bg.html";vm.worker=vm.workerService.worker,vm.contactPreferencesService=new ContactPreferencesService,vm.showContactPreferenceLink=!1,userIdentityService.getAoid().then(function(aoid){vm.isSelfView=!1,aoid===vm.worker.associateOID?vm.isSelfView=!0:objectEntitlementsService.getManagerEntitlements().then(function(){objectEntitlementsService.verifyManagerEntitlements(vm.worker.associateOID)&&(vm.isSelfView=!1,vm.isManagerView=!0)})}),vm.contactPreferencesService.getContactPreferences().then(function(){vm.showContactPreferenceLink=!0}).catch(function(err){err!==ContactPreferencesConstant.ARCOT_ENABLED&&(vm.showContactPreferenceLink=!0)}),$q.all([UserPreferenceService.getPreferences(),UserProfileService.getProfileForAssociate(vm.worker.associateOID)]).then(function(results){setClientPreferences(results[0]),setBackground(results[1]),setWhatIDoTile(),vm.templateUrl=vm.disableBackgroundUpdate&&!vm.hasBackgroundImage?NO_BG_TEMPLATE:DEFAULT_TEMPLATE}),$scope.$watch("workerProfileHeaderCtrl.workerService.worker",function(newValue,oldValue){newValue&&!_.isEqual(newValue,oldValue)&&(vm.worker=newValue)}),vm.downloadVCard=function(){VCardService.downloadVCard(VCardService.formatVCardForWorker(vm.worker))},vm.headerStyle={"background-image":"none"},$scope.$on("profile-background-image-saved",function(event,msg){vm.headerStyle["background-image"]="url("+msg.url+")"}),$scope.$on("profile-background-image-removed",function(){vm.headerStyle["background-image"]="none"}),$scope.$on("what-i-do-update",function(event,args){vm.whatIDo!==args[0]&&(vm.whatIDo=args[0])});var adjustFormForLanguage=function(form,skipOption){var baseKey="connections.FORMS_"+form.type.toUpperCase()+"_"+form.templateId+"_";form.text=$language.get(baseKey+"TEXT"),angular.forEach(form.options,function(option){var optionKey=baseKey+"OPTIONS_"+option.id.toUpperCase();"select"===option.type?angular.forEach(option.list,function(select,idx){select.label=$language.get(optionKey+"_"+idx)}):skipOption===!1&&(option.value=$language.get(optionKey))})};vm.editWhatIDo=function(){(vm.isSelfView||vm.isManagerView)&&$rootScope.$broadcast("what-i-do-show",[!0])},vm.clearWhatIDo=function(){(vm.isSelfView||vm.isManagerView)&&(NaturalLanguageFormService.clearUserForm(vm.worker.associateOID,"whatIDo").then(function(){vm.whatIDo=void 0}),$rootScope.$broadcast("what-i-do-show",[!0]))},vm.showField=function(field){return vm.workerService.showField(field)},vm.showEditProfilePreferences=function(){return vm.isSelfView&&$location.path().indexOf("/profile/")!==-1},vm.editProfilePreferences=function(){$rootScope.$broadcast("PROFILE_SHOW_PREFERENCES")},vm.onContactPreferenceSave=function(){},vm.openContactPreferenceSlideIn=function(){FocusSlideIn({scope:$scope,contentTemplate:"app/connections/modules/worker/views/worker-header-contact-preference-slide-in.html",backButton:$language.get("connections.PROFILE_PROFILE")})}}]),angular.module("redbox.connections.worker").directive("adpWorkerProfileImage",["$rootScope",function($rootScope){return{scope:{worker:"&"},templateUrl:function(element,attrs){var templateUrl="";return"profile"===attrs.imagetype?templateUrl="app/connections/modules/worker/views/worker-profile-image-edit.html":"background"===attrs.imagetype&&(templateUrl="app/connections/modules/worker/views/worker-profile-background-edit.html"),templateUrl},replace:!0,controller:"redbox.connections.worker.directives.WorkerProfileImageCtrl",controllerAs:"workerImageCtrl",bindToController:!0,link:function(scope,element,attrs){scope.lang=$rootScope.lang,scope.imageType=attrs.imagetype}}}]).controller("redbox.connections.worker.directives.WorkerProfileImageCtrl",["$injector","$scope",function($injector,$scope){function getTempImage(){var deferred=$q.defer(),promise=deferred.promise,configuration={headers:{"loading-indicator":!0}},url="/redboxapi/core/profile/v1/associates/"+aoid+"/images/temp?"+(new Date).getTime();return $http.get(url,configuration).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),promise}var FocusSlideInService=$injector.get("redbox.connections.worker.FocusSlideInService"),$language=$injector.get("$language"),$rootScope=$injector.get("$rootScope"),$q=$injector.get("$q"),$http=$injector.get("$http"),$timeout=$injector.get("$timeout"),$sce=$injector.get("$sce"),ProfileService=$injector.get("redbox.ext.shared.services.ProfileService"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=loggerFactory.getLogger("redbox.connections.worker.directives.WorkerProfileImageCtrl"),vm=this;vm.profileImage={errorMessage:$language.get("connections.PROFILE_IMAGE_UPLOAD_ERROR_TOO_LARGE"),url:"",showUploadError:!1,showSaveProfileImage:!1};var videoStream,video,aoid=vm.worker().associateOID,iframePostAction="/redboxapi/core/profile/v1/associates/{associateoid}/images/temp",imageFileTypes=["png","jpeg","jpg","gif","svg"];$scope.zoom={value:100},vm.backgroundImageUrl="",vm.showSaveBackgroundImage=!1,vm.showUploadError=!1,vm.hasBackground=!1,vm.errorMessages=[],vm.errorMessages.push($language.get("connections.PROFILE_IMAGE_UPLOAD_ERROR_TOO_LARGE")),vm.errorMessages.push($language.get("connections.PROFILE_IMAGE_UPLOAD_ERROR_INVALID")),vm.errorMessages.push($language.get("shared.OOPS_TRYAGAIN")),vm.errorMessage=vm.errorMessages[0],vm.renderHtml=function(value){return $sce.trustAsHtml(value)},ProfileService.getProfileImageMeta(vm.worker().associateOID).then(function(result){vm.profileImage.url="data:"+result.contentType+";base64,"+result.content}),vm.isFileReaderSupported=function(){return!!window.FileReader};var stopCamera=function(){if(videoStream&&videoStream.getVideoTracks){var tracks=videoStream.getVideoTracks();_.forEach(tracks,function(track){track.stop()})}};$scope.$on("adp-image-crop.dirty",function(){vm.profileImage.showSaveProfileImage=!0});var initializeImageOperations=function(){vm.showUploadError=!1,vm.showSaveBackgroundImage=!1,vm.hasBackground=vm.hasBackgroundImage(),aoid=vm.worker().associateOID,ProfileService.getBackgroundImageMeta(aoid).then(function(result){vm.backgroundImageUrl="data:"+result.contentType+";base64,"+result.content,$(".profile-background-preview").css("background-image","url("+vm.backgroundImageUrl+")")}).catch(function(){$(".profile-background-preview").css("background-image","none")}),vm.iframeAction=iframePostAction.replace("{associateoid}",aoid);var reader=new window.FileReader;reader.onloadend=function(){vm.showSaveBackgroundImage=!0,vm.backgroundImageUrl=reader.result,$(".profile-background-preview").css("background-image","url("+vm.backgroundImageUrl+")"),$scope.$apply()},$(document).on("change",".background-file-input",function(e){e.target&&e.target.files&&e.target.files[0]&&reader.readAsDataURL(e.target.files[0])}),vm.isFileReaderSupported()&&setupProfileFileChangeHandler()};vm.upload=function(){"background"===$scope.imageType?(vm.showUploadError=!1,$(".background-file-input").click()):(vm.profileImage.showUploadError=!1,$scope.zoom.value=100,$(".profile-file-input").click())};var setupProfileFileChangeHandler=function(){$timeout(function(){$(".profile-file-input").change(function(e){var reader=new window.FileReader;reader.onloadend=function(){vm.profileImage.showSaveProfileImage=!0,vm.profileImage.url=reader.result,$scope.$apply()};try{reader.readAsDataURL(e.target.files[0])}catch(err){}})},1e3)};vm.save=function(){"background"===$scope.imageType?(vm.showUploadError=!1,ProfileService.setImage(aoid,"background",vm.backgroundImageUrl).then(function(){$(".profile-header").css("background-image","url("+vm.backgroundImageUrl+")"),$(".profile-background-preview").css("background-image","url("+vm.backgroundImageUrl+")"),$scope.$emit("profile-background-image-saved",{url:vm.backgroundImageUrl}),FocusSlideInService.closeSlideIn("background-image")}).catch(function(result){vm.processErrorMessage(result)})):(vm.profileImage.showUploadError=!1,$scope.$broadcast("adp-image-crop.crop"),$scope.$broadcast("adp-image-crop.allowEditing",!1))},vm.processErrorMessage=function(error){if(_.isUndefined(error))vm.errorMessage=vm.errorMessages[2];else{var codeValue=_.get(error,"confirmMessage.resourceMessages[0].processMessages[0].userMessage.codeValue","");"TOO_LONG"===codeValue?vm.errorMessage=vm.errorMessages[0]:"BAD_CONTENT"===codeValue?vm.errorMessage=vm.errorMessages[1]:vm.errorMessage=vm.errorMessages[2]}vm.showUploadError=!0},$scope.$on("adp-image-crop.image",function(event,imageUri){vm.profileImage.url=imageUri,saveProfileImage()}),$scope.$on("adp-image-crop.dirty",function(){vm.profileImage.showSaveProfileImage=!0}),$scope.$on("adp-focus-slide-in.hide",function(){stopCamera()}),$scope.$on("adp-focus-slide-in.close",function(){stopCamera()});var saveProfileImage=function(){ProfileService.setImage(vm.worker().associateOID,"profile",vm.profileImage.url).then(function(){$rootScope.$broadcast("adp-picture.change-image",{aoid:vm.worker().associateOID,url:vm.profileImage.url}),vm.profileImage.showSaveProfileImage=!1,$rootScope.$broadcast("profile-image-saved"),FocusSlideInService.closeSlideIn("profile-image")}).catch(function(error){vm.processErrorMessage(error)})};vm.hasCamera=function(){return!!(navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia)},vm.openCameraSlideIn=function(){"background"===$scope.imageType?FocusSlideInService.openSlideIn("background-image-camera",$scope):FocusSlideInService.openSlideIn("profile-image-camera",$scope)},vm.enableCamera=function(){navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,navigator.getUserMedia?navigator.getUserMedia({video:!0,audio:!1},function(stream){video=document.querySelector("video"),videoStream=stream,video.src=window.URL.createObjectURL(stream),video=document.getElementById("camera-view"),video.addEventListener("play",function(){copyToCanvas()},!1)},function(){logger.debug("Camera access permission not allowed")}):logger.debug("Failure to get Media")};var copyToCanvas=function(){if(!video.paused&&!video.ended){var canvas=document.getElementById("canvas-view");if(canvas){var context=canvas.getContext("2d");context&&context.drawImage(video,0,0,video.width,video.height)}$timeout(function(){copyToCanvas()},0)}};vm.takePhoto=function(){var canvas=document.getElementById("canvas-view");"background"===$scope.imageType?(vm.showSaveBackgroundImage=!0,vm.backgroundImageUrl=canvas.toDataURL(),$(".profile-background-preview").css("background-image","url("+vm.backgroundImageUrl+")"),stopCamera(),FocusSlideInService.closeSlideIn("background-image-camera")):(vm.profileImage.showSaveProfileImage=!0,vm.profileImage.url=canvas.toDataURL(),stopCamera(),FocusSlideInService.closeSlideIn("profile-image-camera"),$scope.zoom.value=100)},vm.remove=function(){"background"===$scope.imageType?($(".profile-background-preview").removeAttr("style"),$(".profile-header").css("background-image","none"),aoid||(aoid=vm.worker().associateOID),ProfileService.getImageGallery(aoid,"background").then(function(result){for(var imageUrl="",i=0;i<result.images.length;i++)if(result.images[i].selected===!0){imageUrl=result.images[i].href;break}""!==imageUrl&&ProfileService.deleteImage(imageUrl).then(function(){vm.backgroundImageUrl="",$(".profile-background-preview").removeAttr("style"),$(".profile-header").css("background-image","none"),$scope.$emit("profile-background-image-removed"),FocusSlideInService.closeSlideIn("background-image")})})):ProfileService.getImageGallery(vm.worker().associateOID,"profile").then(function(result){for(var imageUrl="",i=0;i<result.images.length;i++)if(result.images[i].selected===!0){imageUrl=result.images[i].href;break}""!==imageUrl&&ProfileService.deleteImage(imageUrl).then(function(){vm.profileImage.url="",$rootScope.$broadcast("adp-picture.remove-image",{aoid:vm.worker().associateOID,url:""}),$(".adp-icon-picture-xl[data-aoid="+vm.worker().associateOID+"]").css("background-image","none"),$rootScope.$broadcast("profile-image-removed"),FocusSlideInService.closeSlideIn("profile-image")})})},vm.hasBackgroundImage=function(){var background=$("#worker-profile-header").css("background-image");return!background||"none"!==background},vm.onFileChange=function(){function fetchTempImg(){getTempImage().then(function(result){"background"===$scope.imageType?(vm.backgroundImageUrl="data:"+result.contentType+";base64,"+result.content,$(".profile-background-preview").css("background-image","url("+vm.backgroundImageUrl+")"),vm.isDoneDisabled=!1,vm.showSaveBackgroundImage=!0):(vm.profileImage.url="data:"+result.contentType+";base64,"+result.content,vm.isDoneDisabled=!1)},handleErrors)}function handleErrors(e){logger.error("IE9 img upload Error Handler: error obj = ",JSON.stringify(e)),$rootScope.displayLoading=!1,vm.errorMessage=$language.get("shared.OOPS_TRYAGAIN"),vm.profileImage.errorMessage=vm.errorMessage,vm.showUploadError=!0,vm.profileImage.showUploadError=vm.showUploadError}var fileUploadPath=document.getElementById("temp").value,extension=fileUploadPath.substring(fileUploadPath.lastIndexOf(".")+1).toLowerCase();return _.contains(imageFileTypes,extension)?($rootScope.displayLoading=!0,vm.showUploadError=!1,vm.profileImage.showUploadError=vm.showUploadError,void $("#ie9-form").ajaxSubmit({timeout:25e3,resetForm:!0,success:function(response){logger.debug("response",response),fetchTempImg()},uploadProgress:function(event,position,total,percentComplete){logger.debug(percentComplete+"% complete")},error:function(error){handleErrors(error)}})):(vm.errorMessage=$language.get("framework.ADMIN_BRANDING_IMAGE_TYPE_ERROR"),vm.showUploadError=!0,vm.profileImage.errorMessage=vm.errorMessage,void(vm.profileImage.showUploadError=vm.showUploadError))},$scope.onFileChange=vm.onFileChange,vm.editImage=function(){"profile"===$scope.imageType?FocusSlideInService.openSlideIn("profile-image",$scope):FocusSlideInService.openSlideIn("background-image",$scope),$timeout(function(){initializeImageOperations()},500)}}]),angular.module("redbox.connections.worker").directive("adpWorkerProfilePreferencesTile",["$rootScope",function($rootScope){return{scope:{tiles:"="},restrict:"E",controller:"redbox.connections.worker.directives.WorkerProfilePreferencesTileCtrl",controllerAs:"workerProfilePreferencesTileCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/worker-profile-preferences-tile-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.WorkerProfilePreferencesTileCtrl",["$scope","$injector",function($scope,$injector){var WorkerPreferenceService=$injector.get("redbox.connections.worker.WorkerPreferencesService"),LoggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),$language=$injector.get("$language"),$q=$injector.get("$q"),logger=LoggerFactory.getLogger("redbox.connections.worker.directives.WorkerProfilePreferencesTileCtrl"),vm=this;vm.hideableTiles=[],_.forEach(vm.tiles,function(tile){tile.isHideable&&vm.hideableTiles.push({id:tile.id,title:tile.title,show:!0})});var getUserPreferences=function(){var deferred=$q.defer(),promise=deferred.promise;return WorkerPreferenceService.getPreferences().then(function(preferences){_.forEach(preferences,function(preference){_.find(vm.hideableTiles,function(hideableTile){return hideableTile.id===preference.name&&(hideableTile.show=!preference.hidden,!0)})}),deferred.resolve()},function(error){logger.error("Get profile dashboard preferences failed: "+error),deferred.reject(error)}),promise};vm.updateUserPreferences=function(){var deferred=$q.defer(),promise=deferred.promise;return WorkerPreferenceService.hideShowTiles(vm.hideableTiles).then(function(){$scope.$emit("profile-preferences-changed")}),$scope.$emit("close-tile-profile-preferences"),promise},vm.cancelUserPreferences=function(){$scope.$emit("close-tile-profile-preferences")},vm.resetUserPreferences=function(){_.forEach(vm.hideableTiles,function(hideableTile){hideableTile.show=!0})},vm.getPreferenceLabel=function(hideableTile){return hideableTile.show?$language.get("shared.HIDE"):$language.get("shared.SHOW")},$scope.$on("PROFILE_SHOW_PREFERENCES",function(){$q.when(getUserPreferences()).then(function(){$scope.$emit("showMe")})})}]),angular.module("redbox.connections.worker").directive("adpWorkerProfileTile",["$rootScope",function($rootScope){return{restrict:"E",controller:"redbox.connections.worker.directives.WorkerProfileTileCtrl",controllerAs:"workerProfileTileCtrl",bindToController:!0,link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.WorkerProfileTileCtrl",["$scope","$injector",function($scope,$injector){var $q=$injector.get("$q"),$location=$injector.get("$location"),WorkerService=$injector.get("redbox.connections.worker.WorkerService"),vm=this;vm.workerService=new WorkerService({workflowEnabled:!1}),vm.openProfile=function(){$scope.$emit("close-tile-profile"),$location.path("/profile/"+_.get(vm,"workerService.worker.associateOID"))};var getWorker=function(){return vm.workerService.get().then(function(){_.isEmpty(vm.workerService.worker)&&(vm.workerNotFound=!0)},function(error){vm.workerNotFound=!0})};$q.when(getWorker()).then(function(){$scope.$emit("showMe")})}]),angular.module("redbox.connections.worker").directive("adpWorkerWorkInfoTile",["$rootScope",function($rootScope){return{scope:{workerService:"="},restrict:"E",controller:"redbox.connections.worker.directives.WorkerWorkInfoTileCtrl",controllerAs:"workerWorkInfoTileCtrl",bindToController:!0,templateUrl:"app/connections/modules/worker/views/worker-work-info-tile-content.html",link:function(scope){scope.lang=$rootScope.lang}}}]).controller("redbox.connections.worker.directives.WorkerWorkInfoTileCtrl",["$scope","$injector",function($scope,$injector){function setWorkflowStatus(){var email=1,landline=1,mobile=1,fax=1,count=0;_.forEach(vm.workflow,function(eventStatus){_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_add.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_change.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_remove.sffo,eventStatus.sffo)?1===eventStatus.status?(email=4,count++):2===eventStatus.status&&4!==email&&(email=6):_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_add.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_change.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_remove.sffo,eventStatus.sffo)?1===eventStatus.status?(landline=4,count++):2===eventStatus.status&&4!==landline&&(landline=6):_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_add.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_change.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_remove.sffo,eventStatus.sffo)?1===eventStatus.status?(mobile=4,count++):2===eventStatus.status&&4!==mobile&&(mobile=6):(_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_add.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_change.sffo,eventStatus.sffo)||_.isEqual(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_remove.sffo,eventStatus.sffo))&&(1===eventStatus.status?(fax=4,count++):2===eventStatus.status&&4!==fax&&(fax=6))}),vm.email.status=email,vm.landline.status=landline,vm.fax.status=fax,vm.mobile.status=mobile,vm.pendingEvents.isPending=count>0,vm.pendingEvents.count=count}function setManagerPendingEvents(){var transferPendingEventFound=!1;return vm.workingOnPendingEvents=!0,workflowPendingEventsService.getPendingEventsForAssociate(vm.worker.associateOID).then(function(pendingEvents){_.isArray(pendingEvents)&&_.size(pendingEvents)>0?(_.forEach(pendingEvents,function(pendingEvent){pendingEvent&&"/events/hr/v1/worker.transfer"===_.get(pendingEvent,"eventData.resourcePath")&&(transferPendingEventFound=!0,_.set(vm,"pendingManagerActions.transfer",WORKFLOW_CONSTANTS.STATUS.PENDING))}),transferPendingEventFound||_.set(vm,"pendingManagerActions.transfer",WORKFLOW_CONSTANTS.STATUS.NONE)):_.isArray(pendingEvents)&&0===_.size(pendingEvents)&&_.set(vm,"pendingManagerActions.transfer",WORKFLOW_CONSTANTS.STATUS.NONE),vm.workingOnPendingEvents=!1})}function updateEvent(formName,data){var obj;switch(formName){case META_CONSTANTS.EVENTS.BUSINESS_LANDLINE_ADD.NAME:case META_CONSTANTS.EVENTS.BUSINESS_LANDLINE_CHANGE.NAME:case META_CONSTANTS.EVENTS.BUSINESS_LANDLINE_REMOVE.NAME:obj="landline";break;case META_CONSTANTS.EVENTS.BUSINESS_MOBILE_ADD.NAME:case META_CONSTANTS.EVENTS.BUSINESS_MOBILE_CHANGE.NAME:case META_CONSTANTS.EVENTS.BUSINESS_MOBILE_REMOVE.NAME:obj="mobile";break;case META_CONSTANTS.EVENTS.BUSINESS_FAX_ADD.NAME:case META_CONSTANTS.EVENTS.BUSINESS_FAX_CHANGE.NAME:case META_CONSTANTS.EVENTS.BUSINESS_FAX_REMOVE.NAME:obj="fax";break;case META_CONSTANTS.EVENTS.BUSINESS_EMAIL_ADD.NAME:case META_CONSTANTS.EVENTS.BUSINESS_EMAIL_CHANGE.NAME:case META_CONSTANTS.EVENTS.BUSINESS_EMAIL_REMOVE.NAME:obj="email"}vm[obj].status=data.status?data.status:vm[obj].status,vm[obj].notificationType=data.notificationType?data.notificationType:vm[obj].notificationType,vm[obj].workflowResponse=data.workflowResponse?data.workflowResponse:""}var transferEmployeeWizardService,vm=this,$q=$injector.get("$q"),$window=$injector.get("$window"),$language=$injector.get("$language"),$timeout=$injector.get("$timeout"),userIdentity=$injector.get("redbox.ext.shared.services.UserIdentityService"),SFFO=$injector.get("redbox.ext.shared.constants.SFFOConstant"),META_CONSTANTS=$injector.get("redbox.framework.meta.META_CONSTANTS"),WorkflowRecallService=$injector.get("redbox.workflow.WorkflowRecallService"),WorkerPermissionService=$injector.get("redbox.connections.worker.WorkerPermissionService"),FocusSlideInService=$injector.get("redbox.connections.worker.FocusSlideInService"),WORKER_CONSTANTS=$injector.get("WORKER_CONSTANTS"),ObjectEntitlementsService=$injector.get("redbox.ext.shared.services.ObjectEntitlementsService"),workflowPendingEventsService=$injector.get("redbox.workflow.WorkflowPendingEventsService"),WORKFLOW_CONSTANTS=$injector.get("redbox.workflow.CONSTANTS");vm.worker=vm.workerService.worker,vm.workflow=vm.workerService.workflowStatus,vm.workflowStatusConsts=WORKFLOW_CONSTANTS.STATUS,vm.workingOnPendingEvents=!0,vm.landline={},vm.mobile={},vm.fax={},vm.email={},vm.pendingEvents={isPending:!1,count:0},vm.WORKER_CONSTANTS=WORKER_CONSTANTS,$scope.$watch("workerWorkInfoTileCtrl.workerService.worker",function(newValue,oldValue){newValue&&!_.isEqual(newValue,oldValue)&&(vm.worker=newValue)}),$scope.$watch("workerWorkInfoTileCtrl.workerService.workflowStatus",function(newValue,oldValue){_.isEqual(newValue,oldValue)||(vm.workflow=newValue,setWorkflowStatus())},!0),$scope.$on("adp-meta-form-cancel",function(event,msg){msg&&msg.formName&&updateEvent(msg.formName,{status:1})}),$scope.$on("adp-meta-form-success",function(event,msg){msg&&msg.formName&&msg.result&&(msg.result.data&&1001===msg.result.data.wfStatusCode?updateEvent(msg.formName,{status:4,workflowResponse:msg.result.data.workflowResponse}):(updateEvent(msg.formName,{status:3,notificationType:1}),$timeout(function(){updateEvent(msg.formName,{status:1,notificationType:-1})},2e3)),$scope.$emit("worker-profile-refresh"))}),$scope.$on("adp-meta-form-processing",function(event,msg){msg&&FocusSlideInService.loadingIndicator("worker-work-info",msg.processing)});var timeWithCompany=function(){var startDate,yearsOfService,monthsOfService,daysOfService,terminationDate,endDate;try{if(vm.worker.workerDates.adjustedServiceDate&&(startDate=$window.moment(vm.worker.workerDates.adjustedServiceDate)),vm.worker.workAssignments[0].assignmentStatus&&vm.worker.workAssignments[0].assignmentStatus.statusCode&&"T"===vm.worker.workAssignments[0].assignmentStatus.statusCode.codeValue&&(terminationDate=$window.moment(vm.worker.workAssignments[0].assignmentStatus.effectiveDate)),endDate=terminationDate?terminationDate:$window.moment(),endDate.isAfter(startDate))if(yearsOfService=endDate.diff(startDate,"years"),monthsOfService=endDate.diff(startDate,"months")%12,endDate.date()>startDate.date())daysOfService=endDate.date()-startDate.date();else{var lastMonth=endDate.clone();lastMonth.subtract(1,"month"),startDate.date()>lastMonth.daysInMonth()?lastMonth.date(lastMonth.daysInMonth()):lastMonth.date(startDate.date()),daysOfService=endDate.diff(lastMonth,"days")}else daysOfService=0,yearsOfService=0,monthsOfService=0}catch(e){yearsOfService=0,monthsOfService=0,daysOfService=0}vm.timeWithCompanyChips=[{id:"pokerChip-workerProfile-years",value:yearsOfService,description:$language.get("framework.YEARS"),percentage:yearsOfService%5/5,color:"primary",textColor:"primary"},{id:"pokerChip-workerProfile-months",value:monthsOfService,description:$language.get("framework.MONTHS"),percentage:monthsOfService/12,color:"accent-1-dark",textColor:"accent-1-dark"},{id:"pokerChip-workerProfile-days",value:daysOfService,description:$language.get("framework.DAYS"),percentage:daysOfService/31,color:"accent-3-dark",textColor:"accent-3-dark"}]},getPermissions=function(){return WorkerPermissionService.getPermissions().then(function(result){return vm.permissions=result,vm.permissions},function(){return{}})},isSelfView=function(){vm.isSelfView=!1,userIdentity.getAoid().then(function(aoid){return aoid===vm.worker.associateOID&&(vm.isSelfView=!0,!0)},function(){return!1})},getManager=function(){var href="/hr/v2/workers/{associateOID}",manager=vm.workerService.getPrimaryManager();return _.has(manager,"associateOID")?(href=href.replace("{associateOID}",manager.associateOID),vm.workerService.getManagerWorker(href).then(function(worker){vm.manager=_.get(worker,"workers[0]")})):$q.resolve()},isEntitled=function(){ObjectEntitlementsService.getManagerEntitlements().then(function(){ObjectEntitlementsService.verifyDirectReportsEntitlements(vm.worker.associateOID)&&(vm.isManager=!0)})};vm.loadForm=function(eventId){var key;switch(eventId){case"BUSINESS_LANDLINE_ADD":case"BUSINESS_LANDLINE_CHANGE":case"BUSINESS_LANDLINE_REMOVE":key="landline";break;case"BUSINESS_MOBILE_ADD":case"BUSINESS_MOBILE_CHANGE":case"BUSINESS_MOBILE_REMOVE":key="mobile";break;case"BUSINESS_FAX_ADD":case"BUSINESS_FAX_CHANGE":case"BUSINESS_FAX_REMOVE":key="fax";break;case"BUSINESS_EMAIL_ADD":case"BUSINESS_EMAIL_CHANGE":case"BUSINESS_EMAIL_REMOVE":key="email"}vm[key].eventId=eventId,vm[key].status=2},vm.recallEvent=function(eventId){var key;switch(FocusSlideInService.loadingIndicator("worker-work-info",!0),eventId){case"WORKER_BUSINESS_LANDLINE_CHANGE":key="landline";break;case"WORKER_BUSINESS_MOBILE_CHANGE":key="mobile";break;case"WORKER_BUSINESS_FAX_CHANGE":key="fax";break;case"WORKER_BUSINESS_EMAIL_CHANGE":key="email"}WorkflowRecallService.recallEvent(eventId).then(function(){vm[key].status=3,vm[key].notificationType=3,$scope.$emit("worker-profile-refresh")},function(){vm[key].status=3,vm[key].notificationType=4}).finally(function(){FocusSlideInService.loadingIndicator("worker-work-info",!1)})},vm.openSlideIn=function(){FocusSlideInService.openSlideIn("worker-work-info",$scope)},vm.showField=function(field){return vm.workerService.showField(field)},vm.isFieldOptional=function(field){return vm.workerService.isFieldOptional(field)},vm.openManagerActionWizard=function(){vm.workingOnPendingEvents=!0,transferEmployeeWizardService=$injector.get("redbox.manageractions.transfer.TransferEmployeeWizardService"),transferEmployeeWizardService.launchWizard({worker:vm.worker}).then(function(wizardModel){wizardModel.result.then(function(){setManagerPendingEvents()}).catch(function(){setManagerPendingEvents()})})},$q.all([isSelfView(),getPermissions(),setWorkflowStatus(),getManager(),isEntitled()]).then(function(){vm.isManager?setManagerPendingEvents().then(function(){$scope.$emit("showMe")}):$scope.$emit("showMe")}).then(function(){timeWithCompany()})}]),angular.module("redbox.connections.worker").factory("redbox.connections.worker.BaseSffoService",["$injector",function($injector){var $q=$injector.get("$q"),userPermission=$injector.get("redbox.ext.shared.services.UserPermissionService"),BaseSffoService=function(){};return BaseSffoService.prototype.getOperationHref=function(permission,config){var defer=$q.defer();return userPermission.init().then(function(){defer.resolve(userPermission.getOperationHref(permission,config))},function(error){defer.reject(error)}),defer.promise},BaseSffoService.prototype.isPermitted=function(permission,aoid){var defer=$q.defer();return userPermission.init().then(function(){defer.resolve(userPermission.hasPermission(permission,aoid))},function(error){defer.reject(error)}),defer.promise},new BaseSffoService}]),function(){angular.module("redbox.connections.worker").constant("redbox.connections.worker.CustomFieldConstant",{CUSTOM_FIELD_DATE_FORMAT:"YYYY-MM-DD",CUSTOM_FIELD_TYPES:[{dataType:"date",dataGroupType:"dateFields",fieldKey:"dateFields",valueFieldKey:"dateValue"},{dataType:"string",dataGroupType:"stringFields",fieldKey:"stringFields",valueFieldKey:"stringValue"},{dataType:"number",dataGroupType:"numberFields",fieldKey:"numberFields",valueFieldKey:"numberValue"}],CUSTOM_FIELDS_GROUP_MAP:{work:{workerGroupPath:"workAssignments[0].customFieldGroup",metaGroupPath:"/workers/workAssignments/customFieldGroup/%dataGroupType%/nameCode/codeValue.dependencies.pattern.oneOf",metaAttributePath:"attributes./workers/workAssignments/customFieldGroup/%dataGroupType%/%valueFieldKey%",eventUri:"/events/hr/v1/worker.work-assignment-custom-field.%dataType%.change",wfEventPaths:{itemID:"body.events[0].data.eventContext.worker.workAssignment.customFieldGroup.%dataType%Field.itemID",reqVal:"body.events[0].data.transform.worker.workAssignment.customFieldGroup.%dataType%Field.%dataType%Value"}},person:{workerGroupPath:"person.customFieldGroup",metaGroupPath:"/workers/person/customFieldGroup/%dataGroupType%/nameCode/codeValue.dependencies.pattern.oneOf",metaAttributePath:"attributes./workers/person/customFieldGroup/%dataGroupType%/%valueFieldKey%",eventUri:"/events/hr/v1/worker.person.custom-field.%dataType%.change",
wfEventPaths:{itemID:"body.events[0].data.eventContext.worker.person.customFieldGroup.%dataType%Field.itemID",reqVal:"body.events[0].data.transform.worker.person.customFieldGroup.%dataType%Field.%dataType%Value"},permissions:{amount:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_amount_change",code:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_code_change",datetime:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_datetime_change",date:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_date_change",indicator:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_indicator_change",number:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_number_change",percentage:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_percentage_change",string:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_string_change",telephone:"workerInformationManagement.workerManagement.customFieldManagement.worker_person_customField_telephone_change"}},custom:{workerGroupPath:"customFieldGroup",metaGroupPath:"/workers/customFieldGroup/%dataGroupType%/nameCode/codeValue.dependencies.pattern.oneOf",metaAttributePath:"attributes./workers/customFieldGroup/%dataGroupType%/%valueFieldKey%",eventUri:"/events/hr/v1/worker.custom-field.%dataType%.change",wfEventPaths:{itemID:"body.events[0].data.eventContext.worker.customFieldGroup.%dataType%Field.itemID",reqVal:"body.events[0].data.transform.worker.customFieldGroup.%dataType%Field.%dataType%Value"},permissions:{amount:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_amount_change",code:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_code_change",datetime:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_datetime_change",date:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_date_change",indicator:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_indicator_change",number:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_number_change",percentage:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_percentage_change",string:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_string_change",telephone:"workerInformationManagement.workerManagement.customFieldManagement.worker_customField_telephone_change"}}}})}(),function(){function CustomFieldGroupService($injector){function CustomFields(worker,workerMeta,pendingEvents){this.fieldGroups={},function(self){_.forEach(categories,function(cat){_.set(self.fieldGroups,cat,CustomFieldParser.parseCustomFields(worker,workerMeta,cat,pendingEvents))})}(this)}var CustomFieldParser=$injector.get("redbox.connections.worker.CustomFieldParserService"),categories=["work","person","custom"];return CustomFields.prototype.getFieldGroup=function(category){return _.get(this.fieldGroups,category)},CustomFields.prototype.getFlatFieldGroup=function(catOrderArray){var flattenGroup=null,orderArray=catOrderArray?catOrderArray:["custom"],firstCat=_.head(orderArray);if(firstCat&&_.has(this.fieldGroups,firstCat)){flattenGroup=angular.copy(this.fieldGroups[firstCat]),flattenGroup.fields=[];for(var i=0;i<orderArray.length;i++){var fieldGroup=_.get(this.fieldGroups,orderArray[i]);flattenGroup.fields=_(flattenGroup.fields).concat(fieldGroup.fields).value()}}return flattenGroup},CustomFields}angular.module("redbox.connections.worker").factory("redbox.connections.worker.CustomFieldGroupService",CustomFieldGroupService),CustomFieldGroupService.$inject=["$injector"]}(),function(){function CustomFieldParserService($injector){function parseWorkerMeta(workerMeta,fieldGroup,fieldType){var parsedMetaFields={},metaPath=fieldGroup.metaGroupPath.replace("%dataGroupType%",fieldType.dataGroupType),metaAttrPath=fieldGroup.metaAttributePath.replace("%dataGroupType%",fieldType.dataGroupType).replace("%valueFieldKey%",fieldType.valueFieldKey),eventUri=fieldGroup.eventUri.replace("%dataType%",fieldType.dataType),metaCustomGroup=_.get(workerMeta,metaPath);return metaCustomGroup&&_.forEach(metaCustomGroup,function(metaField){var metaAttrData=_.get(metaField,metaAttrPath);if(_.contains(metaField.value,"ClientDefinedField")&&!metaAttrData.hidden){var itemID=metaField.value.replace(/[\$\^]/g,"");_.set(parsedMetaFields,itemID,{itemID:itemID,eventUri:eventUri,label:metaAttrData.longLabelName,defaultValue:_.isUndefined(metaAttrData.default)?"":metaAttrData.default,value:_.isUndefined(metaAttrData.default)?"":metaAttrData.default})}}),parsedMetaFields}function parseWorker(worker,fieldGroup,fieldType){var parsedFields={},workerFieldsGroup=_.get(worker,fieldGroup.workerGroupPath),fieldsFromWorker=workerFieldsGroup?workerFieldsGroup[fieldType.fieldKey]:[];return _.forEach(fieldsFromWorker,function(workerField){var itemID=workerField.itemID,value=workerField[fieldType.valueFieldKey];_.isUndefined(value)||_.set(parsedFields,itemID,{itemID:itemID,value:value})}),parsedFields}function addHelpers(group){group.hasFields=function(){return!_.isEmpty(this.fields)},group.hasPendingEvent=function(){var res=_.find(group.fields,function(field){return _.has(field,"pendingEvent")});return res}}function parseWorkflowEvents(pendingEvents,customField,fieldGroup){var itemIDPath=fieldGroup.wfEventPaths.itemID.replace("%dataType%",customField.dataType),reqValPath=fieldGroup.wfEventPaths.reqVal.replace(new RegExp("%dataType%","g"),customField.dataType);_.forEach(pendingEvents,function(wfEvent){var evtItemID=_.get(wfEvent,itemIDPath);evtItemID&&evtItemID===customField.itemID&&(_.set(customField,"pendingEvent.requestedValue",_.get(wfEvent,reqValPath)),_.set(customField,"pendingEvent.assignedTo",_.get(wfEvent,"history[0].assignedTo")),_.set(customField,"pendingEvent.submitter",_.get(wfEvent,"submitter")))})}var CustomFieldConstant=$injector.get("redbox.connections.worker.CustomFieldConstant"),LoggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=LoggerFactory.getLogger("redbox.connections.worker.CustomFieldParserService"),fieldGroupMap=CustomFieldConstant.CUSTOM_FIELDS_GROUP_MAP,fieldTypes=CustomFieldConstant.CUSTOM_FIELD_TYPES;this.parseCustomFields=function(worker,workerMeta,groupType,pendingEvents){var fieldGroup=fieldGroupMap[groupType],customFieldGroup={fields:[]};return _.forEach(fieldTypes,function(fieldType){var fieldsFromMeta=parseWorkerMeta(workerMeta,fieldGroup,fieldType),fieldsFromWorker=parseWorker(worker,fieldGroup,fieldType);_.forEach(fieldsFromMeta,function(customField){var workerField=fieldsFromWorker[customField.itemID];if(workerField&&!_.isUndefined(workerField.value))if(_.has(workerField,"value.pending")){var current="",requested="";switch(workerField.value.pending){case"add":current=customField.value,requested=workerField.value.value;break;case"change":current=workerField.value.prev,requested=workerField.value.value;break;case"remove":current=workerField.value.value,requested=""}_.set(customField,"value",current),_.set(customField,"pendingEvent.requestedValue",requested),_.set(customField,"pendingEvent.type",workerField.value.pending)}else customField.value=workerField.value;else logger.debug(customField.itemID+" not present in this worker's data");customField.groupType=groupType,customField.dataGroupType=fieldType.dataGroupType,customField.dataType=fieldType.dataType,customField.associateOID=worker.associateOID,parseWorkflowEvents(pendingEvents,customField,fieldGroup),customFieldGroup.fields.push(customField)})}),addHelpers(customFieldGroup),logger.debug("Done parsing %d custom fields on category '%s' for the worker.".replace("%d",customFieldGroup.fields.length).replace("%s",groupType)),customFieldGroup},this.parseFieldMeta=function(field,fieldMeta){var transforms=_.get(fieldMeta,"/data/transforms[0]"),key=_.keys(transforms)[0];if(key){var oneOf=_.find(_.get(transforms[key],"dependencies.pattern.oneOf",[]),function(item){return item.value.replace(/[\$\^]/g,"")===field.itemID});if(oneOf){var attrs=_.get(oneOf,"attributes"),itemKey=_.keys(attrs)[0],item=_.get(attrs,itemKey),valueSet=_.get(item,"valueSet.listValueItems");field.maxLength=item.maxLength,field.required=!item.optional,field.transformPath=itemKey.replace(/[\/]/g,"."),field.eventCtxPath=field.transformPath.substring(0,field.transformPath.lastIndexOf("."))+".itemID",valueSet&&(field.valueSet=[],_.forEach(valueSet,function(option){field.valueSet.push({value:option.idValue,description:option.itemDescription})}))}else logger.debug("Could not parse meta field data!")}},this.parseCustomFieldEvent=function(worker,workerMeta,pendingEvent){var parsedFields,itemIDPath,cdfMatch=pendingEvent.resourcePath.split("."),cdfEvent={category:cdfMatch[1],dataType:cdfMatch[cdfMatch.length-2]};return parsedFields=this.parseCustomFields(worker,workerMeta,cdfEvent.category,[pendingEvent]),itemIDPath=CustomFieldConstant.CUSTOM_FIELDS_GROUP_MAP[cdfEvent.category].wfEventPaths.itemID.replace("%dataType%",cdfEvent.dataType),cdfEvent.itemID=_.get(pendingEvent,itemIDPath),_.find(parsedFields.fields,function(field){return field.itemID===cdfEvent.itemID})}}angular.module("redbox.connections.worker").service("redbox.connections.worker.CustomFieldParserService",CustomFieldParserService),CustomFieldParserService.$inject=["$injector"]}(),function(){function CustomFieldPermissionService(UserPermissionService,SFFOConstant,CustomFieldConstant){this.canEdit=function(customField){var group=_.get(CustomFieldConstant.CUSTOM_FIELDS_GROUP_MAP,customField.groupType,{}),sffoPath=_.get(group,"permissions."+customField.dataType,{}),sffo=_.get(SFFOConstant,sffoPath,{});return UserPermissionService.init().then(function(){return UserPermissionService.hasPermission({sffo:sffo.sffo},customField.associateOID)})}}angular.module("redbox.connections.worker").service("redbox.connections.worker.CustomFieldPermissionService",CustomFieldPermissionService),CustomFieldPermissionService.$inject=["redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant","redbox.connections.worker.CustomFieldConstant"]}(),angular.module("redbox.connections.worker").factory("redbox.connections.worker.FocusSlideInService",["$language","adp.ng.ui.slidein.FocusSlideIn","adp.ng.logging.LoggerFactory",function($language,focusSlideIn){var backgroundImageCameraSlideIn,personalInfoSlideIn,payInfoSildeIn,profileImageCameraSlideIn,workInfoSlideIn,profileImageSlideIn,backgroundImageSlideIn,fieldInfoSildeIn,employeeTasksSlideIn;return{openSlideIn:function(id,scope){switch(id){case"background-image-camera":backgroundImageCameraSlideIn=focusSlideIn({scope:scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/worker/views/worker-background-image-camera.html"});break;case"worker-personal-info":personalInfoSlideIn=focusSlideIn({scope:scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/worker/views/worker-personal-info.html"});break;case"worker-pay-info":payInfoSildeIn=focusSlideIn({scope:scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/worker/views/worker-pay-info.html"});break;case"custom-field-slide-info":fieldInfoSildeIn=focusSlideIn({scope:scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/worker/views/custom-field-slide-info.html"});break;case"profile-image-camera":profileImageCameraSlideIn=focusSlideIn({scope:scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/worker/views/profile-image-camera.html"});break;case"worker-work-info":workInfoSlideIn=focusSlideIn({scope:scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/worker/views/worker-work-info.html"});break;case"profile-image":profileImageSlideIn=focusSlideIn({scope:scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/worker/views/worker-profile-image.html"});break;case"background-image":backgroundImageSlideIn=focusSlideIn({scope:scope,backButton:$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/worker/views/worker-profile-background.html"});break;case"employee-tasks":employeeTasksSlideIn=focusSlideIn({scope:scope,backButton:$language.get("shared.BACK"),contentTemplate:"app/framework/modules/tasks/views/cross-type-view.html"});break;default:return!1}return!0},closeSlideIn:function(id){switch(id){case"background-image-camera":backgroundImageCameraSlideIn&&backgroundImageCameraSlideIn.hide();break;case"worker-personal-info":personalInfoSlideIn&&personalInfoSlideIn.hide();break;case"pay-info-slide":payInfoSildeIn&&payInfoSildeIn.hide();break;case"field-info-slide":fieldInfoSildeIn&&fieldInfoSildeIn.hide();break;case"profile-image-camera":profileImageCameraSlideIn&&profileImageCameraSlideIn.hide();break;case"worker-work-info":workInfoSlideIn&&workInfoSlideIn.hide();break;case"profile-image":profileImageSlideIn&&profileImageSlideIn.hide();break;case"background-image":backgroundImageSlideIn&&backgroundImageSlideIn.hide();break;case"employee-tasks":employeeTasksSlideIn&&employeeTasksSlideIn.hide();break;default:return!1}return!0},loadingIndicator:function(id,show){switch(id){case"background-image-camera":backgroundImageCameraSlideIn&&backgroundImageCameraSlideIn.loadingIndicator(show);break;case"personal-info-slide":personalInfoSlideIn&&personalInfoSlideIn.loadingIndicator(show);break;case"pay-info-slide":payInfoSildeIn&&payInfoSildeIn.loadingIndicator(show);break;case"field-info-slide":fieldInfoSildeIn&&fieldInfoSildeIn.loadingIndicator(show);break;case"profile-image-camera":profileImageCameraSlideIn&&profileImageCameraSlideIn.loadingIndicator(show);break;case"worker-work-info":workInfoSlideIn&&workInfoSlideIn.loadingIndicator(show);break;case"profile-image":profileImageSlideIn&&profileImageSlideIn.loadingIndicator(show);break;case"background-image":backgroundImageSlideIn&&backgroundImageSlideIn.loadingIndicator(show);break;case"employee-tasks":employeeTasksSlideIn&&employeeTasksSlideIn.loadingIndicator(show);break;default:return!1}return!0}}}]),angular.module("redbox.connections.worker").service("redbox.connections.worker.VCardService",["$injector",function($injector){function formatDateComponent(value){return value<=9?"0"+value:value}function formatDate(){var date=new Date,month=formatDateComponent(date.getMonth()+1),day=formatDateComponent(date.getDate()),hours=formatDateComponent(date.getHours()),minutes=formatDateComponent(date.getMinutes()),seconds=formatDateComponent(date.getSeconds());return date.getFullYear()+""+month+day+"T"+hours+minutes+seconds+"Z"}function formatAddressLabel(addressParts){var parts=[],temp="";return addressParts&&(addressParts[0]&&parts.push(addressParts[0]),(addressParts[1]||addressParts[2]||addressParts[3])&&(addressParts[1]&&(temp+=addressParts[1],(addressParts[2]||addressParts[3])&&(temp+=",")),addressParts[2]&&(temp+=" "+addressParts[2]),addressParts[3]&&(temp+=" "+addressParts[3]),parts.push(temp)),addressParts[4]&&parts.push(addressParts[4])),parts.join("\\n")}function versionThree(card){var vcard="BEGIN:VCARD"+LF,addressParts=[];if(vcard+="VERSION:3.0"+LF,vcard+="N:",card.firstName&&(vcard+=card.firstName+SC),card.lastName&&(vcard+=card.lastName+SC+SC+SC),!card.fullName)throw"VCARD requires the full name property.";return vcard+=LF+"FN:"+card.fullName,card.dept&&(vcard+=LF+"ORG:;"+card.dept),card.title&&(vcard+=LF+"TITLE:"+card.title),card.workPhone&&(vcard+=LF+"TEL;TYPE=WORK,VOICE:"+card.workPhone),card.workMobile&&(vcard+=LF+"TEL;TYPE=CELL,VOICE:"+card.workMobile),card.workAddress&&(addressParts.push(card.workAddress),addressParts.push(card.workCity),addressParts.push(card.workState),addressParts.push(card.workZip),addressParts.push(card.workCountry),vcard+=LF+"ADR;TYPE=WORK:;;",vcard+=addressParts.join(SC),vcard+=LF+"LABEL;TYPE=WORK:",vcard+=formatAddressLabel(addressParts)),card.workEmail&&(vcard+=LF+"EMAIL;TYPE=PREF,INTERNET:"+card.workEmail),vcard+=LF+"REV:"+formatDate(),vcard+=LF+"END:VCARD"}function versionFour(card){var vcard="BEGIN:VCARD"+LF,addressParts=[];if(vcard+="VERSION:4.0"+LF,vcard+="N:",card.firstName&&(vcard+=card.firstName+SC),card.lastName&&(vcard+=card.lastName+SC+SC+SC),!card.fullName)throw"VCARD requires the full name property.";return vcard+=LF+"FN:"+card.fullName,card.title&&(vcard+=LF+"TITLE:"+card.title),card.workPhone&&(vcard+=LF+"TEL;TYPE=work,voice;VALUE=uri:tel:"+card.workPhone),card.workMobile&&(vcard+=LF+"TEL;TYPE=cell,voice;VALUE=uri:tel:"+card.workMobile),card.workAddress&&(vcard+=LF+'ADR;TYPE=work;LABEL="',addressParts.push(card.workAddress),card.workCity&&addressParts.push(card.workCity),card.workState&&addressParts.push(card.workState),card.workZip&&addressParts.push(card.workZip),vcard+=formatAddressLabel(addressParts),vcard+=DQ,vcard+=":;;",vcard+=addressParts.join(SC)),card.workEmail&&(vcard+=LF+"EMAIL:"+card.workEmail),vcard+=LF+"REV:"+formatDate(),vcard+=LF+"END:VCARD"}function exportVCard(card,version){switch(version){case 4:return versionFour(card);case 3:return versionThree(card);default:return versionThree(card)}}var $filter=$injector.get("$filter"),WorkflowUtils=$injector.get("redbox.workflow.WorkflowUtils"),LF="\n",SC=";",DQ='"';this.formatVCardForWorker=function(worker){var card={};return card.firstName=worker.person.legalName.givenName,card.lastName=worker.person.legalName.familyName1,card.fullName=worker.person.legalName.formattedName,_.has(worker,"businessCommunication.landlines[0]")&&(card.workPhone=$filter("phoneNumberFilter")({countryDialing:WorkflowUtils.getValue(worker.businessCommunication.landlines[0].countryDialing),formattedNumber:WorkflowUtils.getValue(worker.businessCommunication.landlines[0].formattedNumber)},!0)),_.has(worker,"businessCommunication.mobiles[0]")&&(card.workMobile=$filter("phoneNumberFilter")({countryDialing:WorkflowUtils.getValue(worker.businessCommunication.mobiles[0].countryDialing),formattedNumber:WorkflowUtils.getValue(worker.businessCommunication.mobiles[0].formattedNumber)},!0)),_.has(worker,"businessCommunication.emails[0]")&&(card.workEmail=WorkflowUtils.getValue(worker.businessCommunication.emails[0].emailUri)),worker.workAssignments&&worker.workAssignments[0]&&(card.title=worker.workAssignments[0].jobCode.longName,worker.workAssignments[0].assignedOrganizationalUnits&&worker.workAssignments[0].assignedOrganizationalUnits[0]&&worker.workAssignments[0].assignedOrganizationalUnits[0].nameCode&&(card.dept=worker.workAssignments[0].assignedOrganizationalUnits[0].nameCode.longName),worker.workAssignments[0].assignedWorkLocations&&worker.workAssignments[0].assignedWorkLocations[0]&&worker.workAssignments[0].assignedWorkLocations[0].address&&(worker.workAssignments[0].assignedWorkLocations[0].address.lineOne&&(card.workAddress=worker.workAssignments[0].assignedWorkLocations[0].address.lineOne),worker.workAssignments[0].assignedWorkLocations[0].address.cityName&&(card.workCity=worker.workAssignments[0].assignedWorkLocations[0].address.cityName),worker.workAssignments[0].assignedWorkLocations[0].address.countrySubdivisionLevel1&&worker.workAssignments[0].assignedWorkLocations[0].address.countrySubdivisionLevel1.codeValue&&(card.workState=worker.workAssignments[0].assignedWorkLocations[0].address.countrySubdivisionLevel1.codeValue),worker.workAssignments[0].assignedWorkLocations[0].address.postalCode&&(card.workZip=worker.workAssignments[0].assignedWorkLocations[0].address.postalCode),worker.workAssignments[0].assignedWorkLocations[0].address.countryCode&&(card.workCountry=worker.workAssignments[0].assignedWorkLocations[0].address.countryCode))),exportVCard(card)},this.downloadVCard=function(card){if(navigator.msSaveBlob){var blob=new window.Blob([card],{type:"text/vcard;charset=utf-8;"});navigator.msSaveBlob(blob,"vcard.vcf")}else{var a=document.createElement("a");document.getElementsByTagName("body")[0].appendChild(a);for(var result="",i=0;i<card.length;i++){var hex=card.charCodeAt(i).toString(16);result+=("0000"+hex).slice(-4)}a.href="/redboxapi/core/tools/v1/echo/vcard?encoding=hex2&content="+result,a.target="_blank",a.download="vcard.vcf",a.click(),document.getElementsByTagName("body")[0].removeChild(a)}}}]),angular.module("redbox.connections.worker").factory("redbox.connections.worker.WorkerPermissionService",["$injector",function($injector){function WorkerPermissions(){this.personalInfo={},this.personalContact={},this.address={legal:{},personal:{}},this.birthdate={},this.gender={},this.race={},this.ethnicity={},this.disability={},this.militaryStatus={},this.militaryClassification={},this.highestEducationLevel={},this.personalCommunication={email:{},landline:{},mobile:{}},this.businessCommunication={landline:{},mobile:{},fax:{},email:{}},this.orgChart={},this.transfer=!1}var permissions,$q=$injector.get("$q"),userIdentity=$injector.get("redbox.ext.shared.services.UserIdentityService"),UserPermissionService=$injector.get("redbox.ext.shared.services.UserPermissionService"),objectEntitlementsService=$injector.get("redbox.ext.shared.services.ObjectEntitlementsService"),SFFO=$injector.get("redbox.ext.shared.constants.SFFOConstant"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),SOR=$injector.get("redbox.ext.shared.constants.Sors"),logger=loggerFactory.getLogger("redbox.connections.worker.WorkerPermissionService"),applicationId=UserPermissionService.getApplicationId("MobileESSWorkerProfile"),API={getPermissions:function(aoid){return UserPermissionService.init().then(function(){return permissions=new WorkerPermissions,permissions.personalInfo.read=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.workerProfileManagement.worker_read,aoid),permissions.personalContact.read=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.personalContactManagement.personalContact_read,aoid),permissions.personalContact.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_add,aoid),permissions.personalContact.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_change,aoid),permissions.personalContact.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_remove,aoid),permissions.address.legal.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_add,aoid),permissions.address.legal.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_change,aoid),"ENTERPRISE"!==applicationId&&"HR Anytime - ESS"!==applicationId&&(permissions.address.personal.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.addressManagement.worker_personalAddress_change,aoid)),permissions.race.read=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.associateManagement.worker_race_read,aoid),permissions.race.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.associateManagement.worker_race_change,aoid),permissions.ethnicity.read=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.associateManagement.worker_ethnicity_read,aoid),permissions.ethnicity.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.associateManagement.worker_ethnicity_change,aoid),permissions.militaryStatus.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.associateManagement.worker_militaryStatus_change,aoid),permissions.militaryClassification.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.associateManagement.worker_militaryClassification_change,aoid),permissions.highestEducationLevel.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.associateManagement.worker_highestEducationLevel_change,aoid),permissions.disability.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.associateManagement.worker_disability_change,aoid),permissions.personalCommunication.email.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_add,aoid),permissions.personalCommunication.email.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_change,aoid),permissions.personalCommunication.email.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_remove,aoid),permissions.personalCommunication.landline.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_add,aoid),permissions.personalCommunication.landline.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_change,aoid),permissions.personalCommunication.landline.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_remove,aoid),permissions.personalCommunication.mobile.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_add,aoid),permissions.personalCommunication.mobile.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_change,aoid),permissions.personalCommunication.mobile.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_remove,aoid),permissions.businessCommunication.landline.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_add),permissions.businessCommunication.landline.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_change),permissions.businessCommunication.landline.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_remove),permissions.businessCommunication.mobile.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_add),permissions.businessCommunication.mobile.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_change),permissions.businessCommunication.mobile.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_remove),permissions.businessCommunication.fax.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_add),permissions.businessCommunication.fax.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_change),permissions.businessCommunication.fax.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_remove),permissions.businessCommunication.email.add=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_add),permissions.businessCommunication.email.change=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_change),permissions.businessCommunication.email.remove=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_remove),permissions.orgChart.read=UserPermissionService.hasPermission(SFFO.enterpriseInformationManagement.flexGraphManagement.hierarchyViewing),permissions.transfer=UserPermissionService.hasPermission(SFFO.workerInformationManagement.workerManagement.workerAdvancementManagement.worker_transfer,aoid),permissions}).catch(function(error){return logger.error("workerProfilePermissions: exception caught",error),$q.reject(error)})},getPermittedTiles:function(workerPermissions,talentPermissions){var permittedTiles=[];return permittedTiles.push({id:"what-i-do",title:"connections.PROFILE_EDIT_STATUS",url:"app/connections/modules/worker/views/what-i-do-tile.html",animateTarget:".what-i-do-wrapper",showLoading:!1,show:!1,closeable:!0,isHideable:!1,order:0}),permittedTiles.push({id:"profile-preferences",title:"connections.PROFILE_HIDE_SHOW_TILE",url:"app/connections/modules/worker/views/worker-profile-preferences-tile.html",animateTarget:".worker-profile-preferences",showLoading:!1,show:!1,closeable:!0,isHideable:!1,isSelfView:!0,order:1}),_.get(workerPermissions,"personalInfo.read")&&permittedTiles.push({id:"personal-info",title:"connections.PROFILE_PERSONAL_INFO",url:"app/connections/modules/worker/views/worker-personal-info-tile.html",showLoading:!1,privacyVisibility:"HR",privacyAcknowledged:!1,show:!1,isHideable:!0,order:2}),permittedTiles.push({id:"work-info",title:"connections.PROFILE_WORK_INFO",url:"app/connections/modules/worker/views/worker-work-info-tile.html",showLoading:!1,isHideable:!0,show:!1,order:3}),permittedTiles.push({id:"pay-info",title:"connections.PROFILE_PAY_INFO",url:"app/connections/modules/worker/views/worker-pay-info-tile.html",showLoading:!1,privacyVisibility:"MANAGER",privacyAcknowledged:!1,show:!1,isHideable:!0,isSelfView:!0,order:4}),permittedTiles.push({id:"profileLinks",title:"connections.PROFILE_LINKS_INFO",url:"app/company/views/company-links-tile.html",showLoading:!1,isHideable:!0,isSelfView:!0,show:!0,order:20}),_.get(workerPermissions,"orgChart.read")&&permittedTiles.push({id:"orgchart",title:"connections.ORGCHART_ORGCHART",url:"app/connections/modules/orgchart/views/org-chart-tile.html",showLoading:!1,show:!1,isHideable:!0,order:5}),(_.get(workerPermissions,"customFieldGroup.read")||_.get(workerPermissions,"person.customFieldGroup.read"))&&permittedTiles.push({id:"customfield",title:"connections.PROFILE_CUSTOM_FIELD",url:"app/connections/modules/worker/views/custom-field-tile.html",showLoading:!1,show:!0,isHideable:!0,order:6}),_.get(workerPermissions,"personalContact.read")&&permittedTiles.push({id:"emergency-contacts",title:"connections.PROFILE_EMERGENCY_CONTACTS",url:"app/connections/modules/worker/views/emergency-contacts-tile.html",showLoading:!1,show:!0,privacyVisibility:"MANAGER",privacyAcknowledged:!1,isHideable:!0,order:6}),applicationId!==SOR.US.ENTERPRISE&&applicationId!==SOR.US.HR_ANYTIME&&(_.get(talentPermissions,"educationalDegreeManagement.read")&&permittedTiles.push({
id:"educationalDegree-management",title:"talent.TALENT_EDUCATION_MANAGEMENT",url:"app/talent/views/educational-degree-management-tile.html",showLoading:!1,show:!1,isHideable:!0,order:7}),_.get(talentPermissions,"competencyManagement.read")===!0&&permittedTiles.push({id:"competency-management",title:"talent.TALENT_COMPETENCY_MANAGEMENT",url:"app/talent/views/competency-management-tile.html",showLoading:!1,show:!1,isHideable:!0,order:8}),(_.get(talentPermissions,"licenseManagement.read")||_.get(talentPermissions,"certificationManagement.read"))&&permittedTiles.push({id:"certification-license-management",title:"talent.TALENT_CERTIFICATION_LICENSE_MANAGEMENT",url:"app/talent/views/certification-license-management-tile.html",showLoading:!1,show:!1,isHideable:!0,order:9}),_.get(talentPermissions,"languageManagement.read")&&permittedTiles.push({id:"language-management",title:"talent.TALENT_LANGUAGE_MANAGEMENT",url:"app/talent/views/language-management-tile.html",showLoading:!1,show:!1,isHideable:!0,order:90}),_.get(talentPermissions,"membershipManagement.read")&&permittedTiles.push({id:"membership-management",title:"talent.TALENT_MEMBERSHIP_MANAGEMENT",url:"app/talent/views/membership-management-tile.html",showLoading:!1,show:!1,isHideable:!0,order:91}),(_.get(talentPermissions,"recognitionManagement")||_.get(talentPermissions,"performanceManagement.read")||_.get(talentPermissions,"careerDevelopmentManagement.read")||_.get(talentPermissions,"learningManagement.read")||_.get(talentPermissions,"careerSearch.read"))&&permittedTiles.push({id:"talent-sso",title:"framework.DASHBOARD_TALENT",url:"app/talent/views/talent-sso-tile.html",showLoading:!1,show:!1,isHideable:!0,isSelfView:!0,order:92})),permittedTiles.push({id:"employee-task-cards",title:"framework.PENDING_APPROVALS",url:"app/connections/modules/worker/views/employee-approve-tile.html",showLoading:!1,show:!1,order:"z"}),permittedTiles.push({id:"onboarding-checklist-tile",title:"onboarding.THINGS_TO_DO_TITLE_CHECKLISTS",url:"app/connections/modules/worker/views/onboarding-checklist-tile.html",showLoading:!1,show:!1,order:"z"}),permittedTiles},isEntitled:function(employeeAoid){return userIdentity.getAoid().then(function(userAoid){return userAoid!==employeeAoid?objectEntitlementsService.getManagerEntitlements().then(function(){return objectEntitlementsService.verifyManagerEntitlements(employeeAoid)?{hasManagerEntitlements:!0,selfAoid:userAoid}:$q.reject("Not entitled")}).catch(function(error){return $q.reject(error)}):{hasManagerEntitlements:!1,selfAoid:userAoid}})}};return API}]),angular.module("redbox.connections.worker").factory("redbox.connections.worker.WorkerPreferencesService",["$injector",function($injector){function getPreferences(){var defer=$q.defer();getPreferencesPromise=defer.promise;try{UserPreferenceService.getPreference(UserPreferenceService.KEYS.PROFILE_DASHBOARD).then(function(result){currentPreferences=_.has(result,"value")?result.value:[],defer.resolve(currentPreferences)})}catch(e){logger.error("WorkerPreferencesService: exception caught",e),defer.reject(e)}return getPreferencesPromise}function setPreferences(newPreferences){var defer=$q.defer();return UserPreferenceService.setPreference(UserPreferenceService.KEYS.PROFILE_DASHBOARD,newPreferences).then(function(){currentPreferences=newPreferences,defer.resolve(currentPreferences)}),defer.promise}function defaultPreference(tile){this.name=tile.id,this.hidden=!tile.show,this.order=parseInt(tile.order)||0,this.privacyAcknowledged=tile.privacyAcknowledged||!1}var currentPreferences,getPreferencesPromise,$q=$injector.get("$q"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=loggerFactory.getLogger("redbox.connections.worker.WorkerPreferencesService"),UserPreferenceService=$injector.get("redbox.ext.shared.services.UserPreferenceService");return{getPreferences:function(){return $q.when(currentPreferences||getPreferencesPromise||getPreferences())},hideShowTiles:function(tiles){var existingPreference,defer=$q.defer(),tempPreferences=_.cloneDeep(currentPreferences);return _.forEach(tiles,function(tile){existingPreference=_.find(tempPreferences,function(tempPreference){return tempPreference.name===tile.id&&(tempPreference.hidden=!tile.show,!0)}),existingPreference||tempPreferences.push(new defaultPreference(tile))}),setPreferences(tempPreferences).then(function(result){defer.resolve(result)},function(error){defer.reject(error)}),defer.promise},acknowledgePrivacy:function(tile){var existingPreference,defer=$q.defer(),tempPreferences=_.cloneDeep(currentPreferences);return existingPreference=_.find(tempPreferences,function(tempPreference){return tempPreference.name===tile.id&&(tempPreference.privacyAcknowledged=!0,!0)}),existingPreference||(tile.isPrivacyAcknowledged&&(tile.privacyAcknowledged=!0),tempPreferences.push(new defaultPreference(tile))),setPreferences(tempPreferences).then(function(result){defer.resolve(result)},function(error){defer.reject(error)}),defer.promise}}}]),angular.module("redbox.connections.worker").factory("redbox.connections.worker.WorkerService",["$injector",function($injector){function getMetaFieldProperty(meta,field,property){var value;return meta&&meta[field]&&meta[field].hasOwnProperty(property)&&(value=meta[field][property]),value}function getWorker(workerService){var attr,defer=$q.defer(),permissions={read:{sffo:SFFO.workerInformationManagement.workerManagement.workerProfileManagement.worker_read.sffo}};return workerService.getWorkerPromise=defer.promise,workerService.workflow.wfStatusCode=null,workerService.workflow.wfOutsideRedbox=!1,workerService.workflow.pendingEvents=null,workerService.isPermitted(permissions.read).then(function(permitted){permitted?$q.when(workerService.config.href||workerService.getOperationHref(permissions.read)).then(function(href){request.url=workerService.config.workflowEnabled?"/wf"+href:href,request.aoid=workerService.config.currentViewAoid,workerService.config.masked||(request.headers.accept=noMaskHeader.accept),attr=[{key:"aoid",value:workerService.config.currentViewAoid}],$http(request).then(function(workerResponse){workerResponse&&!_.isEmpty(workerResponse.data)?MetaService.getMeta(permissions.read,null,attr).then(function(metaResponse){workerService.workerMeta=metaResponse?metaResponse:{}},function(){workerService.workerMeta={}}).finally(function(){workerService.config.workflowEnabled?(workerService.workflow.wfStatusCode=workerResponse.data.wfStatusCode,workerService.workflow.pendingEvents=workerResponse.data.pendingEvents,workerResponse.data.hasOwnProperty("error")&&1002===workerResponse.data.wfStatusCode&&!workerResponse.data.hasOwnProperty("pendingData")&&(workerService.workflow.wfOutsideRedbox=!0),workerResponse.data.pendingData&&workerResponse.data.pendingData.workers&&workerResponse.data.pendingData.workers[0]?workerService.worker=WorkflowUtilsService.map(workerResponse.data.currentData.workers[0],workerResponse.data.pendingData.workers[0]):workerService.worker=workerResponse.data.currentData.workers[0],workerService.worker.workAssignments&&workerService.worker.workAssignments.length>1&&(workerService.worker.workAssignments=$filter("orderBy")(workerService.worker.workAssignments,"primaryIndicator")),WorkflowStatusService.getWorkflowStatus({associateOID:workerService.worker.associateOID,bustCache:!0}).then(function(workflowStatus){workerService.workflowStatus=workflowStatus}).finally(function(){defer.resolve(workerService.worker)})):workerResponse.data.workers&&workerResponse.data.workers[0]&&(workerService.worker=workerResponse.data.workers[0],defer.resolve(workerService.worker)),workerService.customFields=new CustomFields(workerService.worker,workerService.workerMeta.meta,workerResponse.data.pendingEvents)}):defer.reject("No worker data returned")},function(error){defer.reject(error)})},function(error){defer.reject(error)}):defer.reject("User is not permitted to worker.read operation")},function(error){defer.reject(error)}),defer.promise}var $http=$injector.get("$http"),$q=$injector.get("$q"),$filter=$injector.get("$filter"),BaseSffoService=$injector.get("redbox.connections.worker.BaseSffoService"),WorkflowStatusService=$injector.get("redbox.workflow.WorkflowStatusService"),WorkflowUtilsService=$injector.get("redbox.workflow.WorkflowUtils"),MetaService=$injector.get("redbox.framework.meta.MetaService"),CustomFields=$injector.get("redbox.connections.worker.CustomFieldGroupService"),SFFO=$injector.get("redbox.ext.shared.constants.SFFOConstant"),request={method:"GET",headers:{}},noMaskHeader={accept:"application/json;MASKED=false"},WorkerService=function(config){BaseSffoService.constructor.call(this);var defaults={workflowEnabled:!1,masked:!0};this.config=angular.extend(defaults,config),this.worker=null,this.workerMeta=null,this.workflowStatus=null,this.customFields=null,this.workflow={wfStatusCode:null,wfOutsideRedbox:!1,pendingEvents:null},this.getWorkerPromise=null};return WorkerService.prototype=Object.create(BaseSffoService.constructor.prototype),WorkerService.prototype.constructor=WorkerService,WorkerService.prototype.get=function(bustCache){return bustCache&&(this.worker=null,this.getWorkerPromise=null),$q.when(this.worker||this.getWorkerPromise||getWorker(this))},WorkerService.prototype.showField=function(field){var isHidden=!1;return _.isEmpty(this.workerMeta)||(isHidden=getMetaFieldProperty(this.workerMeta.meta,field,"hidden")),!isHidden},WorkerService.prototype.isFieldOptional=function(field){var isOptional=!0;return _.isEmpty(this.workerMeta)||(isOptional=getMetaFieldProperty(this.workerMeta.meta,field,"optional")),isOptional},WorkerService.prototype.getHelperMessage=function(field){if(!_.isEmpty(this.workerMeta))return getMetaFieldProperty(this.workerMeta.meta,field,"helperMessage")},WorkerService.prototype.getPrimaryManager=function(){var primaryManager,reportsToRelationshipCode;return _.forEach(_.get(this.worker,"workAssignments[0].reportsTo"),function(manager){if(primaryManager=manager,reportsToRelationshipCode=_.get(manager,"reportsToRelationshipCode.codeValue"),reportsToRelationshipCode&&"manager"===reportsToRelationshipCode.toLowerCase())return!1}),primaryManager},WorkerService.prototype.getManagerWorker=function(href){return $http.get(href).then(function(response){return _.get(response,"data",{})})},WorkerService}]),angular.module("redbox.connections.worker").constant("WORKER_CONSTANTS",{STATUS_SHOW_DEFAULT:1,STATUS_SHOW_CHANGE_FORM:2,STATUS_SHOW_NOTIFICATIONS:3,STATUS_SHOW_PENDING:4,STATUS_SHOW_CANCEL_CONFIRMATION:5,STATUS_HIDE_ACTION_BUTTONS:6}),function(){function WorkerAddressMetaFormBase($timeout,$language,$adpModal,MetaFormService,ADDRESS_CONSTANTS,AddressValidationService){function parseAddressValidationResponse(validationObject){var validationMessage;return validationMessage=_.isUndefined(validationObject)?validationMessages.error:_.get(validationMessages,validationObject.validationResult)}var validationMessages={valid:{type:"success",text:$language.get("connections.ADDRESS_VALIDATION_VALID")},incomplete:{type:"warning",text:$language.get("connections.ADDRESS_VALIDATION_INCOMPLETE")},invalid:{type:"warning",text:$language.get("connections.ADDRESS_VALIDATION_INVALID")},error:{type:"error",text:$language.get("connections.ADDRESS_VALIDATION_ERROR")}};this.getEvent=function(){},this.getFieldModel=function(){},this.$onInit=function(){var self=this,event=this.event,model={};_.set(model,event.path,this.fieldModel),this.onLoading({loading:!0}),MetaFormService.loadMeta(model,{aoid:this.aoid,sffo:event.sffo,workflowEnabled:event.workflowEnabled}).then(function(metaForm){self.metaForm=metaForm}).catch(function(err){self.onError(err)}).finally(function(){self.onLoading({loading:!1})})},this.onFormStateChange=function(formState){this.validationMessage="",this.isAddressValidated=!1,this.formState=formState},this.save=function(){var self=this;this.onLoading({loading:!0}),MetaFormService.save(this.metaForm).then(function(res){self.onSave({result:res})}).catch(function(err){self.onError(err)}).finally(function(){self.onLoading({loading:!1})})},this.cancel=function(){this.onCancel()},this.validateAddress=function(){var queryElements=this.queryElements,inputFields=this.metaForm.inputFields,query={},self=this;_.forEach(queryElements,function(queryEl,queryKey){var inputValue=_.get(inputFields,queryEl+".value");_.set(query,queryKey,inputValue)}),query&&(self.isLoading=!0,AddressValidationService.performQuery(query).then(function(validationObject){self.validationObject=validationObject,validationObject.validationResult===ADDRESS_CONSTANTS.VALID&&validationObject.hasCorrections?self.modalObj=$adpModal.open({title:$language.get("connections.ADDRESS_VALIDATION_SUGGESTED_ADDRESS"),contentUrl:"app/connections/modules/worker/worker-fields/addresses/worker-address-suggestion-modal.html",scope:self.$scope,footer:!1}):(self.isAddressValidated=!0,self.showValidationMessage(parseAddressValidationResponse(validationObject)))}).catch(function(err){self.showValidationMessage(validationMessages.error)}).finally(function(){self.isLoading=!1}))},this.onValidateAddressApply=function(validationObject){var queryElements=this.queryElements,inputFields=this.metaForm.inputFields;_.forEach(validationObject.suggestedAddress,function(value,key){var formInputId=_.get(queryElements,key),formElement=_.get(inputFields,formInputId);formElement.value=value}),this.isAddressValidated=!0,this.showValidationMessage(validationMessages.valid),this.modalObj.$close()},this.onValidateAddressCancel=function(){this.modalObj.$close()},this.showValidationMessage=function(message){var self=this;this.validationMessage="",$timeout(function(){self.validationMessage=message})}}angular.module("redbox.connections.worker").service("redbox.connections.worker.WorkerAddressMetaFormBase",WorkerAddressMetaFormBase),WorkerAddressMetaFormBase.$inject=["$timeout","$language","adp.ng.ui.modal.adpModalService","redbox.connections.metaforms.MetaFormService","redbox.connections.addressvalidation.CONSTANTS","redbox.connections.addressvalidation.USPSValidationService"]}(),function(){function WorkerHomeAddressMetaFieldComponent($scope,SFFOConstant,WorkerAddressMetaFormBase){var ctrl=this;ctrl.$scope=$scope,angular.extend(ctrl,WorkerAddressMetaFormBase);var EVENTS={add:{sffo:SFFOConstant.workerInformationManagement.workerManagement.addressManagement.worker_personalAddress_add.sffo,path:"worker.person.personalAddress",workflowEnabled:!0},change:{sffo:SFFOConstant.workerInformationManagement.workerManagement.addressManagement.worker_personalAddress_change.sffo,path:"worker.person.personalAddress",workflowEnabled:!0}};ctrl.event=EVENTS[ctrl.action],ctrl.workflowEnabled=!0,ctrl.queryElements={lineOne:"/worker/person/personalAddress/lineOne",lineTwo:"/worker/person/personalAddress/lineTwo",lineThree:"/worker/person/personalAddress/lineThree",city:"/worker/person/personalAddress/cityName",state:"/worker/person/personalAddress/countrySubdivisionLevel1/codeValue",postalCode:"/worker/person/personalAddress/postalCode",country:"/worker/person/personalAddress/countryCode"},ctrl.enableAddressValidation=function(){return!ctrl.isAddressValidated&&ctrl.formState&&ctrl.formState.$dirty&&_.get(ctrl.metaForm,"inputFields./worker/person/personalAddress/sameAsAddressIndicator.value")===!1&&"US"===_.get(ctrl.metaForm,"inputFields./worker/person/personalAddress/countryCode.value")&&_.get(ctrl.metaForm,"inputFields./worker/person/personalAddress/lineOne.value")}}angular.module("redbox.connections.worker").component("conWorkerHomeAddressMetaForm",{bindings:{fieldModel:"<",aoid:"<",action:"@",validationEnabled:"@",onLoading:"&",onSave:"&",onCancel:"&",onError:"&"},templateUrl:"app/connections/modules/worker/worker-fields/addresses/worker-home-address-meta-form-component.html",controller:WorkerHomeAddressMetaFieldComponent}),WorkerHomeAddressMetaFieldComponent.$inject=["$scope","redbox.ext.shared.constants.SFFOConstant","redbox.connections.worker.WorkerAddressMetaFormBase"]}(),function(){function WorkerLegalAddressMetaFieldComponent($scope,SFFOConstant,WorkerAddressMetaFormBase){var ctrl=this;ctrl.$scope=$scope,angular.extend(ctrl,WorkerAddressMetaFormBase);var EVENTS={add:{sffo:SFFOConstant.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_add.sffo,path:"worker.person.legalAddress",workflowEnabled:!0},change:{sffo:SFFOConstant.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_change.sffo,path:"worker.person.legalAddress",workflowEnabled:!0}};ctrl.event=EVENTS[ctrl.action],ctrl.workflowEnabled=!0,ctrl.queryElements={lineOne:"/worker/person/legalAddress/lineOne",lineTwo:"/worker/person/legalAddress/lineTwo",lineThree:"/worker/person/legalAddress/lineThree",city:"/worker/person/legalAddress/cityName",state:"/worker/person/legalAddress/countrySubdivisionLevel1/codeValue",postalCode:"/worker/person/legalAddress/postalCode",country:"/worker/person/legalAddress/countryCode"},ctrl.enableAddressValidation=function(){return!ctrl.isAddressValidated&&ctrl.formState&&ctrl.formState.$dirty&&"US"===_.get(ctrl.metaForm,"inputFields./worker/person/legalAddress/countryCode.value")&&_.get(ctrl.metaForm,"inputFields./worker/person/legalAddress/lineOne.value")}}angular.module("redbox.connections.worker").component("conWorkerLegalAddressMetaForm",{bindings:{fieldModel:"<",aoid:"<",action:"@",validationEnabled:"@",onLoading:"&",onSave:"&",onCancel:"&",onError:"&"},templateUrl:"app/connections/modules/worker/worker-fields/addresses/worker-legal-address-meta-form-component.html",controller:WorkerLegalAddressMetaFieldComponent}),WorkerLegalAddressMetaFieldComponent.$inject=["$scope","redbox.ext.shared.constants.SFFOConstant","redbox.connections.worker.WorkerAddressMetaFormBase"]}(),angular.module("redbox.connections.yourteam").component("yourTeamComponent",{templateUrl:function($injector){var clientDeviceService=$injector.get("adp.ng.utilities.ClientDeviceService");return clientDeviceService.isMobile()?"app/connections/modules/yourteam/views/mobile/index.html":"app/connections/modules/yourteam/views/index.html"},controller:["$scope","$rootScope","$language","$injector","$location","$q","redbox.ext.shared.constants.SFFOConstant","redbox.connections.yourteam.YourTeamContants","redbox.connections.yourteam.YourTeamService","redbox.ext.shared.services.UserPermissionService","redbox.connections.worker.WorkerService","redbox.workflow.WorkflowPendingEventsService","redbox.workflow.CONSTANTS","redbox.ext.shared.services.ObjectEntitlementsService",function($scope,$rootScope,$language,$injector,$location,$q,sffoConstant,yourTeamConstants,yourTeamService,userPermissionService,workerService,workflowPendingEventsService,workflowConstants,ObjectEntitlementsService){var vm=this,currentPage=0;vm.workflowStatusConsts=workflowConstants.STATUS,vm.showArrow=!0,vm.showX=!1,vm.teamLoadingMessage=$language.get("connections.YOUR_TEAM_ALL_SEARCHING"),vm.loading=!0,vm.yourTeamConstants=yourTeamConstants,vm.myTeam=[],vm.permissions={},vm.hasDirectReports=!1,vm.hasIndirectReports=!1,vm.$onInit=function(){vm.currentFilter=yourTeamConstants.FILTER_DIRECT_REPORT,userPermissionService.init().then(function(){getFilteredData(vm.currentFilter,currentPage)})};var getWorker=function(employeeAoid){var config={workflowEnabled:!1,currentViewAoid:employeeAoid,href:"/hr/v2/workers/"+employeeAoid},yourTeamWorkerService=new workerService(config);return yourTeamWorkerService&&config.currentViewAoid?yourTeamWorkerService.get(!0).then(function(){return _.isEmpty(yourTeamWorkerService.worker)?void $q.reject("Error downloading worker profile"):yourTeamWorkerService.worker}).catch(function(err){$q.reject(err)}):$q.reject("No employee aoid found")},getFilteredData=function(filter,page,addResultToExisting){return addResultToExisting||(vm.myTeam=[],vm.loading=!0),vm.currentFilter=filter,currentPage=page,yourTeamService.getMyTeam(filter,page).then(function(results){switch(addResultToExisting?vm.myTeam=vm.myTeam.concat(results):vm.myTeam=results,_.forEach(vm.myTeam,function(teamMember){ObjectEntitlementsService.getManagerEntitlements().then(function(){ObjectEntitlementsService.verifyDirectReportsEntitlements(_.get(teamMember,"details.associateoid"))&&(_.set(teamMember,"permissions.transfer",userPermissionService.hasPermission(sffoConstant.workerInformationManagement.workerManagement.workerAdvancementManagement.worker_transfer,_.get(teamMember,"details.associateoid"))),_.set(teamMember,"permissions.worker",userPermissionService.hasPermission(sffoConstant.workerInformationManagement.workerManagement.workerProfileManagement.worker_read,_.get(teamMember,"details.associateoid"))))})}),vm.hasDirectReports=yourTeamService.hasDirectReports(),vm.hasIndirectReports=yourTeamService.hasIndirectReports(),filter){case yourTeamConstants.FILTER_ALL:vm.totalTeamMembers=yourTeamService.totalTeamMembers,vm.resultsLabel=$language.get("connections.YOUR_TEAM_RESULTS");break;case yourTeamConstants.FILTER_DIRECT_REPORT:vm.totalTeamMembers=yourTeamService.totalDirectReports,vm.resultsLabel=$language.get("connections.DIRECT_REPORTS");break;case yourTeamConstants.FILTER_INDIRECT_REPORT:vm.totalTeamMembers=yourTeamService.totalIndirectReports,vm.resultsLabel=$language.get("connections.INDIRECT_REPORTS")}}).catch(function(err){vm.resultsLabel="",vm.hasDirectReports=!1,vm.hasIndirectReports=!1}).finally(function(){vm.loading=!1})};vm.gotoProfile=function(aoid){$location.path("/profile/"+aoid)},vm.resetFilters=function(){return vm.currentFilter!==yourTeamConstants.FILTER_ALL?(vm.teamLoadingMessage=$language.get("connections.YOUR_TEAM_ALL_SEARCHING"),getFilteredData(yourTeamConstants.FILTER_ALL,0)):$q.resolve()},vm.getNextPage=function(){vm.myTeam.length<vm.totalTeamMembers&&getFilteredData(vm.currentFilter,++currentPage,!0)},vm.toggleMyDirectReportsFilter=function(){vm.currentFilter===yourTeamConstants.FILTER_DIRECT_REPORT?vm.resetFilters():(vm.teamLoadingMessage=$language.get("connections.YOUR_TEAM_DIRECT_REPORT_SEARCHING"),getFilteredData(yourTeamConstants.FILTER_DIRECT_REPORT,0))},vm.toggleMyIndirectReportsFilter=function(){vm.currentFilter===yourTeamConstants.FILTER_INDIRECT_REPORT?vm.resetFilters():(vm.teamLoadingMessage=$language.get("connections.YOUR_TEAM_INDIRECT_REPORT_SEARCHING"),getFilteredData(yourTeamConstants.FILTER_INDIRECT_REPORT,0))},vm.goToFront=function(cardScope){cardScope.$gotoState(yourTeamConstants.CARD_STATES.DEFAULT)},vm.confirmPendingEvents=function(employeeAoid,cardScope){return employeeAoid?(cardScope.isLoadingPendingEvents=!0,cardScope.isError=!1,cardScope.$gotoState(yourTeamConstants.CARD_STATES.BACK),workflowPendingEventsService.getPendingEventsForAssociate(employeeAoid).then(function(pendingEvents){var transferPendingEventFound=!1;_.isArray(pendingEvents)&&_.size(pendingEvents)>0?(_.forEach(pendingEvents,function(pendingEvent){"/events/hr/v1/worker.transfer"===_.get(pendingEvent,"eventData.resourcePath")&&(transferPendingEventFound=!0,_.set(cardScope,"pendingManagerActions.transfer",workflowConstants.STATUS.PENDING))}),transferPendingEventFound||_.set(cardScope,"pendingManagerActions.transfer",workflowConstants.STATUS.NONE)):_.isArray(pendingEvents)&&0===_.size(pendingEvents)&&_.set(cardScope,"pendingManagerActions.transfer",workflowConstants.STATUS.NONE),_.get(cardScope,"pendingManagerActions.transfer")===workflowConstants.STATUS.NONE?getWorker(employeeAoid).then(function(worker){var transferEmployeeWizardService=$injector.get("redbox.manageractions.transfer.TransferEmployeeWizardService");worker&&transferEmployeeWizardService.launchWizard({worker:worker}).then(function(transferModal){vm.goToFront(cardScope)}).catch(function(error){cardScope.isError=!0}).finally(function(){cardScope.isLoadingPendingEvents=!1})}).catch(function(error){cardScope.isError=!0,cardScope.isLoadingPendingEvents=!1}):cardScope.isLoadingPendingEvents=!1}).catch(function(error){cardScope.isError=!0,cardScope.isLoadingPendingEvents=!1})):(cardScope.isError=!0,cardScope.isLoadingPendingEvents=!1,$q.resolve())},vm.showFilterOptions=function(){vm.showArrow?(vm.showArrow=!1,vm.showX=!0):(vm.showArrow=!0,vm.showX=!1)}}],controllerAs:"yourTeamCtrl"}),angular.module("redbox.connections.yourteam").service("redbox.connections.yourteam.YourTeamService",["$http","$q","redbox.connections.yourteam.YourTeamContants","redbox.ext.shared.services.ObjectEntitlementsService","redbox.ext.shared.services.UserIdentityService","redbox.ext.shared.services.ProfileService","redbox.shared.services.ImpersonationService",function($http,$q,yourTeamConstants,objectEntitlementsService,userIdentityService,userProfileService,impersonationService){var FLEXGRAPH_EMPLOYEE_DETAILS_SERVICE="/redboxapi/flexgraph/v1/associate-details?associateoids=",PAGE_SIZE=20,myAllTeamAoidChunks=[],myDirectReportsAoidChunks=[],myIndirectReportsAoidChunks=[],self=this;self.totalTeamMembers=0,self.totalDirectReports=0,self.totalIndirectReports=0;var getMyTeamAoids=function(){return myAllTeamAoidChunks&&myAllTeamAoidChunks.length>0&&myDirectReportsAoidChunks&&myDirectReportsAoidChunks.length>0?$q.resolve():$q.all([userIdentityService.getAoid(),objectEntitlementsService.getManagerEntitlements()]).then(function(promisesResponse){var objectEntitlements,yourAoid=promisesResponse[0],response=promisesResponse[1],myTeamAoids=[],myDirectReportAoids=[],myIndirectReportsAoids=[];if(_.has(response,"data.objectEntitlements"))return objectEntitlements=response.data.objectEntitlements,objectEntitlements&&objectEntitlements.length>0?(objectEntitlements.forEach(function(oe){oe.objectIdentifiers&&oe.objectIdentifiers.length>0&&oe.objectIdentifiers.forEach(function(oi){var parentAoid=oi?_.get(oi,"parentReference.objectIdentifier.objectID"):null;parentAoid&&parentAoid===yourAoid?myDirectReportAoids.push(oi.itemID):myIndirectReportsAoids.push(oi.itemID),myTeamAoids.push(oi.itemID)})}),self.totalTeamMembers=myTeamAoids.length,self.totalDirectReports=myDirectReportAoids.length,self.totalIndirectReports=myIndirectReportsAoids.length,myTeamAoids&&0!==myTeamAoids.length&&myDirectReportAoids&&0!==myDirectReportAoids.length?(myAllTeamAoidChunks=_.chunk(myTeamAoids,PAGE_SIZE),myDirectReportsAoidChunks=_.chunk(myDirectReportAoids,PAGE_SIZE),myIndirectReportsAoids&&myIndirectReportsAoids.length>0&&(myIndirectReportsAoidChunks=_.chunk(myIndirectReportsAoids,PAGE_SIZE)),$q.resolve()):$q.reject("no direct and indirect reports")):$q.reject("no direct and indirect reports")})};self.hasDirectReports=function(){return!!(myDirectReportsAoidChunks&&myDirectReportsAoidChunks.length>0)},self.hasIndirectReports=function(){return!!(myIndirectReportsAoidChunks&&myIndirectReportsAoidChunks.length>0)};var getEmployeeDetails=function(aoids){var url,resolvedResponse={data:[]};return aoids&&aoids.length>0&&aoids.length<=PAGE_SIZE?(url=FLEXGRAPH_EMPLOYEE_DETAILS_SERVICE+aoids.join(","),$q.all([$http.get(url),userProfileService.getImagesForAssociates(aoids).catch(function(err){})]).then(function(promisesResponse){var response=promisesResponse[0],images=promisesResponse[1];return angular.forEach(response.data,function(person){var personAoid=_.get(person,"details.associateoid");images&&personAoid&&images[personAoid]&&images[personAoid].images&&images[personAoid].images.profile?person.imageURL=impersonationService.addActingSessionIdParamSync(images[personAoid].images.profile.binaryHref):person.imageURL=void 0,personAoid&&resolvedResponse.data.push(person)}),resolvedResponse.data.length>0?resolvedResponse:$q.reject("Error downloading employee details. Error: No employees found.")})):aoids&&aoids.length>PAGE_SIZE?$q.reject("Maximum "+PAGE_SIZE+" aoids allowed at a time"):$q.reject("Missing aoid parameter")},getEmployeeDetailsForChunk=function(chunk,page){return page+1<=chunk.length?getEmployeeDetails(chunk[page]).then(function(result){return result.data}).catch(function(err){return $q.reject(err)}):$q.reject("Invalid page number")};self.getMyTeam=function(filter,page){return getMyTeamAoids().then(function(){switch(page||(page=0),filter){case yourTeamConstants.FILTER_ALL:return getEmployeeDetailsForChunk(myAllTeamAoidChunks,page);case yourTeamConstants.FILTER_DIRECT_REPORT:return getEmployeeDetailsForChunk(myDirectReportsAoidChunks,page);case yourTeamConstants.FILTER_INDIRECT_REPORT:return getEmployeeDetailsForChunk(myIndirectReportsAoidChunks,page)}})}}]),angular.module("redbox.connections.yourteam").constant("redbox.connections.yourteam.YourTeamContants",{FILTER_ALL:"all",FILTER_DIRECT_REPORT:"directreport",FILTER_INDIRECT_REPORT:"indirectreport",CARD_STATES:{DEFAULT:"default",BACK:"back"}}),angular.module("redbox.dashboard").controller("redbox.dashboard.DashboardCtrl",["$scope","redbox.dashboard.TilesService",function($scope,tilesService){$scope.tiles=[],$scope.init=function(){tilesService.getPermittedTiles().then(function(tiles){$scope.tiles=tiles})},$scope.init()}]),angular.module("redbox.dashboard").service("redbox.dashboard.TilesService",["$http","$q","redbox.ext.shared.services.UserPermissionService","adp.ng.logging.LoggerFactory",function($http,$q,userPermission,loggerFactory){var logger=loggerFactory.getLogger("redbox.dashboard.TilesService");this.getTiles=function(src){var tilesSrc="app/dashboard/tiles.json";src&&(tilesSrc=src);var tiles=[],tilesDeferred=$q.defer();return $http.get(tilesSrc).then(function(results){tiles=results.data.list?results.data.list:[],tilesDeferred.resolve(tiles)}).catch(function(error){logger.error("tile call failed",error.data),tilesDeferred.reject(error.data)}),tilesDeferred.promise},this.getPermittedDashboardTiles=function(selectedTilesArg){var deferred=$q.defer();return logger.info("getting permitted dashboard tiles"),this.getTiles().then(function(results){userPermission.init().then(function(){var permDashboardTiles=[],selectedTilesName=selectedTilesArg;if(angular.forEach(results,function(result){result.permission?result.dashboard&&userPermission.hasPermissionsOne(result.permission)&&permDashboardTiles.push(result):permDashboardTiles.push(result)}),selectedTilesName){var requestedTiles=[];angular.forEach(permDashboardTiles,function(tile){angular.forEach(selectedTilesName,function(selectTile){selectTile===tile.id&&requestedTiles.push(tile)})}),permDashboardTiles=requestedTiles}deferred.resolve(permDashboardTiles)})}).catch(function(error){logger.error("userPermission.init() call failed",error),deferred.reject(error)}),deferred.promise},this.getPermittedTiles=function(src,selectedTilesArg){var deferred=$q.defer();return logger.info("getting tiles"),this.getTiles(src).then(function(results){var selectedTilesName=selectedTilesArg;userPermission.init().then(function(){var permittedTiles=userPermission.filterListByPermissions(results);if(selectedTilesName){var requestedTiles=[];angular.forEach(selectedTilesName,function(selected){angular.forEach(permittedTiles,function(tile){selected===tile.id&&requestedTiles.push(tile)})}),deferred.resolve(requestedTiles)}else deferred.resolve(permittedTiles)})}).catch(function(error){logger.error("userPermission.init() call failed",error),deferred.reject(error)}),deferred.promise}}]),angular.module("redbox.feedback").controller("redbox.feedback.FeedbackCtrl",["$rootScope","$scope","$language","$timeout","redbox.shared.constants.AppConstant","$q","adp.ng.ui.modal.adpModalService","redbox.ext.shared.services.ProfileService","redbox.feedback.FeedbackService","adp.ng.logging.LoggerFactory",function($rootScope,$scope,$language,$timeout,appConstant,$q,$adpModal,profile,feedbackService,loggerFactory){var modalObj,logger=loggerFactory.getLogger("redbox.feedback.FeedbackCtrl"),buildVersion=appConstant.buildVersion;$scope.showFeedback=!0,$scope.init=function(){$rootScope.appFeedback={userFeedback:{meta:{application:{name:"redbox"},pageId:"app"},feedback:{okToContact:!0,rating:null,comments:""}}},profile.get().then(function(profileResult){profileResult.isADPPractitioner&&($scope.showFeedback=!1)}),$rootScope.appFeedback.userFeedback.meta.application.versionID=buildVersion,$rootScope.appFeedback.userFeedback.meta.application.buildID=buildVersion,
$scope.feedbackSuccess=!1},$scope.init(),$scope.thumbsUpFb=function(){$scope.feedbackSuccess=!1,$rootScope.appFeedback.userFeedback.feedback.rating=5},$scope.thumbsDownFb=function(){$scope.feedbackSuccess=!1,$rootScope.appFeedback.userFeedback.feedback.rating=1},$scope.cancel=function(){$scope.feedbackSuccess=!1,$rootScope.appFeedback.userFeedback.feedback.rating=null,modalObj.$close()},$scope.close=function(){modalObj.$close(),$scope.feedbackSuccess=!1,$scope.init()},$scope.openFeedbackModal=function(){$scope.feedbackSuccess=!1,$rootScope.appFeedback.userFeedback.feedback.rating=null,$rootScope.appFeedback.userFeedback.feedback.comments="",modalObj=$adpModal.open({title:$language.get("framework.FEEDBACK_YOUR_FEEDBACK"),contentUrl:"app/feedback/views/feedback-modal.html",scope:$scope,footer:!1,closeLabel:$language.get("shared.SUBMIT"),closeClick:"submit",closeable:!0})},$scope.list=[1,2,3,4],$scope.submit=function(){var deferred=$q.defer();return logger.debug("Saving..."),null===$rootScope.appFeedback.userFeedback.feedback.rating&&($rootScope.appFeedback.userFeedback.feedback=_.omit($rootScope.appFeedback.userFeedback.feedback,"rating")),feedbackService.submitFeedback($rootScope.appFeedback).then(function(){$scope.feedbackSuccess=!0,$timeout(function(){$("#feedback-alert").fadeOut("0.3s",function(){$scope.close()})},2e3),deferred.resolve(),logger.debug("feedback submit successful")}).catch(function(error){logger.error("Error submitting feedback")}),deferred.promise},$scope.lang=$rootScope.lang}]),angular.module("redbox.feedback").controller("redbox.feedback.FeedbackDashboardCtrl",["$rootScope","$scope","$timeout","$analytics","redbox.feedback.FeedbackService","adp.ng.logging.LoggerFactory",function($rootScope,$scope,$timeout,$analytics,feedbackService,loggerFactory){var logger=loggerFactory.getLogger("redbox.feedback.FeedbackDashboardCtrl");$scope.appFeedback={userFeedback:{meta:{application:{name:"redbox"},pageId:"app"},feedback:{okToContact:!0,rating:"",comments:""}}},$scope.cancel=function(){$scope.$emit("hideMe"),$rootScope.randomNumber=10},$scope.init=function(){var showTile=!0;feedbackService.getUserFeedback().then(function(userFeedback){userFeedback[0]&&moment(userFeedback[0].time).add(6,"months")>moment()&&(showTile=!1),showTile&&($rootScope.randomNumber||($rootScope.randomNumber=_.random(0,10)),$rootScope.randomNumber<=5&&($scope.$emit("showMe"),$analytics.eventTrack("Dashboard Feedback Tile",{category:"Show tile",label:"Dashboard feedback tile"})))}).catch(function(error){logger.warn("Error occurred retrieving user feedback",JSON.stringify(error))})},$scope.init(),$scope.submit=function(){feedbackService.submitFeedback($scope.appFeedback).then(function(){$scope.feedbackSuccess=!0,$timeout(function(){$scope.$emit("hideMe")},2e3)}).catch(function(error){logger.error("Error submitting feedback")})},$scope.thumbsUp=function(){$scope.appFeedback.userFeedback.feedback.rating=5},$scope.thumbsDown=function(){$scope.appFeedback.userFeedback.feedback.rating=1}}]),angular.module("redbox.feedback").service("redbox.feedback.FeedbackService",["$http","$q","$filter","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserIdentityService",function($http,$q,$filter,loggerFactory,userIdentity){function sort(feeds){feeds.sort(function(a,b){return moment(a.time).isBefore(b.time)?1:moment(a.time).isAfter(b.time)?-1:0})}function decorate(feeds){angular.forEach(feeds,function(feed){feed.showDate=moment(feed.time).format("lll"),1===feed.feedback.rating?(feed.status="error",feed.icon="thumbs-down"):5===feed.feedback.rating?(feed.status="success",feed.icon="thumbs-up"):(feed.status="default",feed.icon="comments")})}var logger=loggerFactory.getLogger("redbox.feedback.FeedbackService"),FEEDBACK_API="/redboxapi/core/v1/userFeedback",submitFeedback=function(a){var postData={userFeedback:{meta:{application:{name:"redbox",versionID:a.userFeedback.meta.application.versionID,buildID:a.userFeedback.meta.application.buildID},pageId:a.userFeedback.meta.pageId},feedback:{okToContact:a.userFeedback.feedback.okToContact,rating:a.userFeedback.feedback.rating,comments:a.userFeedback.feedback.comments}}},deferred=$q.defer();return $http.post(FEEDBACK_API,postData).then(function(result){logger.info("feedback posted successfully"),deferred.resolve(result.data)}).catch(function(error){logger.error("Error occurred updating feedback"+error),deferred.reject(error)}),deferred.promise},getFeedback=function(options){var totalRecords,deferred=$q.defer(),paginationConfig={index:0,pageSize:100};return $http.get("/redboxapi/core/v1/userFeedback").then(function(feedback){decorate(feedback.data),sort(feedback.data),totalRecords=feedback.data.length,options&&options.filters&&(feedback.data=$filter("card")(feedback.data,options.filters.byDate),feedback.data=$filter("card")(feedback.data,options.filters.byType),options.filters.byClient&&(feedback.data=$filter("card")(feedback.data,5,options.filters.byClient))),options&&options.pagination?(angular.extend(paginationConfig,options.pagination),deferred.resolve({totalRecords:totalRecords,allFeeds:feedback.data,feeds:feedback.data.slice(paginationConfig.index,paginationConfig.index+paginationConfig.pageSize)})):deferred.resolve(feedback.data)}).catch(function(error){logger.error("Error occurred retrieving user feedback",JSON.stringify(error)),deferred.reject(error)}),deferred.promise},getUserFeedback=function(){var deferred=$q.defer();return userIdentity.getAoid().then(function(aoid){$http.get("/redboxapi/core/v1/userFeedback/associates/"+aoid+"?last=1&metaOnly=true").then(function(feedbackDetails){deferred.resolve(feedbackDetails.data)}).catch(function(error){logger.error("Error occurred retrieving user feedback",JSON.stringify(error.data)),deferred.reject(error.data)})}).catch(function(error){logger.error("Error occurred retrieving user aoid",JSON.stringify(error)),deferred.reject(error)}),deferred.promise};this.submitFeedback=submitFeedback,this.getFeedback=getFeedback,this.getUserFeedback=getUserFeedback}]),function(){angular.element(document).ready(function(){function getConfigs(){return $.getJSON(CONFIG_URL)}function getVersion(configs){var actingSessionId,deferred=$.Deferred(),headers={};return _.get(configs,"versioningEnabled")===!0?(window.location.href.indexOf(ACTING_SESSION_ID)>-1&&(actingSessionId=parseUrlParam(ACTING_SESSION_ID,decodeURIComponent(window.location.href).replace(/#(.*)/,"")),actingSessionId?headers[ACTING_SESSION_ID]=actingSessionId:deferred.reject("Acting session id cannot be empty")),$.ajax({url:VERSION_URL,headers:headers,method:"GET",dataType:"json",success:function(version){deferred.resolve(version)},error:function(xhr,status,error){deferred.reject(error)}})):deferred.resolve(),deferred.promise()}function bootstrap(version){var $bootstrap=function(){MobileApp.init().then(function(){angular.bootstrap(document,["redbox"])})},versionPath=_.get(version,"ui.version");versionPath?isVersionPatternInUrl()?window.location.href.indexOf(versionPath)===-1?window.location=window.location.href.replace(VERSION_REGEX,versionPath):$bootstrap():window.location=window.location.href.replace(BASE_PATH,BASE_PATH+"/"+versionPath):$bootstrap()}function parseUrlParam(param,url){var match;return"undefined"==typeof url&&(url=window.location.href),match=url.match("[?&]"+param+"=([^&]+)"),match?match[1]:null}function isVersionPatternInUrl(){return window.location.href.match(VERSION_REGEX)}function logout(){var url=window.location.href.replace(/#.*$/,"").replace(/[^\/]*$/,"");window.location.href=url+"login.html?REASON=ERROR_UNAUTH"}var CONFIG_URL="ext/config/config.json?1.18.0.1594&1472823321393",VERSION_URL="/redboxapi/core/v1/version",VERSION_REGEX=/\d{1,2}\.\d{1,2}\.\d{1,2}(\.\d{1,2})?/,ACTING_SESSION_ID="ADP-Acting-SessionID",BASE_PATH="/redbox";})}(),window.LibUtils=function(){function load(url,callback){var script=document.createElement("script");script.type="text/javascript",script.src=url,callback&&_.isFunction(callback)&&(script.onload=callback,script.onerror=callback),document.getElementsByTagName("body")[0].appendChild(script)}return{load:load}}(),window.MobileApp=function(){function addNavigationListener($state){isWebView()&&(window.App.processEvent=function(eventObj){if("NAVIGATION"===eventObj.Event.type){var actionID=eventObj.Event[eventObj.Event.type].actionID;actionID?$state.go(actionID).catch(function(){$state.go(MOBILE_ERROR)}):$state.go(MOBILE_ERROR)}})}function addProcessActionListener($state){isWebView()&&(window.App.processAction=function(eventObj){var route=_.get(eventObj,"ServeResourceAction.route");route?$state.go(route.replace("/",".")).then(window.App.renderApp).catch(function(){$state.go(MOBILE_ERROR)}).finally(hideShell):(window.App.renderApp(),hideShell())})}function hideShell(){isWebView()&&($(".top-nav").hide(),$("#framework-container").removeClass("menu-open").addClass("menu-close"),$(".footer").remove())}function init(){var deferred=$.Deferred();return window.App={},logger.debug("init called"),isWebView()?(logger.debug("Web view found"),MobileService.isIOS()||MobileService.isAndroid()?(logger.debug("Adding native css"),MobileService.addCss(),logger.debug("Loading device libs"),MobileService.loadLibs(function(){logger.debug("Device libs loaded. Waking up the container"),extendApp(),Container.wakeUp(),deferred.resolve()})):(logger.error("Unknown device found"),deferred.resolve())):deferred.resolve(),deferred.promise()}function isWebView(){return void 0===webView&&(webView=MobileService.isWebView()),webView}function isMobile(){return MobileService.isMobile()}function extendApp(){window.App={id:"RDBX",init:function(){this.setEventObjects()},processAction:function(){},setEventObjects:function(){this.readyObject={Event:{AppReadyEvent:{"Application.id":this.id},type:"AppReadyEvent"}},this.renderedObject={Event:{AppRenderedEvent:{"Application.id":this.id},type:"AppRenderedEvent"}},this.modalReadyObject={Event:{ModalReadyEvent:{},type:"ModalReadyEvent"}}},processEvent:function(eventObj){},readyApp:function(){Container.Event.addEventListener("NAVIGATION",!1,!1),Container.Event.processEvent(App.readyObject,!1,!1)},renderApp:function(){Container.Event.processEvent(App.renderedObject,!1,!1)},eof:!0}}function readyApp(){if(isWebView()&&_.has(window,"App.readyApp")){window.App.readyApp();try{Container.setColor("#EEEFF0")}catch(e){logger.error("Failed to set container background color",e)}}}var webView,MOBILE_ERROR="mobileError",logger=log4javascript.getLogger("MobileApp");return{addNavigationListener:addNavigationListener,addProcessActionListener:addProcessActionListener,init:init,hideShell:hideShell,isWebView:isWebView,isMobile:isMobile,readyApp:readyApp}}(),window.MobileService=function(){function getCookieValue(name){var cookieRegEx=new RegExp(name+"=([^;]+)"),value=cookieRegEx.exec(document.cookie);return null!==value?unescape(value[1]):void 0}function isAndroid(){return/android/.test(userAgent)}function isIOS(){var iphone=/ip(hone|od)/.test(platform),ipad=/ipad/.test(platform);return ipad||iphone}function isWebView(){return void 0!==getCookieValue(CORDOVA_TYPE)&&void 0!==getCookieValue(CORDOVA_VERSION)}function isMobile(){return void 0===mobile&&(Detectizr.detect(),mobile=Detectizr.device.type===MOBILE),mobile}function loadLibs(callback){var deviceLib=CORDOVA_LIB.replace("{type}",getCookieValue(CORDOVA_TYPE)).replace("{version}",getCookieValue(CORDOVA_VERSION));logger.debug("deviceLib",deviceLib),LibUtils.load(deviceLib,function(){logger.debug("Device lib loaded"),LibUtils.load(CONTAINER_LIB,function(){logger.debug("Container lib loaded"),callback()})})}function addCss(){var elements=document.getElementsByClassName("stage");elements&&elements.length>0&&elements[0].classList.add("native-mobile")}var mobile,CORDOVA_LIB="/static/cordova/cordova.js",CONTAINER_LIB="/static/mobile/common/js/core/container.js",CORDOVA_VERSION="ADP-Cordova-Version",CORDOVA_TYPE="ADP-Cordova-Type",MOBILE="mobile",platform=navigator.platform.toLowerCase(),userAgent=navigator.userAgent.toLowerCase(),logger=log4javascript.getLogger("MobileService");return{addCss:addCss,isIOS:isIOS,isAndroid:isAndroid,isWebView:isWebView,isMobile:isMobile,loadLibs:loadLibs}}(),function(){function TermsConditionsCtrl($q,$language,$adpModal,termsConditionsService){function termsConditions(){loadTermsConditions(termsConditionsService.TERMS_URL,TERMS_CONDITIONS).then(function(content){vm.termsHtml=content,$adpModal.open({size:"lg",title:$language.get("framework.FOOTER_TERMS_CONDITIONS"),closeable:!0,footer:!1,content:content})})}function cellTermsConditions(id){loadTermsConditions(termsConditionsService.CELL_TERMS_URL,CELL_TERMS_CONDITIONS).then(function(content){vm.cllTermsHtml=content,$adpModal.open({size:"lg",title:$language.get("settings.SETTINGS_EMAIL_MOBILE_HEADER"),closeable:!0,footer:!1,content:content})})}function loadTermsConditions(url,prop){var content,deferred=$q.defer();return termsConditionsService.get(url).then(function(result){var temp=result[prop].slice(result[prop].search(/(<\/b>|<\/div>|<\/span>)/i)),start=temp.search(/(<b>|<div>|<span>)/i),end=temp.indexOf("</body>");content=end===-1?temp.slice(start):temp.substring(start,end)}).finally(function(){deferred.resolve(content)}),deferred.promise}var vm=this,TERMS_CONDITIONS="tc",CELL_TERMS_CONDITIONS="cellTc";vm.termsConditions=termsConditions,vm.cellTermsConditions=cellTermsConditions,vm.termsHtml="",vm.cellTermsHtml=""}angular.module("redbox.legal").controller("redbox.legal.TermsConditionsCtrl",TermsConditionsCtrl),TermsConditionsCtrl.$inject=["$q","$language","adp.ng.ui.modal.adpModalService","redbox.legal.TermsConditionsService"]}(),function(){function TermsConditionsService($http,$q,$language,Locale,loggerFactory){var logger=loggerFactory.getLogger("redbox.legal.TermsConditionsService");this.TERMS_URL="/redboxapi/public/scim/v1/rest/Util/TermsAndConditions",this.CELL_TERMS_URL="/redboxapi/scim/v1/rest/Util/CellTermsAndConditions",this.get=function(url){logger.info("Retrieving information");var config={headers:{}},deferred=$q.defer();return $language.getLocale().name===Locale.SPANISH_US?config.headers["Accept-Language"]="es-ES":config.headers["Accept-Language"]=$language.getLocale().name,$http.get(url,config).then(function(result){logger.info("iSI's terms and conditions retrieved"),logger.debug("iSI's terms and conditions?",result.data),deferred.resolve(result.data)}).catch(function(error){logger.error("Error occurred retrieving iSI's SMS terms and conditions",error),deferred.reject(error)}),deferred.promise}}angular.module("redbox.legal").service("redbox.legal.TermsConditionsService",TermsConditionsService),TermsConditionsService.$inject=["$http","$q","$language","adp.ng.language.Locale","adp.ng.logging.LoggerFactory"]}(),angular.module("redbox.notifications").component("transferNotificationComponent",{templateUrl:"app/notifications/views/notifications-transfer.html",bindings:{notificationObj:"=",updateTransferStatus:"="},controller:["$language","redbox.notifications.NotificationsTransferService","redbox.notifications.NotificationsTransferFactory","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($language,transferNotificationService,transferFactory,TASKS_CONSTANTS,loggerFactory){var logger=loggerFactory.getLogger("redbox.notifications.transferNotificationComponent"),vm=this;vm.TASKS_CONSTANTS=TASKS_CONSTANTS,vm.$onInit=function(){vm.notificationObj&&transferNotificationService.getTransferNotification(vm.notificationObj).then(function(data){vm.notification=data.processedObj;var newDataHeaderMessage,oldDataHeaderMessage,messageClass="warning";vm.notificationObj.history=_.filter(data.history,function(item){return"notified"!==item.actionTaken.toLowerCase()});var actionTaken=_.head(vm.notificationObj.history).actionTaken.toLowerCase();switch(actionTaken){case TASKS_CONSTANTS.STATUS.submitted:case TASKS_CONSTANTS.STATUS.pending:case TASKS_CONSTANTS.STATUS.waiting_for_approval:newDataHeaderMessage=$language.get("framework.NOTIFICATION_TRANSFER_WAITING_FOR_APPROVAL"),oldDataHeaderMessage=$language.get("framework.TASKS_APPROVAL_CURRENT_UNTIL_APPROVED");break;case TASKS_CONSTANTS.STATUS.rejected:case TASKS_CONSTANTS.STATUS.recalled:case TASKS_CONSTANTS.STATUS.error:case TASKS_CONSTANTS.STATUS.cancelled:case TASKS_CONSTANTS.STATUS.systemError:newDataHeaderMessage=$language.get("framework.NOTIFICATION_TRANSFER_"+actionTaken.toUpperCase()),messageClass="error",oldDataHeaderMessage=$language.get("framework.NOTIFICATION_CURRENT");break;case TASKS_CONSTANTS.STATUS.approved:case TASKS_CONSTANTS.STATUS.completed:newDataHeaderMessage=$language.get("framework.NOTIFICATION_TRANSFER_APPROVED"),messageClass="success",oldDataHeaderMessage=$language.get("shared.PREVIOUS")}vm.newDataHeaderMessage=newDataHeaderMessage,vm.messageClass=messageClass,vm.oldDataHeaderMessage=oldDataHeaderMessage,vm.updateTransferStatus(vm.notificationObj)}).catch(function(error){logger.error("error occurred retrieving transfer details",error)}).finally(function(){vm.notificationObj.loadingIndicator=!1})},vm.updateLabel=function(languageKey){return transferFactory.updateLabel(languageKey)}}],controllerAs:"transferNotificationsCtrl"}),angular.module("redbox.notifications").controller("redbox.notifications.NotificationsAddressCtrl",["$scope","$language","redbox.notifications.NotificationsProfileWorkflowService","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($scope,$language,profileWorkflowNotificationService,TASKS_CONSTANTS,loggerFactory){var logger=loggerFactory.getLogger("redbox.notifications.NotificationsAddressCtrl"),vm=this;vm.notification=$scope.notification,vm.init=function(){vm.notification&&profileWorkflowNotificationService.getAddressDetails(vm.notification).then(function(data){var textLine;data.actionType===TASKS_CONSTANTS.TYPES.LEGAL_ADDRESS&&(vm.notification.actionType=TASKS_CONSTANTS.TYPES.LEGAL_ADDRESS,vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_ADDRESS"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_ADDRESS"),vm.notification.newData=data.newData,vm.notification.oldData=data.oldData,!vm.notification.oldData&&vm.notification.newData?(textLine="framework.NOTIFICATION_ADD_ADDRESS",vm.notification.noview=!0):vm.notification.oldData&&vm.notification.newData?textLine="framework.NOTIFICATION_CHANGE_ADDRESS":vm.notification.oldData&&!vm.notification.newData&&(textLine="framework.NOTIFICATION_DELETE_ADDRESS",vm.notification.noview=!0)),data.actionType===TASKS_CONSTANTS.TYPES.MAILING_ADDRESS&&(vm.notification.actionType=TASKS_CONSTANTS.TYPES.MAILING_ADDRESS,vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_ADDRESS"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_ADDRESS"),vm.notification.newData=data.newData,vm.notification.oldData=data.oldData,!vm.notification.oldData&&vm.notification.newData?(textLine="framework.NOTIFICATION_ADD_ADDRESS",vm.notification.noview=!0):vm.notification.oldData&&vm.notification.newData?textLine="framework.NOTIFICATION_CHANGE_ADDRESS":vm.notification.oldData&&!vm.notification.newData&&(textLine="framework.NOTIFICATION_DELETE_ADDRESS",vm.notification.noview=!0)),data.actionType===TASKS_CONSTANTS.TYPES.EMAIL&&(vm.notification.actionType=TASKS_CONSTANTS.TYPES.EMAIL,vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_EMAIL"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_EMAIL"),data.hasOwnProperty("newData")&&(vm.notification.newData=data.newData[0].emailUri),data.hasOwnProperty("oldData")&&(vm.notification.oldData=data.oldData[0].emailUri),!vm.notification.oldData&&vm.notification.newData?(textLine="framework.NOTIFICATION_ADD_EMAIL",vm.notification.noview=!0):vm.notification.oldData&&vm.notification.newData?textLine="framework.NOTIFICATION_CHANGE_EMAIL":vm.notification.oldData&&!vm.notification.newData&&(textLine="framework.NOTIFICATION_DELETE_EMAIL",vm.notification.noview=!0,vm.notification.isCurrentView=!0)),vm.notification.textLineKey=textLine,vm.notification.loadingIndicator=!1,$scope.notification.history=data.history,$scope.updateStatus(vm.notification)}).catch(function(error){logger.error("error occurred retrieving address details",error)})},vm.init()}]),angular.module("redbox.notifications").controller("redbox.notifications.NotificationsCtrl",["$scope","$language","adp.ng.ui.slidein.FocusSlideIn","redbox.framework.tasks.TasksService",function($scope,$language,$slidein,tasksService){$scope.notifications=[],$scope.$watch(function(){return tasksService.taskData.notifications},function(notifications,previousNotifications){$scope.notifications=notifications}),$scope.$watch("notifications",function(newValue,oldValue){$scope.notificationTotal=0,1===newValue.length?($scope.$emit("showMe"),$scope.postMessage=function(){return $scope.message=$language.get("framework.TASKS_HURRAY_TITLE"),!0}):newValue.length>1&&($scope.$emit("showMe"),$scope.postMessage="");for(var i=0,len=newValue.length;i<len;i++)$scope.notificationTotal=$scope.notificationTotal+newValue[i].count;$scope.notificationTotal>999&&($scope.notificationTotal="999+")}),$scope.openSlide=function(){$scope.taskType="wfNotifications",$slidein({scope:$scope,contentTemplate:"app/notifications/views/notifications.html"})},$scope.showFilterOptions=function(){$scope.showArrow?($scope.showArrow=!1,$scope.showX=!0):($scope.showArrow=!0,$scope.showX=!1)}}]),angular.module("redbox.notifications").controller("redbox.notifications.NotificationsDeductionCtrl",["$scope","$language","redbox.notifications.NotificationsDeductionService","adp.ng.logging.LoggerFactory",function($scope,$language,deductionNotificationService,loggerFactory){var logger=loggerFactory.getLogger("redbox.notifications.NotificationsAddressCtrl"),vm=this;vm.notification=$scope.notification,vm.init=function(){vm.notification&&deductionNotificationService.getDeductionNotification(vm.notification).then(function(data){var textLine;vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_DEDUCTION"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_DEDUCTION"),vm.notification.newData=data.newData,vm.notification.oldData=data.oldData,!vm.notification.oldData&&vm.notification.newData?(textLine="framework.NOTIFICATION_ADD_DEDUCTION",vm.notification.noview=!0):vm.notification.oldData&&vm.notification.newData?textLine="framework.NOTIFICATION_CHANGE_DEDUCTION":vm.notification.oldData&&!vm.notification.newData&&(textLine="framework.NOTIFICATION_DELETE_DEDUCTION",vm.notification.noview=!0),vm.notification.textLineKey=textLine,vm.notification.loadingIndicator=!1,$scope.notification.history=data.history,$scope.updateStatus(vm.notification)}).catch(function(error){logger.error("error occurred retrieving deduction details",error)})},vm.init()}]),angular.module("redbox.notifications").controller("redbox.notifications.DirectDepositNotificationsCtrl",["$scope","$language","redbox.notifications.DirectDepositNotificationService","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($scope,$language,directDepositNotificationsService,taskConstants,loggerFactory){function capitalizeFirstLetter(input){return input?input.charAt(0).toUpperCase()+input.substr(1).toLowerCase():""}var vm=this;vm.taskConstants=taskConstants,vm.init=function(){vm.directDeposit=[],vm.directDepositNotifications={},vm.showOld=[{display:!1}],vm.notification=$scope.notification;var logger=loggerFactory.getLogger("redbox.notifications.DirectDepositNotificationsCtrl");directDepositNotificationsService.getDirectDepositNotification(vm.notification).then(function(response){if(response){var textLine="framework.NOTIFICATION_DD_CHANGE";vm.directDeposit=directDepositNotificationsService.getUpdatedAccounts(response.oldData,response.newData);var newAccounts=_.get(response,"newData.payDistributions[0].distributionInstructions",[]);newAccounts.length>1?vm.depositRemainderLabel=$language.get("pay.DIRECTDEPOSIT_CARD_REMAINING_LABEL"):vm.depositRemainderLabel=$language.get("pay.DIRECTDEPOSIT_CARD_EVERYTHING_LABEL"),vm.directDeposit&&vm.directDeposit.length>0&&(vm.directDeposit[0].isOpen=!0),response.oldData||(textLine="framework.NOTIFICATION_DD_ADD"),response.newData||(textLine="framework.NOTIFICATION_DD_DELETE"),$scope.notification.textLineKey=textLine,$scope.notification.loadingIndicator=!1,$scope.notification.history=response.history,$scope.updateStatus(vm.notification);var notificationStatus=vm.notification.status.code.toLowerCase();angular.forEach(vm.directDeposit,function(account){var newDataHeaderMessage,oldDataHeaderMessage,messageClass="warning";switch(notificationStatus){case taskConstants.STATUS.submitted:case taskConstants.STATUS.pending:newDataHeaderMessage=capitalizeFirstLetter(account.typeOfChange)+" "+$language.get("framework.NOTIFICATION_WIATING_FOR_APPROVAL"),oldDataHeaderMessage=$language.get("framework.TASKS_APPROVAL_CURRENT_UNTIL_APPROVED");break;case taskConstants.STATUS.rejected:case taskConstants.STATUS.recalled:case taskConstants.STATUS.error:newDataHeaderMessage=capitalizeFirstLetter(account.typeOfChange)+" "+notificationStatus,messageClass="error",oldDataHeaderMessage=$language.get("framework.NOTIFICATION_CURRENT");break;case taskConstants.STATUS.approved:case taskConstants.STATUS.completed:newDataHeaderMessage=capitalizeFirstLetter(account.typeOfChange)+" "+notificationStatus,messageClass="success",oldDataHeaderMessage=$language.get("shared.PREV")}account.newDataHeaderMessage=newDataHeaderMessage,account.messageClass=messageClass,account.oldDataHeaderMessage=oldDataHeaderMessage})}}).catch(function(error){logger.error("error retrieving direct deposit notification detail",error)})},vm.init()}]),angular.module("redbox.notifications").controller("redbox.notifications.NotificationsEmergencyContactCtrl",["$scope","$language","redbox.notifications.NotificationsProfileWorkflowService","adp.ng.logging.LoggerFactory",function($scope,$language,profileWorkflowNotificationService,loggerFactory){var logger=loggerFactory.getLogger("redbox.notifications.NotificationsEmergencyContactCtrl");$scope.init=function(){var notification=$scope.notification;notification&&profileWorkflowNotificationService.getEmergencyContactDetails(notification).then(function(data){$scope.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_CONTACT"),$scope.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_CONTACT"),$scope.notification.newData=data.newData,$scope.notification.oldData=data.oldData,$scope.notification.newData&&$scope.notification.newData.personName&&formatName($scope.notification.newData.personName),$scope.notification.oldData&&$scope.notification.oldData.personName&&formatName($scope.notification.oldData.personName);var textLine;switch(data.actionType){case"change":textLine="framework.NOTIFICATION_CHANGE_CONTACT";break;case"add":textLine="framework.NOTIFICATION_ADD_CONTACT",$scope.notification.noview=!0;break;case"remove":textLine="framework.NOTIFICATION_DELETE_CONTACT",notification.isCurrentView=!0,$scope.notification.noview=!0}$scope.notification.textLineKey=textLine,$scope.notification.loadingIndicator=!1,$scope.notification.history=data.history,$scope.updateStatus(notification)}).catch(function(error){logger.error("error occurred retrieving emergency notification details",error)})};var formatName=function(personName){var name=personName.formattedName.split(",");personName.formattedName=name[1]+" "+name[0]};$scope.init()}]),angular.module("redbox.notifications").controller("redbox.notifications.NotificationsPersonalInfoCtrl",["$scope","$language","redbox.notifications.NotificationsProfileWorkflowService","redbox.framework.tasks.TASKS_CONSTANTS",function($scope,$language,profileWorkflowNotificationService,TASKS_CONSTANTS){var vm=this;vm.notification=$scope.notification,vm.init=function(){vm.notification&&profileWorkflowNotificationService.getPersonalInformationDetails(vm.notification).then(function(data){var textLine;vm.notification.loadingIndicator=!1,prepareData(data),!isBlank(data.newData)&&isBlank(data.oldData)?(vm.notification.newData=data.newData,textLine=setTextLine(vm.notification.actionType,TASKS_CONSTANTS.ACTIONS.ADD)):isBlank(data.newData)&&!isBlank(data.oldData)?(vm.notification.oldData=data.oldData,textLine=setTextLine(vm.notification.actionType,TASKS_CONSTANTS.ACTIONS.REMOVE)):isBlank(data.newData)||isBlank(data.oldData)||(vm.notification.oldData=data.oldData,vm.notification.newData=data.newData,textLine=setTextLine(vm.notification.actionType,TASKS_CONSTANTS.ACTIONS.CHANGE)),data.actionType===TASKS_CONSTANTS.TYPES.EMAIL&&(data.hasOwnProperty("newData")&&(vm.notification.newData=data.newData[0].emailUri),data.hasOwnProperty("oldData")&&(vm.notification.oldData=data.oldData[0].emailUri)),vm.notification.textLine=$language.get(textLine),vm.notification.textLineKey=textLine,vm.notification.history=data.history,$scope.updateStatus(vm.notification)})};var prepareData=function(data){if(data.actionType===TASKS_CONSTANTS.TYPES.LEGAL_ADDRESS)vm.notification.actionType=TASKS_CONSTANTS.TYPES.LEGAL_ADDRESS,vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_ADDRESS"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_ADDRESS");else if(data.actionType===TASKS_CONSTANTS.TYPES.MAILING_ADDRESS)vm.notification.actionType=TASKS_CONSTANTS.TYPES.MAILING_ADDRESS,vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_ADDRESS"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_ADDRESS");else if(data.actionType===TASKS_CONSTANTS.TYPES.PHONE){var phoneType="";vm.notification.actionType=TASKS_CONSTANTS.TYPES.PHONE,vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_PHONE"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_PHONE"),data.subtype===TASKS_CONSTANTS.SUBTYPES.PERSONAL_MOBILE?phoneType=$language.get("framework.NOTIFICATION_PERSONAL_MOBILE"):data.subtype===TASKS_CONSTANTS.SUBTYPES.PERSONAL_LANDLINE?phoneType=$language.get("framework.NOTIFICATION_PERSONAL_LANDLINE"):data.subtype===TASKS_CONSTANTS.SUBTYPES.WORK_MOBILE?phoneType=$language.get("framework.NOTIFICATION_WORK_MOBILE"):data.subtype===TASKS_CONSTANTS.SUBTYPES.WORK_LANDLINE?phoneType=$language.get("framework.NOTIFICATION_WORK_LANDLINE"):data.subtype===TASKS_CONSTANTS.SUBTYPES.WORK_FAX&&(phoneType=$language.get("framework.NOTIFICATION_WORK_FAX")),vm.displayPhoneType=phoneType.toUpperCase()}else data.actionType===TASKS_CONSTANTS.TYPES.EMAIL?(vm.notification.actionType=TASKS_CONSTANTS.TYPES.EMAIL,vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_EMAIL"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_EMAIL")):data.actionType===TASKS_CONSTANTS.TYPES.CUSTOM_FIELDS&&(vm.notification.actionType=TASKS_CONSTANTS.TYPES.CUSTOM_FIELDS,vm.notification.viewOld=$language.get("framework.NOTIFICATION_OLD_DATA"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_NEW_DATA"),vm.notification.fieldLabel=data.fieldLabel)},setTextLine=function(actionType,actionName){var textLine;return actionType===TASKS_CONSTANTS.TYPES.LEGAL_ADDRESS||actionType===TASKS_CONSTANTS.TYPES.MAILING_ADDRESS?actionName===TASKS_CONSTANTS.ACTIONS.ADD?textLine="framework.NOTIFICATION_ADD_ADDRESS":actionName===TASKS_CONSTANTS.ACTIONS.REMOVE?textLine="framework.NOTIFICATION_DELETE_ADDRESS":actionName===TASKS_CONSTANTS.ACTIONS.CHANGE&&(textLine="framework.NOTIFICATION_CHANGE_ADDRESS"):actionType===TASKS_CONSTANTS.TYPES.PHONE?actionName===TASKS_CONSTANTS.ACTIONS.ADD?textLine="framework.NOTIFICATION_ADD_PHONE":actionName===TASKS_CONSTANTS.ACTIONS.REMOVE?textLine="framework.NOTIFICATION_DELETE_PHONE":actionName===TASKS_CONSTANTS.ACTIONS.CHANGE&&(textLine="framework.NOTIFICATION_CHANGE_PHONE"):actionType===TASKS_CONSTANTS.TYPES.EMAIL?actionName===TASKS_CONSTANTS.ACTIONS.ADD?textLine="framework.NOTIFICATION_ADD_EMAIL":actionName===TASKS_CONSTANTS.ACTIONS.REMOVE?textLine="framework.NOTIFICATION_DELETE_EMAIL":actionName===TASKS_CONSTANTS.ACTIONS.CHANGE&&(textLine="framework.NOTIFICATION_CHANGE_EMAIL"):actionType===TASKS_CONSTANTS.TYPES.CUSTOM_FIELDS&&(textLine="framework.NOTIFICATION_CHANGE_PERSONALINFO"),
textLine},isBlank=function(val){return!_.isNumber(val)&&_.isEmpty(val)};vm.init()}]),angular.module("redbox.notifications").controller("redbox.notifications.NotificationsPhoneNumberCtrl",["$scope","$language","redbox.notifications.NotificationsProfileWorkflowService","adp.ng.logging.LoggerFactory","redbox.framework.tasks.TASKS_CONSTANTS",function($scope,$language,profileWorkflowNotificationService,loggerFactory,TASKS_CONSTANTS){var textLine,logger=loggerFactory.getLogger("redbox.notifications.NotificationsPhoneNumberCtrl"),phoneType="",vm=this;vm.notification=$scope.notification,vm.init=function(){vm.notification&&profileWorkflowNotificationService.getPhoneDetails(vm.notification).then(function(data){data.subtype===TASKS_CONSTANTS.SUBTYPES.PERSONAL_MOBILE?phoneType=$language.get("framework.NOTIFICATION_PERSONAL_MOBILE"):data.subtype===TASKS_CONSTANTS.SUBTYPES.PERSONAL_LANDLINE?phoneType=$language.get("framework.NOTIFICATION_PERSONAL_LANDLINE"):data.subtype===TASKS_CONSTANTS.SUBTYPES.WORK_MOBILE?phoneType=$language.get("framework.NOTIFICATION_WORK_MOBILE"):data.subtype===TASKS_CONSTANTS.SUBTYPES.WORK_LANDLINE?phoneType=$language.get("framework.NOTIFICATION_WORK_LANDLINE"):data.subtype===TASKS_CONSTANTS.SUBTYPES.WORK_FAX&&(phoneType=$language.get("framework.NOTIFICATION_WORK_FAX")),vm.displayPhoneType=phoneType.toUpperCase(),vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_PHONE"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_PHONE"),vm.notification.newData=data.newData,vm.notification.oldData=data.oldData,_.isEmpty(vm.notification.oldData)&&vm.notification.newData?(vm.notification.oldData=null,textLine="framework.NOTIFICATION_ADD_PHONE",vm.notification.noview=!0):vm.notification.oldData&&_.isEmpty(vm.notification.newData)?(vm.notification.newData=null,textLine="framework.NOTIFICATION_DELETE_PHONE",vm.notification.noview=!0,vm.notification.isCurrentView=!0):vm.notification.oldData&&vm.notification.newData&&(textLine="framework.NOTIFICATION_CHANGE_PHONE"),vm.notification.textLineKey=textLine,vm.notification.loadingIndicator=!1,vm.notification.history=data.history,$scope.updateStatus(vm.notification)}).catch(function(error){logger.error("error occurred retrieving address details",error)})},vm.init()}]),angular.module("redbox.notifications").controller("redbox.notifications.NotificationsSlideinCtrl",["$scope","$language","$timeout","$q","adp.ng.ui.modal.adpModalService","redbox.framework.tasks.PortalMessagesService","redbox.notifications.NotificationWfService","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($scope,$language,$timeout,$q,$adpModal,portalMessagesService,notificationService,TASKS_CONSTANTS,loggerFactory){function decorateNotifications(rbNotifications){return angular.forEach(rbNotifications,function(notification){"rejected"===notification.status.code?notification.cardStatus="rejected":"approved"===notification.status.code?notification.cardStatus="success":"error"===notification.status.code&&(notification.cardStatus="error"),notification.showMore=!0;var notiSubKey=containNotification($scope.notificationTypes,notification.subject);notiSubKey?(notification.icon=$scope.notificationTypes[notiSubKey].icon,notification.title=$language.get($scope.notificationTypes[notiSubKey].title)):(_.contains(notification.subject,"-")?notification.title=notification.subject.substr(_.indexOf(notification.subject,"-")+2):notification.title=notification.subject,notification.icon="bullhorn",notification.disableViewMore=!0),notification.showDetails=!1,notification.detailsView="",notification.showMore=!0}),rbNotifications}function loadNotifications(){var defer=$q.defer();return portalMessagesService.getRedboxWorkflowNotifications($scope.config).then(function(response){response&&($scope.notifications=$scope.notifications.concat(decorateNotifications(response.rbNotifications)),$scope.notificationCount=response.filteredRecords,$scope.notificationTotalCount=response.totalRecords,$scope.config.moreNotifications=!(response.rbNotifications.length<$scope.config.pagination.pageSize),$scope.notificationTotalCount<10&&($scope.selector="isotope-four-column-width",$scope.gutter="isotope-four-column-gutter")),defer.resolve()},function(error){logger.error("error occurred retrieving notification count",error),defer.reject(error)}),defer.promise}var modalObj,logger=loggerFactory.getLogger("redbox.notifications.NotificationsSlideinCtrl");$scope.dismissSuccess=!1,$scope.selector="isotope-three-column-width",$scope.gutter="isotope-three-column-gutter",$scope.loadMoreNotifications=function(){var defer=$q.defer();return $scope.config.moreNotifications&&($scope.config.pagination.index=$scope.config.pagination.index+$scope.config.pagination.pageSize,loadNotifications().then(function(){defer.resolve()},function(error){defer.reject(error)})),defer.promise},$scope.init=function(){$scope.notifications=[],$scope.config={pagination:{index:0,pageSize:40},filters:{},moreNotifications:!0},notificationService.getNotificationTypes().then(function(results){results&&($scope.notificationTypes=results),portalMessagesService.getRedboxWorkflowNotifications().then(function(rbNotifications){rbNotifications&&(rbNotifications=decorateNotifications(rbNotifications),$scope.filterByType=_.filter($scope.filterByType,function(filter){var filterN=_.find(rbNotifications,function(notification){return filter.label===notification.title}),size=_.size(filterN);return size>0}),$scope.filterByStatus=_.filter($scope.filterByStatus,function(filter){var filterN=_.find(rbNotifications,function(notification){return filter.label.toLowerCase()===notification.status.code}),size=_.size(filterN);return size>0}))}),loadNotifications().then(function(){$scope.showCards=!0})},function(error){logger.error("error occurred retrieving notification types",error)})},$scope.viewDetails=function(notification){notification.loadingIndicator=!0,notificationService.getNotificationTypes().then(function(results){var notiSubKey=containNotification(results,notification.subject);notiSubKey&&(notification.showDetails=!0,notification.detailsView=results[notiSubKey].view,notification.showMore=!1,notification.isNewWorkflow=results[notiSubKey].newWorkflowStyle)}).catch(function(error){})},$scope.showLess=function(notification){notification.showMore=!0,notification.showDetails=!1},$scope.openDismissModal=function(){modalObj=$adpModal.open({title:$language.get("framework.NOTIFICATION_DISMISS_CONFIRM"),content:$language.get("framework.NOTIFICATION_DISMISS_MODAL_MESSAGE"),scope:$scope,footer:!0,closeLabel:$language.get("shared.YES"),closeClick:"dismissAll",closeable:!0})},$scope.dismissAll=function(){var deferred=$q.defer(),grabAllIds=[];return angular.forEach($scope.notifications,function(notification){grabAllIds.push(parseInt(notification.notificationUri.href.split("/")[5]))}),dismissCall(grabAllIds),deferred.promise},$scope.dismiss=function(notification,index){var notificationId=[];notificationId.push(parseInt(notification.notificationUri.href.split("/")[5])),dismissCall(notificationId)},$scope.onCallBack=function(){$scope.dismissSuccess=!1};var dismissCall=function(data){var deferred=$q.defer();return portalMessagesService.dismissNotification(data).then(function(detail){modalObj&&modalObj.$close(),$scope.dismissSuccess=!0,$timeout(function(){$("#dismiss-success-alert").fadeOut("0.3s",function(){$scope.dismissSuccess=!1})},2e3),$scope.init(),notificationService.init(),deferred.resolve(detail),logger.info("Dismiss notification successfully",detail)}).catch(function(error){deferred.reject(error),logger.error("Error in dismissing notification",error)}),deferred.promise};$scope.init(),$scope.filterByType=[{id:6,label:$language.get("framework.NOTIFICATION_TITLE_ADDRESS_CHANGE")},{id:7,label:$language.get("framework.NOTIFICATION_TITLE_EMERGENCY_CONTACTS")},{id:8,label:$language.get("framework.NOTIFICATION_TITLE_PHONE_NUMBER")},{id:9,label:$language.get("framework.NOTIFICATION_TITLE_TAX_WITHHOLDING")},{id:10,label:$language.get("framework.NOTIFICATION_TITLE_DIRECT_DEPOSIT")},{id:11,label:$language.get("framework.NOTIFICATION_TITLE_PERSONAL_INFO")},{id:12,label:$language.get("framework.NOTIFICATION_TITLE_DEDUCTION")},{id:13,label:$language.get("framework.NOTIFICATION_TITLE_EMPLOYEE_TRANSFER")}],$scope.filterByDate=[{id:4,label:$language.get("reporting.FEEDBACK_PAST_7_DAYS")},{id:5,label:$language.get("reporting.FEEDBACK_PAST_1_MONTH")}],$scope.filterByStatus=[{id:1,label:$language.get("shared.APPROVED")},{id:2,label:$language.get("shared.REJECTED")},{id:3,label:$language.get("framework.NOTIFICATION_LABEL_ERROR")}],$scope.reportFilterByDate=function(id){$scope.config.filters.byDate=$scope.config.filters.byDate===id?"":id,reportFilter()},$scope.reportFilterByType=function(id){$scope.config.filters.byType=$scope.config.filters.byType===id?"":id,reportFilter()},$scope.reportFilterByStatus=function(id){$scope.config.filters.byStatus=$scope.config.filters.byStatus===id?"":id,reportFilter()},$scope.isBlank=function(val){return!_.isNumber(val)&&_.isEmpty(val)};var reportFilter=function(){$scope.config.pagination.index=0,$scope.notifications.length=0,loadNotifications()},containNotification=function(notiTypes,notiSubject){for(var notiKeys=_.keys(notiTypes),i=0;i<notiKeys.length;i++){var regExp=new RegExp(notiKeys[i],"i");if(regExp.test(notiSubject))return notiKeys[i]}return!1},mapNotificationStatus=function(actionTaken){var statusArray=[{approved:"APPROVED"},{completed:"APPROVED"},{rejected:"REJECTED"},{submitted:"SUBMITTED"},{recalled:"RECALLED"},{was_pending:"PENDING"},{"system error":"ERROR"},{system_error:"ERROR"},{waiting_for_approval:"SUBMITTED"}],languageKey=_.result(_.find(statusArray,actionTaken),actionTaken);return languageKey?$language.get("shared."+languageKey):actionTaken};$scope.updateStatus=function(notification){notification.history=_.filter(notification.history,function(item){return"notified"!==item.actionTaken.toLowerCase()});var actionTaken=_.head(notification.history).actionTaken.toLowerCase(),textLineKey=notification.textLineKey;actionTaken.toLowerCase()===TASKS_CONSTANTS.STATUS.approved||actionTaken.toLowerCase()===TASKS_CONSTANTS.STATUS.completed?notification.textLine=$language.get(textLineKey):notification.textLine=$language.get(textLineKey+"_NOT"),notification.status.code=mapNotificationStatus(actionTaken),angular.forEach(notification.history,function(h){h.actionTaken.toLowerCase()!==TASKS_CONSTANTS.STATUS.rejected&&h.actionTaken.toLowerCase()!==TASKS_CONSTANTS.STATUS.approved&&h.actionTaken.toLowerCase()!==TASKS_CONSTANTS.STATUS.completed&&h.actionTaken.toLowerCase()!==TASKS_CONSTANTS.STATUS.system_error&&h.actionTaken.toLowerCase()!==TASKS_CONSTANTS.STATUS.systemError||h.comments&&""!==h.comments&&(notification.comments=h.comments)})}}]),angular.module("redbox.notifications").controller("redbox.notifications.NotificationsTaxWithholdingCtrl",["$scope","$language","redbox.notifications.TaxWithholdingNotificationsService","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($scope,$language,taxWithholdingNotificationsService,TASKS_CONSTANTS,loggerFactory){function capitalizeFirstLetter(input){return input?input.charAt(0).toUpperCase()+input.substr(1).toLowerCase():""}var logger=loggerFactory.getLogger("redbox.notifications.NotificationsTaxWithholdingCtrl"),vm=this;vm.notification=$scope.notification,vm.isReadyToRender=!1,function(){vm.notification&&taxWithholdingNotificationsService.getTaxWithholdingNotification(vm.notification).then(function(data){var textLine;vm.notification.viewOld=$language.get("framework.NOTIFICATION_VIEW_OLD_TAX_WITHHOLDING"),vm.notification.viewNew=$language.get("framework.NOTIFICATION_VIEW_NEW_TAX_WITHHOLDING"),vm.notification.newData=data.newData,vm.notification.oldData=data.oldData,vm.notification.isFederal=data.isFederal,vm.notification.diffObj=data.pendingObj,vm.notification.action=data.action,vm.notification.isFederal?!vm.notification.oldData&&vm.notification.newData?(textLine="framework.NOTIFICATION_ADD_FEDERAL_TAX_WITHHOLDING",vm.notification.noview=!0):vm.notification.oldData&&vm.notification.newData&&(textLine="framework.NOTIFICATION_CHANGE_FEDERAL_TAX_WITHHOLDING"):(vm.notification.diffObj.withholdings=data.pendingObj,!vm.notification.oldData&&vm.notification.newData?(textLine="framework.NOTIFICATION_ADD_STATE_TAX_WITHHOLDING",vm.notification.noview=!0):vm.notification.oldData&&vm.notification.newData&&(textLine="framework.NOTIFICATION_CHANGE_STATE_TAX_WITHHOLDING")),vm.notification.textLineKey=textLine,vm.notification.loadingIndicator=!1,$scope.notification.history=data.history,$scope.updateStatus(vm.notification);var newDataHeaderMessage,oldDataHeaderMessage,notificationStatus=vm.notification.status.code.toLowerCase(),messageClass="warning";switch(notificationStatus){case TASKS_CONSTANTS.STATUS.submitted:case TASKS_CONSTANTS.STATUS.pending:newDataHeaderMessage=capitalizeFirstLetter(vm.notification.action)+" "+$language.get("framework.NOTIFICATION_WIATING_FOR_APPROVAL"),oldDataHeaderMessage=$language.get("framework.TASKS_APPROVAL_CURRENT_UNTIL_APPROVED");break;case TASKS_CONSTANTS.STATUS.rejected:case TASKS_CONSTANTS.STATUS.recalled:case TASKS_CONSTANTS.STATUS.error:newDataHeaderMessage=capitalizeFirstLetter(vm.notification.action)+" "+notificationStatus,messageClass="error",oldDataHeaderMessage=$language.get("framework.NOTIFICATION_CURRENT");break;case TASKS_CONSTANTS.STATUS.approved:case TASKS_CONSTANTS.STATUS.completed:newDataHeaderMessage=capitalizeFirstLetter(vm.notification.action)+" "+notificationStatus,messageClass="success",oldDataHeaderMessage=$language.get("shared.PREV")}vm.newDataHeaderMessage=newDataHeaderMessage,vm.messageClass=messageClass,vm.oldDataHeaderMessage=oldDataHeaderMessage,vm.isReadyToRender=!0}).catch(function(error){logger.error("error occurred retrieving tax withholding details",error)})}()}]),angular.module("redbox.notifications").filter("notificationFilter",function(){return function(notifications,status){if(notifications)switch(status){case 0:return notifications;case 1:return notifications=_.filter(notifications,function(notification){return"approved"===notification.status.code});case 2:return notifications=_.filter(notifications,function(notification){return"rejected"===notification.status.code});case 3:return notifications=_.filter(notifications,function(notification){return"error"===notification.status.code});case 4:return notifications=_.filter(notifications,function(notification){return moment(notification.receiptDate).add(7,"days")>moment()});case 5:return notifications=_.filter(notifications,function(notification){return moment(notification.receiptDate).add(1,"month")>moment()});case 6:return notifications=_.filter(notifications,function(notification){return new RegExp("Address","i").test(notification.subject)});case 7:return notifications=_.filter(notifications,function(notification){return new RegExp("Emergency Contacts","i").test(notification.subject)});case 8:return notifications=_.filter(notifications,function(notification){return new RegExp("Phone Numbers","i").test(notification.subject)});case 9:return notifications=_.filter(notifications,function(notification){return new RegExp("Tax Withholding","i").test(notification.subject)});case 10:return notifications=_.filter(notifications,function(notification){return new RegExp("Direct Deposit","i").test(notification.subject)});case 11:return notifications=_.filter(notifications,function(notification){return new RegExp("Personal Information","i").test(notification.subject)});case 12:return notifications=_.filter(notifications,function(notification){return new RegExp("Deduction","i").test(notification.subject)});case 13:return notifications=_.filter(notifications,function(notification){return new RegExp("Transfer","i").test(notification.subject)});default:return notifications}}}),angular.module("redbox.notifications").service("redbox.notifications.NotificationsDeductionService",["$http","$q","redbox.framework.tasks.TASKS_CONSTANTS","adp.ng.logging.LoggerFactory",function($http,$q,TASKS_CONSTANTS,loggerFactory){var logger=loggerFactory.getLogger("redbox.notifications.NotificationsDeductionService"),getDeductionNotification=function(notificationData){var wfDeductionNotification={},notificationID=notificationData.notificationUri.href.split("/")[5],deferred=$q.defer();return $http.get("/wf/payroll/v1/workers/"+notificationData.originatorAssociateOID+"/worker-general-deduction-instructions?notificationId="+notificationID).then(function(response){switch(wfDeductionNotification.action=response.data.resourcePath.split("/").pop().split(".").pop(),wfDeductionNotification.action){case TASKS_CONSTANTS.ACTIONS.CHANGE:wfDeductionNotification.newData=processDeduction(response.data.body.events[0].data,response.data.newData),response.data.oldData&&(wfDeductionNotification.oldData=processDeduction(response.data.body.events[0].data,response.data.oldData)),deferred.resolve(wfDeductionNotification);break;case TASKS_CONSTANTS.ACTIONS.START:wfDeductionNotification.newData=processDeduction(response.data.body.events[0].data,response.data.newData),deferred.resolve(wfDeductionNotification);break;case TASKS_CONSTANTS.ACTIONS.STOP:response.data.oldData&&(wfDeductionNotification.oldData=processDeduction(response.data.body.events[0].data,response.data.oldData)),deferred.resolve(wfDeductionNotification)}response.data&&response.data.history&&(wfDeductionNotification.history=response.data.history),deferred.resolve(wfDeductionNotification),logger.info("deduction notification details retrieved successfully")}).catch(function(error){deferred.reject(error),logger.error("error retrieving deduction notification details",error)}),deferred.promise},processDeduction=function(pendingObj,data){var pendingItemID;return data=_.get(data,"workerGeneralDeductionInstructions[0].generalDeductionInstructions")||{},pendingItemID=_.get(pendingObj,"transform.workerGeneralDeductionInstruction.generalDeductionInstruction.deductionCode.codeValue")?pendingObj.transform.workerGeneralDeductionInstruction.generalDeductionInstruction.deductionCode.codeValue:pendingObj.eventContext.workerGeneralDeductionInstruction.generalDeductionInstruction.itemID,_.clone(_.find(data,function(deductionObject){return pendingItemID===_.get(deductionObject,"itemID")}),!0)};this.getDeductionNotification=getDeductionNotification}]),angular.module("redbox.notifications").service("redbox.notifications.DirectDepositNotificationService",["$http","$q","redbox.framework.tasks.factory.DirectDepositWorkflowComparisonService","redbox.framework.tasks.factory.DirectDepositWorkflowTaskHelperService","redbox.pay.directDeposit.DirectDepositDataExtraction","adp.ng.logging.LoggerFactory",function($http,$q,DirectDepositComparisonService,DirectDepositWorkflowTaskHelper,DirectDepositDataExtraction,loggerFactory){var logger=loggerFactory.getLogger("redbox.notifications.DirectDepositNotificationService"),getDirectDepositNotification=function(data){var notificationID=data.notificationUri.href.split("/")[5],deferred=$q.defer();return $http.get("/wf/payroll/v2/workers/"+data.originatorAssociateOID+"/pay-distributions?notificationId="+notificationID).then(function(response){deferred.resolve(response.data),logger.info("direct deposit notification details retrieved successfully")}).catch(function(error){deferred.reject(error),logger.error("error retrieving direct deposit notification details",error)}),deferred.promise},getUpdatedAccounts=function(oldData,newData){var directDepositData={currentData:oldData,pendingData:newData},extractedData=DirectDepositDataExtraction.extractAccountsData(directDepositData),currentAccountsInfo=extractedData.currentData,pendingAccountsInfo=extractedData.pendingData,comparisonData=DirectDepositComparisonService.getComparisonData(currentAccountsInfo,pendingAccountsInfo);return DirectDepositWorkflowTaskHelper.getPendingAccounts(comparisonData)};this.getDirectDepositNotification=getDirectDepositNotification,this.getUpdatedAccounts=getUpdatedAccounts}]),angular.module("redbox.notifications").service("redbox.notifications.NotificationsProfileWorkflowService",["$q","$http","adp.ng.logging.LoggerFactory","redbox.framework.tasks.TASKS_CONSTANTS","redbox.connections.worker.CustomFieldParserService",function($q,$http,loggerFactory,TASKS_CONSTANTS,CustomFieldParserService){var logger=loggerFactory.getLogger("redbox.notifications.NotificationsProfileWorkflowService"),WORKER_SERVICE_URI="/wf/hr/v2/workers/{associateoid}?notificationId=",WORKER_META_URI="/hr/v2/workers/{associateoid}/meta",EMERGENCY_CONTACT_URI="/wf/hr/v2/associates/{associateoid}/personal-contacts?notificationId=",getAddressDetails=function(notification){var wfAddressNotification={},deferred=$q.defer(),notificationId=notification.notificationUri.href.split("/")[5],affectedAoid=_.get(notification,"relatedAssociateRef.associateOID",notification.originatorAssociateOID),url=WORKER_SERVICE_URI.replace("{associateoid}",affectedAoid)+notificationId;return getDetails(url).then(function(data){var ActionTypePath=data.eventData.resourcePath,rs=ActionTypePath.split("."),actionType=rs[rs.length-2];"email"===actionType&&(wfAddressNotification=parseEmailData(data)),"legal-address"===actionType&&(wfAddressNotification=parseLegalAddressData(data)),"personal-address"===actionType&&(wfAddressNotification=parseMailingAddressData(data)),data&&data.history&&(wfAddressNotification.history=data.history),deferred.resolve(wfAddressNotification)}).catch(function(error){logger.error("Error occurred fetching emergency contact by passing TaskID"),deferred.reject(error)}),deferred.promise},getEmergencyContactDetails=function(notification){var wfEmergencyContactNotification={},deferred=$q.defer(),notificationId=notification.notificationUri.href.split("/")[5],affectedAoid=_.get(notification,"relatedAssociateRef.associateOID",notification.originatorAssociateOID),url=EMERGENCY_CONTACT_URI.replace("{associateoid}",affectedAoid)+notificationId,config={aoid:affectedAoid};return getDetails(url,config).then(function(data){var ActionTypePath=data.newData.resourcePath,rs=ActionTypePath.split(".");switch(wfEmergencyContactNotification.actionType=rs[rs.length-1],wfEmergencyContactNotification.actionType){case TASKS_CONSTANTS.ACTIONS.CHANGE:wfEmergencyContactNotification.newData=data.newData.body.events[0].data.transform.personalContact,data.oldData&&(wfEmergencyContactNotification.oldData=data.oldData.personalContacts[0]),deferred.resolve(wfEmergencyContactNotification);break;case TASKS_CONSTANTS.ACTIONS.ADD:wfEmergencyContactNotification.newData=data.newData.body.events[0].data.transform.personalContact,deferred.resolve(wfEmergencyContactNotification);break;case TASKS_CONSTANTS.ACTIONS.REMOVE:data.oldData&&(wfEmergencyContactNotification.oldData=data.oldData.personalContacts[0]),deferred.resolve(wfEmergencyContactNotification)}data&&data.history&&(wfEmergencyContactNotification.history=data.history)}).catch(function(error){logger.error("Error occurred fetching emergency contact by passing TaskID"),deferred.reject(error)}),deferred.promise},getDetails=function(url,config){var deferred=$q.defer();return $http.get(url,config).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error.data)}),deferred.promise},getPhoneDetails=function(notification){var wfPhoneNotification={},deferred=$q.defer(),notificationId=notification.notificationUri.href.split("/")[5],affectedAoid=_.get(notification,"relatedAssociateRef.associateOID",notification.originatorAssociateOID),url=WORKER_SERVICE_URI.replace("{associateoid}",affectedAoid)+notificationId;return getDetails(url).then(function(data){wfPhoneNotification=parsePhoneData(data),data&&data.history&&(wfPhoneNotification.history=data.history),deferred.resolve(wfPhoneNotification)}).catch(function(error){logger.error("Error occurred fetching emergency contact by passing TaskID"),deferred.reject(error)}),deferred.promise},getPersonalInformationDetails=function(notification){var deferred=$q.defer(),notificationId=notification.notificationUri.href.split("/")[5],affectedAoid=_.get(notification,"relatedAssociateRef.associateOID",notification.originatorAssociateOID),url=WORKER_SERVICE_URI.replace("{associateoid}",affectedAoid)+notificationId;return getDetails(url).then(function(data){parsePersonalInfoData(data,data.eventData.resourcePath).then(function(parsedData){data.hasOwnProperty("history")&&(parsedData.history=data.history),deferred.resolve(parsedData)})}).catch(function(error){logger.error("Error occurred fetching personal information by passing TaskID"),deferred.reject(error)}),deferred.promise},parsePersonalInfoData=function(source,resourcePath){var retValue,deferred=$q.defer();return _.includes(resourcePath,"custom-field")?parseCDFData(source).then(function(cdfData){deferred.resolve(cdfData)}):_.includes(resourcePath,"legal-address")?(retValue=parseLegalAddressData(source),deferred.resolve(retValue)):_.includes(resourcePath,"personal-address")?(retValue=parseMailingAddressData(source),deferred.resolve(retValue)):_.includes(resourcePath,"email")?(retValue=parseEmailData(source),deferred.resolve(retValue)):_.includes(resourcePath,"mobile")||_.includes(resourcePath,"landline")?(retValue=parsePhoneData(source),deferred.resolve(retValue)):_.includes(resourcePath,"fax")&&(retValue=parsePhoneData(source),deferred.resolve(retValue)),deferred.promise},parseEmailData=function(emailData){var retValue={},emailType=emailData.resourcePath.split("/")[4].split(".")[1];return retValue.actionType="email","business-communication"===emailType?(_.get(emailData,"newData.workers[0].businessCommunication.emails")&&(retValue.newData=emailData.newData.workers[0].businessCommunication.emails),_.get(emailData,"oldData.workers[0].businessCommunication.emails")&&(retValue.oldData=emailData.oldData.workers[0].businessCommunication.emails)):(_.get(emailData,"newData.workers[0].person.communication.emails")&&(retValue.newData=emailData.newData.workers[0].person.communication.emails),_.get(emailData,"oldData.workers[0].person.communication.emails")&&(retValue.oldData=emailData.oldData.workers[0].person.communication.emails)),retValue},parseLegalAddressData=function(legalAddressData){var retValue={};return retValue.actionType="legal-address",_.get(legalAddressData,"newData.workers[0].person.legalAddress")&&(retValue.newData=legalAddressData.newData.workers[0].person.legalAddress),_.get(legalAddressData,"oldData.workers[0].person.legalAddress")&&(retValue.oldData=legalAddressData.oldData.workers[0].person.legalAddress),retValue},parseMailingAddressData=function(mailingAddressData){var retValue={};return _.set(retValue,"actionType","personal-address"),_.set(retValue,"newData",_.get(mailingAddressData,"newData.workers[0].person.otherPersonalAddresses[0]")),_.set(retValue,"oldData",_.get(mailingAddressData,"oldData.workers[0].person.otherPersonalAddresses[0]")),retValue},parsePhoneData=function(phoneData){var retValue={},numbers={personal:{landline:{},mobile:{}},work:{landline:{},mobile:{},fax:{}}};try{numbers.personal.mobile.newData={formattedNumber:phoneData.newData.workers[0].person.communication.mobiles[0].formattedNumber,countryDialing:phoneData.newData.workers[0].person.communication.mobiles[0].countryDialing}}catch(e){numbers.personal.mobile.newData={}}try{numbers.personal.landline.newData={formattedNumber:phoneData.newData.workers[0].person.communication.landlines[0].formattedNumber,countryDialing:phoneData.newData.workers[0].person.communication.landlines[0].countryDialing}}catch(e){numbers.personal.landline.newData={}}try{numbers.personal.mobile.oldData={formattedNumber:phoneData.oldData.workers[0].person.communication.mobiles[0].formattedNumber,countryDialing:phoneData.oldData.workers[0].person.communication.mobiles[0].countryDialing}}catch(e){numbers.personal.mobile.oldData={}}try{numbers.personal.landline.oldData={formattedNumber:phoneData.oldData.workers[0].person.communication.landlines[0].formattedNumber,countryDialing:phoneData.oldData.workers[0].person.communication.landlines[0].countryDialing}}catch(e){numbers.personal.landline.oldData={}}try{numbers.work.mobile.newData={formattedNumber:phoneData.newData.workers[0].businessCommunication.mobiles[0].formattedNumber,countryDialing:phoneData.newData.workers[0].businessCommunication.mobiles[0].countryDialing}}catch(e){numbers.work.mobile.newData={}}try{numbers.work.landline.newData={formattedNumber:phoneData.newData.workers[0].businessCommunication.landlines[0].formattedNumber,countryDialing:phoneData.newData.workers[0].businessCommunication.landlines[0].countryDialing}}catch(e){numbers.work.landline.newData={}}try{numbers.work.fax.newData={formattedNumber:phoneData.newData.workers[0].businessCommunication.faxes[0].formattedNumber,countryDialing:phoneData.newData.workers[0].businessCommunication.faxes[0].countryDialing}}catch(e){numbers.work.fax.newData={}}try{numbers.work.mobile.oldData={formattedNumber:phoneData.oldData.workers[0].businessCommunication.mobiles[0].formattedNumber,countryDialing:phoneData.oldData.workers[0].businessCommunication.mobiles[0].countryDialing}}catch(e){numbers.work.mobile.oldData={}}try{numbers.work.landline.oldData={formattedNumber:phoneData.oldData.workers[0].businessCommunication.landlines[0].formattedNumber,countryDialing:phoneData.oldData.workers[0].businessCommunication.landlines[0].countryDialing}}catch(e){numbers.work.landline.oldData={}}try{numbers.work.fax.oldData={formattedNumber:phoneData.oldData.workers[0].businessCommunication.faxes[0].formattedNumber,countryDialing:phoneData.oldData.workers[0].businessCommunication.faxes[0].countryDialing}}catch(e){numbers.work.fax.oldData={}}return numbers.personal.mobile.newData.formattedNumber!==numbers.personal.mobile.oldData.formattedNumber||numbers.personal.mobile.newData.countryDialing!==numbers.personal.mobile.oldData.countryDialing?(retValue=numbers.personal.mobile,retValue.subtype=TASKS_CONSTANTS.SUBTYPES.PERSONAL_MOBILE):numbers.personal.landline.newData.formattedNumber!==numbers.personal.landline.oldData.formattedNumber||numbers.personal.landline.newData.countryDialing!==numbers.personal.landline.oldData.countryDialing?(retValue=numbers.personal.landline,retValue.subtype=TASKS_CONSTANTS.SUBTYPES.PERSONAL_LANDLINE):numbers.work.mobile.newData.formattedNumber!==numbers.work.mobile.oldData.formattedNumber||numbers.work.mobile.newData.countryDialing!==numbers.work.mobile.oldData.countryDialing?(retValue=numbers.work.mobile,retValue.subtype=TASKS_CONSTANTS.SUBTYPES.WORK_MOBILE):numbers.work.landline.newData.formattedNumber!==numbers.work.landline.oldData.formattedNumber||numbers.work.landline.newData.countryDialing!==numbers.work.landline.oldData.countryDialing?(retValue=numbers.work.landline,retValue.subtype=TASKS_CONSTANTS.SUBTYPES.WORK_LANDLINE):numbers.work.fax.newData.formattedNumber!==numbers.work.fax.oldData.formattedNumber||numbers.work.fax.newData.countryDialing!==numbers.work.fax.oldData.countryDialing?(retValue=numbers.work.fax,retValue.subtype=TASKS_CONSTANTS.SUBTYPES.WORK_FAX):logger.error("Error occurred in processPhoneEmployee, no numbers changed"),retValue.actionType="phone",retValue},parseCDFData=function(cdfEventData){var cdfItem,deferred=$q.defer(),url=WORKER_META_URI.replace("{associateoid}",cdfEventData.affectedUser.userOID);return getDetails(url).then(function(metaResponse){cdfItem=CustomFieldParserService.parseCustomFieldEvent(cdfEventData.oldData.workers[0],metaResponse.meta,cdfEventData),deferred.resolve({actionType:"custom-fields",newData:cdfItem.pendingEvent.requestedValue,oldData:cdfItem.value,fieldLabel:cdfItem.label})}),deferred.promise};this.getEmergencyContactDetails=getEmergencyContactDetails,this.getAddressDetails=getAddressDetails,this.getPhoneDetails=getPhoneDetails,this.getPersonalInformationDetails=getPersonalInformationDetails}]),angular.module("redbox.notifications").service("redbox.notifications.TaxWithholdingNotificationsService",["$http","$q","redbox.framework.tasks.TASKS_CONSTANTS","redbox.pay.TaxWithholdingService","redbox.pay.FederalWithholdingService","redbox.pay.StateWithholdingService","redbox.pay.TaxWithholdingConstant","redbox.workflow.WorkflowUtils",function($http,$q,TASKS_CONSTANTS,TaxWithholdingService,FederalWithholdingService,StateWithholdingService,TaxWithholdingConstant,workflowUtils){
function getNotifications(url){return getDetails(url).then(function(data){var notifications={},isStateNotifications=_.has(data,"oldData.usStateTaxWithholdingElections")||_.has(data,"newData.usStateTaxWithholdingElections"),isFederalNotifications=_.has(data,"oldData.usFederalTaxWithholdingElections")||_.has(data,"newData.usFederalTaxWithholdingElections");if(isStateNotifications){notifications={data:{}},_newData=TaxWithholdingService.extractData(data.newData),_oldData=TaxWithholdingService.extractData(data.oldData),notifications.eventData=_.get(data,"eventData"),notifications.history=_.get(data,["history"]),notifications.isFederal=!1;var currentState,pendingState,stateWithholding={};_.forEach(_oldData,function(currentWithholding){stateWithholding=StateWithholdingService.createStateWithholdingModel(currentWithholding),_.forEach(_newData,function(pendingWithholding){currentWithholding.stateCode.longName===pendingWithholding.stateCode.longName&&(currentState=StateWithholdingService.getStateTaxData(currentWithholding),pendingState=StateWithholdingService.getStateTaxData(pendingWithholding),stateWithholding.oldData=currentState,stateWithholding.newData=pendingState,stateWithholding.isChanged=TaxWithholdingService.isDataChanged(currentState,pendingState))}),stateWithholding.isChanged&&(notifications.data=stateWithholding)})}return isFederalNotifications&&(_newData=TaxWithholdingService.extractData(data.newData),_oldData=TaxWithholdingService.extractData(data.oldData),notifications.newData=FederalWithholdingService.createFederalWithholdingModel(_newData),notifications.oldData=FederalWithholdingService.createFederalWithholdingModel(_oldData),notifications.eventData=_.get(data,"eventData"),notifications.history=_.get(data,["history"]),notifications.isFederal=!0),notifications})}var _newData,_oldData,getTaxWithholdingNotification=function(notification){var resourcePath,resourceOperation,wfWithholdingNotification={},deferred=$q.defer(),notificationId=notification.notificationUri.href.split("/")[5],url=TaxWithholdingConstant.URI.TAX_NOTIFICATION.replace("{associateoid}",notification.originatorAssociateOID)+notificationId;return getNotifications(url).then(function(data){var newData,oldData;if(wfWithholdingNotification.isFederal=data.isFederal,wfWithholdingNotification.isFederal?(newData=_.get(data,"newData"),oldData=_.get(data,"oldData")):(newData=_.get(data,"data.newData"),oldData=_.get(data,"data.oldData")),_.has(data,"eventData")&&(resourcePath=_.get(data,"eventData.resourcePath")),resourcePath&&(resourceOperation=resourcePath.split("/").pop()),resourceOperation){switch(wfWithholdingNotification.action=resourceOperation.split(".").pop(),wfWithholdingNotification.action){case TASKS_CONSTANTS.ACTIONS.CHANGE:wfWithholdingNotification.newData=newData,(_.has(data,"oldData")||_.has(data,"data.oldData"))&&(wfWithholdingNotification.oldData=oldData,wfWithholdingNotification.pendingObj=workflowUtils.map(oldData,newData)),deferred.resolve(wfWithholdingNotification);break;case TASKS_CONSTANTS.ACTIONS.ADD:wfWithholdingNotification.newData=newData,wfWithholdingNotification.pendingObj=workflowUtils.map({},newData),deferred.resolve(wfWithholdingNotification)}_.has(data,"history")&&(wfWithholdingNotification.history=data.history)}return wfWithholdingNotification})},getDetails=function(url){return $http.get(url).then(function(result){return result.data})};this.getTaxWithholdingNotification=getTaxWithholdingNotification}]),angular.module("redbox.notifications").factory("redbox.notifications.NotificationsTransferFactory",["$language","adp.ng.logging.LoggerFactory","redbox.manageractions.transfer.TransferConstants","redbox.workflow.WorkflowUtils",function($language,loggerFactory,transferConstants,workflowUtils){function processPendingData(currentData,pendingData){try{var baseRemunerationRecordingBasisCode,removeBaseRemuneration,curBaseRemuneration,pendBaseRemuneration;if(_.forOwn(currentData,function(value,key){_.has(pendingData,key)?_.isEqual(_.get(currentData,key),_.get(pendingData,key))?(currentData=_.omit(currentData,key),pendingData=_.omit(pendingData,key)):_.endsWith(key,"Code")&&_.isObject(value)&&_.isObject(_.get(pendingData,key))&&_.isEqual(_.get(value,"codeValue"),_.get(_.get(pendingData,key),"codeValue"))&&(currentData=_.omit(currentData,key),pendingData=_.omit(pendingData,key)):currentData=_.omit(currentData,key)}),_.isEqual(_.get(currentData,"standardHours.hoursQuantity"),_.get(pendingData,"standardHours.hoursQuantity"))&&(currentData=_.omit(currentData,"standardHours"),pendingData=_.omit(pendingData,"standardHours")),_.isEqual(_.get(currentData,"assignedOrganizationalUnits[0].nameCode.codeValue"),_.get(pendingData,"assignedOrganizationalUnits[0].nameCode.codeValue"))&&(currentData=_.omit(currentData,"assignedOrganizationalUnits"),pendingData=_.omit(pendingData,"assignedOrganizationalUnits")),_.isEqual(_.get(currentData,"homeWorkLocation.nameCode.codeValue"),_.get(pendingData,"homeWorkLocation.nameCode.codeValue"))&&(currentData=_.omit(currentData,"homeWorkLocation"),pendingData=_.omit(pendingData,"homeWorkLocation")),_.has(pendingData,"baseRemuneration")){switch(baseRemunerationRecordingBasisCode=_.get(pendingData,"baseRemuneration.recordingBasisCode.codeValue")){case transferConstants.BASEREMUNERATION.RECORDINGBASISCODE.ANNUAL:removeBaseRemuneration=_.isEqual(_.get(currentData,"baseRemuneration.annualRateAmount.amountValue"),_.get(pendingData,"baseRemuneration.annualRateAmount.amountValue"));break;case transferConstants.BASEREMUNERATION.RECORDINGBASISCODE.MONTHLY:removeBaseRemuneration=_.isEqual(_.get(currentData,"baseRemuneration.monthlyRateAmount.amountValue"),_.get(pendingData,"baseRemuneration.monthlyRateAmount.amountValue"));break;case transferConstants.BASEREMUNERATION.RECORDINGBASISCODE.SEMIMONTHLY:removeBaseRemuneration=_.isEqual(_.get(currentData,"baseRemuneration.semiMonthlyRateAmount.amountValue"),_.get(pendingData,"baseRemuneration.semiMonthlyRateAmount.amountValue"));break;case transferConstants.BASEREMUNERATION.RECORDINGBASISCODE.BIWEEKLY:removeBaseRemuneration=_.isEqual(_.get(currentData,"baseRemuneration.biweeklyRateAmount.amountValue"),_.get(pendingData,"baseRemuneration.biweeklyRateAmount.amountValue"));break;case transferConstants.BASEREMUNERATION.RECORDINGBASISCODE.WEEKLY:removeBaseRemuneration=_.isEqual(_.get(currentData,"baseRemuneration.weeklyRateAmount.amountValue"),_.get(pendingData,"baseRemuneration.weeklyRateAmount.amountValue"));break;case transferConstants.BASEREMUNERATION.RECORDINGBASISCODE.DAILY:removeBaseRemuneration=_.isEqual(_.get(currentData,"baseRemuneration.dailyRateAmount.amountValue"),_.get(pendingData,"baseRemuneration.dailyRateAmount.amountValue"));break;case transferConstants.BASEREMUNERATION.RECORDINGBASISCODE.HOURLY:removeBaseRemuneration=_.isEqual(_.get(currentData,"baseRemuneration.hourlyRateAmount.amountValue"),_.get(pendingData,"baseRemuneration.hourlyRateAmount.amountValue"))}removeBaseRemuneration?(currentData=_.omit(currentData,"baseRemuneration"),pendingData=_.omit(pendingData,"baseRemuneration")):(curBaseRemuneration=_.get(currentData,"baseRemuneration"),pendBaseRemuneration=_.get(pendingData,"baseRemuneration"),_.forOwn(curBaseRemuneration,function(value,key){_.has(pendBaseRemuneration,key)||(curBaseRemuneration=_.omit(curBaseRemuneration,key))}),_.set(currentData,"baseRemuneration",curBaseRemuneration))}}catch(error){logger.error("Error occurred in Notifications Transfer Factory",error)}return workflowUtils.map(currentData,pendingData)}function updateLabel(languageKey){var languageStr=$language.get("manageractions."+languageKey);return _.capitalize(languageStr.toLowerCase())}var logger=loggerFactory.getLogger("redbox.notifications.NotificationsTransferFactory");return{ProcessPendingData:processPendingData,updateLabel:updateLabel}}]),angular.module("redbox.notifications").service("redbox.notifications.NotificationsTransferService",["$http","redbox.notifications.NotificationsTransferFactory",function($http,transferFactory){function fetchTransfer(href,config){return $http.get(href,config).then(function(response){return response.data})}var getTransferNotification=function(notificationData){var wfTransferNotification={},notificationID=notificationData.notificationUri.href.split("/")[5],config={aoid:notificationData.relatedAssociateRef.associateOID},href="/wf/hr/v2/workers/"+notificationData.relatedAssociateRef.associateOID+"/worker-transfer?notificationId="+notificationID;return fetchTransfer(href,config).then(function(response){wfTransferNotification.action=response.resourcePath.split("/").pop().split(".").pop();var currentData=_.get(response,"currentContent.workers[0].workAssignments[0]")||{},pendingData=_.get(response,"eventData.body.events[0].data.transform.workAssignment")||{};_.set(pendingData,"eventReasonCode",_.get(response,"eventData.body.events[0].data.transform.eventReasonCode")),_.set(pendingData,"effectiveDateTime",moment(_.get(response,"eventData.body.events[0].data.transform.effectiveDateTime")).format("ll"));var processedObj=transferFactory.ProcessPendingData(currentData,pendingData);return _.has(processedObj,"jobCode.longName")||_.set(processedObj,"currentJob.longName",{value:"",pending:"change",prev:_.get(currentData,"jobCode.longName")}),{processedObj:processedObj,history:response.history}})};this.getTransferNotification=getTransferNotification}]),angular.module("redbox.notifications").service("redbox.notifications.NotificationWfService",["$rootScope","$http","$q","$language","redbox.framework.tasks.TasksService","redbox.framework.tasks.PortalMessagesService","adp.ng.logging.LoggerFactory",function($rootScope,$http,$q,$language,tasksService,portalMessagesService,loggerFactory){var notificationDeferred,response={id:"wfNotifications",title:$language.get("framework.NOTIFICATIONS"),message:"showing notifications",count:0,icon:"fa fa-bell-o",singleItemUrl:"app/notifications/views/single-notification.html",taskListUrl:"app/notifications/views/notifications.html"},logger=loggerFactory.getLogger("redbox.notifications.NotificationWfService");$rootScope.$on("$languageChangeSuccess",function(){response.title=$language.get("framework.NOTIFICATIONS")}),this.init=function(){portalMessagesService.getRedboxWorkflowNotifications().then(function(data){response.count=data.length,tasksService.updateNotificationData(response)})},this.getNotificationTypes=function(){return notificationDeferred?notificationDeferred.promise:(notificationDeferred=$q.defer(),$http.get("app/notifications/notification-types.json").then(function(results){notificationDeferred.resolve(results.data)}).catch(function(error){logger.error("Error occurred retrieving tasks types",error.data),notificationDeferred.reject(error.data)}),notificationDeferred.promise)}}]),angular.module("redbox.onboarding").controller("redbox.onboarding.HeaderProfileCtrl",["$rootScope","$scope","$window","adp.ng.ui.slidein.FocusSlideIn","redbox.ext.shared.services.ProfileService","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserPermissionService",function($rootScope,$scope,$window,$slidein,Profile,LoggerFactory,UserPermission){function init(){getProfile()}function getProfile(){logger.info("Retrieving user identity"),Profile.get().then(function(result){logger.info("Profile retrieved successfully"),vm.profile=result,vm.profile.hasWorkerProfile=UserPermission.hasWorkerProfile()}).catch(function(error){logger.error("Error occurred retrieving profile",error)})}var slideIn,languageChangeListener,vm=this,logger=LoggerFactory.getLogger("redbox.onboarding.HeaderProfileCtrl");vm.profile={},vm.slideInSettings=function(){slideIn=$slidein({contentTemplate:"app/settings/views/index.html"}),slideIn.getScope().$on("adp-focus-slide-in.hide",function(){return $rootScope.showOnboardingOverlay&&$window.location.reload()})},languageChangeListener=$rootScope.$on("$languageChangeSuccess",function(){slideIn&&($rootScope.showOnboardingOverlay=!0,slideIn.hide())}),$scope.$on("$destroy",function(){languageChangeListener()}),init()}]),angular.module("redbox.onboarding").controller("redbox.onboarding.OnboardingCtrl",["$q","$language","$scope","redbox.onboarding.StateService","redbox.onboarding.common.StartDateService","redbox.onboarding.errorModal.ErrorModalService",function($q,$language,$scope,StateService,StartDateService,ErrorModalService){function onInit(){getStartDateDetails(),StartDateService.isRehire().then(setRehireStatus),StateService.startStateTracking(),$scope.$on("$destroy",function(){StateService.stopStateTracking()})}function setRehireStatus(isRehire){vm.isRehire=isRehire}function getStartDateDetails(){StartDateService.getStartDateDetails().then(function(details){vm.startDateDetails=details,getPopoverStartDateString().then(function(startDateString){vm.popoverDate=startDateString})}).catch(ErrorModalService.showErrorModal)}function getPopoverStartDateString(){return isBeforeStartDate()?$language.getMessage("onboarding.ONBOARDING_GENERICS_START_DATE").then(function(msg){return msg+": "+vm.startDateDetails.startDate}):$q.when("")}function isBeforeStartDate(){return vm.startDateDetails.daysUntilStart>0}var vm=this;onInit()}]),angular.module("redbox.onboarding").controller("redbox.onboarding.StepsHeaderCtrl",["$scope","stepName",function($scope,stepName){$scope.heading=stepName.toUpperCase()+"_HEADING",$scope.subheading=stepName.toUpperCase()+"_SUBHEADING"}]),angular.module("redbox.onboarding").controller("redbox.onboarding.StepsMobileHeaderCtrl",["$scope","stepName",function($scope,stepName){$scope.heading="TITLE_"+stepName.toUpperCase()}]),angular.module("redbox.onboarding").directive("obSvgSafe",function(){return{restrict:"A",scope:!1,link:function(scope,elem,attrs){function recurseNodes(node,accumulator){var regexCapture;_.forEach(node.attributes,function(attr){regexCapture=prefixRegex.exec(attr.nodeName),regexCapture&&accumulator.push([$(node),regexCapture[1],attr.value])}),_.forEach(node.childNodes,function(childNode){childNode.attributes&&recurseNodes(childNode,accumulator)})}function updateNodeValues(){var cache={};prefixedNodes.forEach(function(pn){cache[pn[2]]=cache[pn[2]]||scope.$eval(pn[2]),pn[0].attr(pn[1],cache[pn[2]])})}var watches=[],prefixedNodes=[],prefix=attrs.prefix||"data-",prefixRegex=new RegExp("^"+prefix+"(.+)$");recurseNodes(elem[0],prefixedNodes),watches=attrs.watch?[attrs.watch]:prefixedNodes.map(function(prefixedNode){return prefixedNode[2]}),watches.forEach(function(watchString){scope.$watch(function(){return scope.$eval(watchString)},updateNodeValues)}),updateNodeValues()}}}),angular.module("redbox.onboarding").config(["redbox.onboarding.core.ONBOARDING_CONSTANT","$stateProvider","$urlRouterProvider","redbox.onboarding.StateServiceProvider",function(OB,$stateProvider,$urlRouterProvider,StateServiceProvider){function extractCtrlName(dottedCtrlName){var parts=dottedCtrlName.split(".");return parts[parts.length-1]}$urlRouterProvider.when(OB.onboarding.url,OB.onboarding.url+OB.steps.welcome.url),$stateProvider.state(OB.onboarding.state,{url:OB.onboarding.url,title:"onboarding."+OB.onboarding.title,views:{onboardingMain:{templateUrl:"app/onboarding/main.html",controller:"redbox.onboarding.OnboardingCtrl as OnboardingCtrl"}}}),angular.forEach(OB.steps,function(step,stepName){StateServiceProvider.registerEvaluatorObject(stepName,step.evaluator),$stateProvider.state(step.state,{url:step.url,title:"onboarding."+step.title,views:{stepsMain:angular.extend({templateUrl:"app/onboarding/modules/steps/"+stepName+"/views/"+stepName+".html",controller:step.controller+" as "+extractCtrlName(step.controller)},step.views&&step.views.stepsMain),stepsHeader:angular.extend({templateUrl:"app/onboarding/modules/header/views/ob-header.html",controller:"redbox.onboarding.StepsHeaderCtrl",resolve:{stepName:function(){return stepName}}},step.views&&step.views.stepsHeader),stepsMobileHeader:angular.extend({templateUrl:"app/onboarding/modules/header/views/ob-mobile-header.html",controller:"redbox.onboarding.StepsMobileHeaderCtrl",resolve:{stepName:function(){return stepName}}},step.views&&step.views.stepsMobileHeader)}})})}]).run(["redbox.onboarding.core.ONBOARDING_CONSTANT","$rootScope","$state",function(OB,$rootScope,$state){$rootScope.$on("$stateChangeStart",function(event,toState){toState.name===OB.onboarding.state&&(event.preventDefault(),$state.go(OB.steps.welcome.state))})}]),angular.module("redbox.onboarding.core").constant("redbox.onboarding.core.ONBOARDING_CONSTANT",{daysPastStartDateToShowDashboardTile:7,onboarding:{name:"onboarding",state:"onboarding",url:"/onboarding",title:"TITLE_WELCOME"},steps:{welcome:{controller:"redbox.onboarding.steps.welcome.WelcomeCtrl",state:"onboarding.welcome",url:"/welcome",title:"TITLE_WELCOME",icons:{incomplete:"fa-home",complete:"fa-check-circle"},views:{stepsHeader:{controller:"redbox.onboarding.steps.welcome.WelcomeHeaderCtrl"}},evaluator:{timer:!0}},welcomevideo:{controller:"redbox.onboarding.steps.welcomevideo.WelcomeVideoCtrl",state:"onboarding.welcomevideo",url:"/welcomevideo",title:"TITLE_WELCOMEVIDEO",icons:{incomplete:"fa-video-camera",complete:"fa-check-circle"},evaluator:{timer:!0}},team:{controller:"redbox.onboarding.steps.team.TeamCtrl",state:"onboarding.team",url:"/team",title:"TITLE_TEAM",icons:{incomplete:"fa-group",complete:"fa-check-circle"},welcomeScreen:{description:"WELCOME_SCREEN_MEET_THE_TEAM"},evaluator:{timer:!0}},paperwork:{controller:"redbox.onboarding.steps.paperwork.PaperworkCtrl",state:"onboarding.paperwork",url:"/paperwork",title:"TITLE_PAPERWORK",icons:{incomplete:"fa-files-o",complete:"fa-check-circle"},welcomeScreen:{description:"WELCOME_SCREEN_PAPERWORK"},evaluator:{taskService:"redbox.onboarding.steps.paperwork.tasks.PaperworkTasksService"}},whatwedo:{controller:"redbox.onboarding.steps.whatwedo.WhatwedoCtrl",state:"onboarding.whatwedo",url:"/whatwedo",title:"TITLE_WHATWEDO",icons:{incomplete:"fa-briefcase",complete:"fa-check-circle"},welcomeScreen:{description:"WELCOME_SCREEN_COMPANY"},evaluator:{timer:!0}},about:{controller:"redbox.onboarding.steps.about.AboutCtrl",state:"onboarding.about",url:"/about",title:"TITLE_ABOUT",icons:{incomplete:"fa-comment-o",complete:"fa-check-circle"},welcomeScreen:{description:"WELCOME_SCREEN_ABOUT"},evaluator:{taskService:"redbox.onboarding.steps.about.tasks.AboutTasksService"}},neighborhood:{controller:"redbox.onboarding.steps.neighborhood.NeighborhoodCtrl",state:"onboarding.neighborhood",url:"/neighborhood",title:"TITLE_NEIGHBORHOOD",icons:{incomplete:"fa-map-marker",complete:"fa-check-circle"},evaluator:{timer:!0}},done:{controller:"redbox.onboarding.steps.done.DoneCtrl",state:"onboarding.done",url:"/done",title:"TITLE_DONE",icons:{incomplete:"fa-star-o",complete:"fa-check-circle"},evaluator:{service:"redbox.onboarding.steps.done.DoneEvaluatorService"}}}}).constant("redbox.onboarding.core.ProgressStates",["completed","skipped","incomplete"]),angular.module("redbox.onboarding").factory("redbox.onboarding.ProgressService",["$q","redbox.onboarding.core.ProgressStates","redbox.onboarding.template.TemplateService","adp.ng.logging.LoggerFactory",function($q,ProgressStates,TemplateService,LoggerFactory){function save(stepId,state){return stateExists(state)?update(stepId,state):(logger.error('State "'+state+'" does not exist. Allowed states: ',JSON.stringify(ProgressStates)),$q.reject())}function update(stepId,state){return TemplateService.getTemplate().then(function(template){return updatePagesArray(template,stepId,state)?TemplateService.postTemplate(stepId,state):(logger.debug(stepId+": Pages array not updated because passed state was the same as current state"),$q.reject())})}function updatePagesArray(template,stepId,state){var updated=!1,obj=_.find(template.pages,{key:stepId});return obj.status!==state&&(obj.status=state,updated=!0),updated}function stateExists(state){return _.contains(ProgressStates,state)}var logger=LoggerFactory.getLogger("redbox.onboarding.ProgressService");return{save:save}}]),angular.module("redbox.onboarding").provider("redbox.onboarding.StateService",[function(){function registerEvaluatorObject(stateName,evaluator){registeredEvaluatorsObjects[stateName]=evaluator}function StateService($injector,$rootScope,$state,$timeout,$q,TaskStatesConstant,ProgressService,LoggerFactory,TaskEvaluatorServiceGenerator){function startStateTracking(){stopStateTracking(),cancelStateChangeSuccessListener=stateChangeSuccessListener(),enteredNewState($state.current.name)}function stopStateTracking(){leftPreviousState(),cancelStateChangeSuccessListener&&cancelStateChangeSuccessListener()}function stateChangeSuccessListener(){return $rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState){enteredNewState(toState.name)})}function enteredNewState(stateName){var currentStateEvaluatorObject,currentTaskService,shortStateName=getShortStateName(stateName);leftPreviousState(),currentStateName=shortStateName,registeredEvaluatorsObjects[shortStateName]&&(currentStateEvaluatorObject=registeredEvaluatorsObjects[shortStateName],currentStateEvaluatorObject.timer?startTimer():currentStateEvaluatorObject.service?setupEvaluator($injector.get(currentStateEvaluatorObject.service),shortStateName):currentStateEvaluatorObject.taskService&&(currentTaskService=$injector.get(currentStateEvaluatorObject.taskService),setupEvaluator(new TaskEvaluatorServiceGenerator(currentTaskService),shortStateName)))}function setupEvaluator(evaluatorService,shortStateName){var setupPromise,currentCallback,currentStateNameCopy;currentStateEvaluatorService=evaluatorService,currentStateEvaluatorService.setup?(currentCallback=currentStateEvaluatorService.callback,currentStateNameCopy=currentStateName,setupPromise=$q.when(currentStateEvaluatorService.setup(function(){currentCallback().then(handleStepCompletionResult.bind(void 0,currentStateNameCopy))}))):setupPromise=$q.when(),setupPromise.then(currentStateEvaluatorService.callback).then(handleStepCompletionResult.bind(void 0,shortStateName)).catch(function(e){logger.debug(e)})}function leftPreviousState(){clearTimer(),currentStateEvaluatorService&&(currentStateEvaluatorService.callback().then(handleStepCompletionResult.bind(void 0,currentStateName)).catch(function(e){logger.debug(e)}),currentStateEvaluatorService.teardown&&currentStateEvaluatorService.teardown()),currentStateName=void 0,currentStateEvaluatorService=void 0}function handleStepCompletionResult(stateName,isComplete){var message=isComplete?TaskStatesConstant.COMPLETED:TaskStatesConstant.INCOMPLETE;ProgressService.save(stateName,message)}function startTimer(){clearTimer(),timer=$timeout(handleStepCompletionResult.bind(void 0,currentStateName,!0),delay)}function clearTimer(){timer&&($timeout.cancel(timer),handleStepCompletionResult(currentStateName,!0),timer=void 0)}function getShortStateName(stateName){return stateName.substring(stateName.indexOf(".")+1)}var cancelStateChangeSuccessListener,timer,currentStateEvaluatorService,currentStateName,delay=4e3,logger=LoggerFactory.getLogger("redbox.onboarding.StateService");return{startStateTracking:startStateTracking,stopStateTracking:stopStateTracking}}var registeredEvaluatorsObjects={},$get=["$injector","$rootScope","$state","$timeout","$q","redbox.onboarding.tasks.TaskStatesConstant","redbox.onboarding.ProgressService","adp.ng.logging.LoggerFactory","redbox.onboarding.tasks.TaskEvaluatorServiceGenerator",StateService];angular.extend(this,{registerEvaluatorObject:registerEvaluatorObject,$get:$get})}]),angular.module("redbox.onboarding.admin").component("obAdminSettings",{controller:"redbox.onboarding.admin.OnboardingSettingsCtrl",controllerAs:"onboardingSettingsCtrl",templateUrl:"app/onboarding/modules/admin/components/onboarding-admin-settings/onboarding-admin-settings-component.html"}).controller("redbox.onboarding.admin.OnboardingSettingsCtrl",["$scope","$rootScope","$language","redbox.onboarding.template.AdminTemplateService",function($scope,$rootScope,$language,AdminTemplateService){function readTags(response){vm.hasSteps={},_.forEach(["team","about"],function(stepName){vm.permissions[stepName].exempt=_.includes(_.get(response,"steps."+stepName+".tags"),"exempt"),vm.permissions[stepName].nonexempt=_.includes(_.get(response,"steps."+stepName+".tags"),"nonexempt"),vm.hasSteps[stepName]=!!_.get(response,"steps."+stepName)})}function handlePostErr(){vm.servicesErrorObj.postShowAlert=!0}var vm=this;angular.extend(vm,{permissions:{about:{exempt:!1,nonexempt:!1},team:{exempt:!1,nonexempt:!1}},servicesErrorObj:{postShowAlert:!1,alertType:"error",alertMsg:"shared.SERVICE_FAILURE_ERROR_MESSAGE"},loading:!0,isOpen:{exempt:!1,nonexempt:!1}}),angular.extend(vm,{saveTag:function(stepName,tag){return vm.permissions[stepName][tag]?AdminTemplateService.addTagToStep(stepName,tag).catch(function(){handlePostErr()}):AdminTemplateService.removeTagFromStep(stepName,tag).catch(function(){handlePostErr()})},lang:$language}),$scope.$watchCollection(function(){return vm.isOpen},function(newVal,oldVal){newVal!==oldVal&&$rootScope.$broadcast("reload-dashboard")}),AdminTemplateService.getClientTemplate().then(readTags).finally(function(){vm.loading=!1})}]),angular.module("redbox.onboarding.admin").component("onboardingChecklistList",{bindings:{filters:"@"},templateUrl:"app/onboarding/modules/admin/components/onboarding-checklist-list/onboarding-checklist-list-component.html",controller:"redbox.onboarding.admin.OnboardingChecklistCtrl",controllerAs:"onboardingChecklistViewCtrl"}),angular.module("redbox.onboarding.admin").controller("redbox.onboarding.admin.OnboardingChecklistCtrl",["$q","$language","redbox.framework.checklists.ChecklistService","redbox.onboarding.team.EmployeeService",function($q,$language,ChecklistService,EmployeeService){function loadChecklistSummaries(){return ChecklistService.getChecklistSummaries(void 0,CHECKLIST_GROUP_ID,[vm.filters]).then(getWorkerData).then(createChecklistData).catch(handleError).finally(function(){vm.loading=!1})}function getWorkerData(summaries){return vm.checklistSummaries=!!summaries.results.length,employees=_.map(summaries.results,function(item){return{employee:new EmployeeService({aoid:item.assigneeAoid}),summary:item}}),$q.all(_.map(employees,function(e,i){return $q.all({workerName:e.employee.getName(),workerProfile:e.employee.getWorkerProfile(),managerName:e.employee.getManager().then(function(manager){return manager.getName()}),workerIndex:i,summary:e.summary})}))}function createChecklistData(data){var list={};vm.completedChecklist?vm.checklists=getCompleteLists(data,list):vm.checklists=getIncompleteLists(data,list)}function getIncompleteLists(data,list){return list.rows=_.map(data,function(item){var status,managerNameArr=item.managerName.formattedName.split(","),workerName=item.workerName.givenName+" "+item.workerName.familyName1,managerName=managerNameArr[1]+" "+managerNameArr[0],statusMessageContent='<i class="fa fa-flag accent-5-dark"></i>'+item.summary.overdueTaskCount+" ",overdueStyleClass=item.summary.overdueTaskCount>0?"row-accent":"";return status=item.summary.overdueTaskCount>0?item.summary.overdueTaskCount>1?statusMessageContent+$language.get("shared.OVERDUE_TASKS"):statusMessageContent+$language.get("shared.OVERDUE_TASK"):$language.get("shared.IN_PROGRESS"),{cls:overdueStyleClass,loadDetails:function(){return getChecklistDetails(item.workerIndex,item.summary)},options:{items:[{name:$language.get("onboarding.VIEW_CHECKLIST"),actionType:"view",loadOption:function(){openEmployeeChecklistSlideIn(item.summary)}}]},columns:[{content:workerName,cls:"worker"},{content:managerName,cls:"manager"},{content:status,cls:"status"}]}}),list.headers={items:[{content:$language.get("onboarding.ADMIN_CHECKLIST_VIEW_TABLE_HEADER_EMPLOYEE_NAME"),cls:"header-worker",clsRsp:"header-worker-width-xs"},{content:$language.get("onboarding.ADMIN_CHECKLIST_VIEW_TABLE_HEADER_MANAGER"),cls:"header-manager"},{content:$language.get("onboarding.ADMIN_CHECKLIST_VIEW_TABLE_HEADER_STATUS"),cls:"header-status"}]},list}function getCompleteLists(data,list){return list.rows=_.map(data,function(item){var managerNameArr=item.managerName.formattedName.split(","),workerName=item.workerName.givenName+" "+item.workerName.familyName1,managerName=managerNameArr[1]+" "+managerNameArr[0],completedDate=moment(item.summary.completedDate).format("MMM D, YYYY"),overdueStyleClass="row-completed-list";return{cls:overdueStyleClass,options:{template:"app/onboarding/modules/admin/views/view-checklist-link.html",items:[{name:$language.get("shared.VIEW"),actionType:"view",loadOption:function(){openEmployeeChecklistSlideIn(item.summary)}}]},columns:[{content:workerName,cls:"worker"},{content:managerName,cls:"manager"},{content:completedDate,cls:"worker"}]}}),list.headers={items:[{content:$language.get("onboarding.ADMIN_CHECKLIST_VIEW_TABLE_HEADER_EMPLOYEE_NAME"),cls:"header-worker",clsRsp:"header-worker-width-xs"},{content:$language.get("onboarding.ADMIN_CHECKLIST_VIEW_TABLE_HEADER_MANAGER"),cls:"header-manager"},{content:$language.get("onboarding.COMPLETION_DATE")}]},list}function getChecklistDetails(workerIndex,summary){return getChecklistDetailData(workerIndex,summary).then(createChecklistDetailData)}function getChecklistDetailData(workerIndex,summary){var employee=employees[workerIndex].employee;return $q.all({checklist:summary.overdueTaskCount>0?ChecklistService.getChecklist(summary.assigneeAoid,summary.groupId,!0):{attrs:{tasks:[]}},jobTitle:employee.getJobTitle(),startDate:employee.getStartDate().catch(function(){}),location:employee.getLocation(),summary:summary,index:workerIndex})}function createChecklistDetailData(data){var startDate,startDateLabel,startDateString,overdueTasks,today=moment().startOf("day");overdueTasks=_.filter(data.checklist.attrs.tasks,function(task){return!task.completed&&moment(task.dueDate).isBefore(today)}),overdueTasks=_.map(overdueTasks,function(task){return{name:task.name,days:today.diff(moment(task.dueDate),"days")}}),data.startDate&&(startDate=moment(data.startDate).startOf("day"),startDateLabel=$language.get(startDate.isBefore(today)?"shared.STARTED":"shared.STARTING"),startDateString=startDate.format("MMM D, YYYY"));var details={jobTitle:data.jobTitle,location:data.location,startDate:{label:startDateLabel,value:startDateString},overdueTasks:overdueTasks};vm.checklists.rows[data.index].details=details,vm.checklists.rows[data.index].details.template="app/onboarding/modules/admin/views/onboarding-checklist-detail.html"}function handleError(e){vm.error=e||!0}function openEmployeeChecklistSlideIn(summary){return ChecklistService.viewIndividualChecklist(summary.assigneeAoid,summary.groupId).then(function(){vm.loading=!0,loadChecklistSummaries()})}var employees,vm=this,CHECKLIST_GROUP_ID="onboarding";vm.loading=!0,"complete"===vm.filters?vm.completedChecklist=!0:vm.completedChecklist=!1,vm.checklistTitle=vm.completedChecklist?$language.get("onboarding.COMPLETED_CHECKLISTS"):$language.get("onboarding.ADMIN_CHECKLIST_VIEW_PAGE_TITLE"),vm.checklistError=vm.completedChecklist?$language.get("onboarding.ADMIN_NO_COMPLETED_CHECKLISTS_IN_PROGRESS_MESSAGE"):$language.get("onboarding.ADMIN_NO_CHECKLISTS_IN_PROGRESS_MESSAGE"),loadChecklistSummaries()}]),angular.module("redbox.onboarding.admin").controller("redbox.onboarding.admin.ObChecklistPastePodalCtrl",["$scope","$timeout","$language",function($scope,$timeout,$language){function initializeController(){initializeLanguageKeys()}function initializeLanguageKeys(){vm.lang={PASTE_TASKS:$language.get("shared.PASTE_TASKS")}}function fadeInBackdrop(){$timeout(function(){vm.fadeIn=!0},150)}function removeFadeIn(){vm.fadeIn=!1}var vm=this;angular.extend(vm,{$onInit:initializeController,fadeIn:!1}),$scope.$watch(function(){return vm.open},function(podalOpened){podalOpened?fadeInBackdrop():removeFadeIn()})}]).component("obChecklistPastePodal",{bindings:{open:"=",close:"&"},transclude:!0,controller:"redbox.onboarding.admin.ObChecklistPastePodalCtrl",controllerAs:"obChecklistPastePodalCtrl",templateUrl:"app/onboarding/modules/admin/components/onboarding-checklist-paste/onboarding-checklist-paste-component-podal.html"
}),angular.module("redbox.onboarding.admin").controller("redbox.onboarding.admin.OnboardingChecklistPasteCtrl",["$language","$timeout","redbox.onboarding.admin.ChecklistPasteService",function($language,$timeout,ChecklistPasteService){function initializeController(){vm.loading=!1,ChecklistPasteService.setPastedChecklistTasks([]),initializeLanguageKeys()}function placeholderClick(){angular.element("#checklist-paste-textarea").focus()}function parseText(){vm.showPlaceholder=_.isEmpty(vm.text),cancelParsingThrottleTimeout(),parsingThrottleTimeout=$timeout(function(){vm.text?(vm.tasks=ChecklistPasteService.copyPastaToChecklist(vm.text),vm.disableAddToChecklist=!1):(vm.tasks=getTasksPlaceholder(),vm.disableAddToChecklist=!0)},300)}function addToChecklist(){ChecklistPasteService.setPastedChecklistTasks(vm.tasks),vm.addChecklistFromPaste()}function cancelPasteToChecklist(){vm.cancelChecklistFromPaste()}function getPlaceholder(){return[createSampleTask(1),createSampleTask(2)].map(function(task){return task.name}).join("\n")}function getTasksPlaceholder(){return[createSampleTask(1),createSampleTask(2),createSampleTask(),createSampleTask()]}function createSampleTask(id){return{name:id?$language.get("onboarding.CHECKLIST_PREVIEW_PLACEHOLDER",{previewNumber:id}):""}}function destroyController(){cancelParsingThrottleTimeout()}function cancelParsingThrottleTimeout(){parsingThrottleTimeout&&$timeout.cancel(parsingThrottleTimeout)}function initializeLanguageKeys(){vm.lang={OOPS_SOMETHING:$language.get("shared.OOPS_SOMETHING"),CHECKLIST_PASTE_INSTRUCTIONS:$language.get("onboarding.CHECKLIST_PASTE_INSTRUCTIONS"),CHECKLIST_PASTE_DETAILS:$language.get("onboarding.CHECKLIST_PASTE_DETAILS"),CHECKLIST_ADD:$language.get("onboarding.CHECKLIST_ADD"),CANCEL:$language.get("shared.CANCEL"),PREVIEW:$language.get("shared.PREVIEW")}}var parsingThrottleTimeout,vm=this;angular.extend(vm,{text:"",loading:!0,error:!1,placeholder:getPlaceholder(),showPlaceholder:!0,tasks:getTasksPlaceholder(),disableAddToChecklist:!0,placeholderClick:placeholderClick,parseText:parseText,addToChecklist:addToChecklist,cancelPasteToChecklist:cancelPasteToChecklist,$onInit:initializeController,$onDestroy:destroyController})}]).component("obChecklistPaste",{bindings:{addChecklistFromPaste:"&",cancelChecklistFromPaste:"&"},controller:"redbox.onboarding.admin.OnboardingChecklistPasteCtrl",controllerAs:"onboardingChecklistPasteCtrl",templateUrl:"app/onboarding/modules/admin/components/onboarding-checklist-paste/onboarding-checklist-paste-component.html"}),angular.module("redbox.onboarding.admin").factory("redbox.onboarding.admin.ChecklistPasteService",[function(){function copyPastaToChecklist(pasta){var checklist=[],lines=pasta.split("\n");return lines.forEach(function(line){line=removeMSFormatting(line),line=_.trim(line,"_- ").replace(/^(\w|\d)\./,"").replace(/[^\x00-\x7F]/g,""),line=_.trim(line),""!==line&&checklist.push({name:_.capitalize(line),dueDateOffset:void 0})}),checklist}function setPastedChecklistTasks(list){this.pastedChecklistTasks=list}function getPastedChecklistTasks(){return this.pastedChecklistTasks||[]}function removeMSFormatting(input){var stringStripper=/(\n|\r| class=(")?Mso[a-zA-Z]+(")?)/g,output=input.replace(stringStripper," "),commentSripper=new RegExp("<!--(.*?)-->","g");output=output.replace(commentSripper,"");var tagStripper=new RegExp("<(/)*(div|p|meta|link|span|\\?xml:|st1:|o:|font)(.*?)>","gi");output=output.replace(tagStripper,"");for(var badTags=["style","script","applet","embed","noframes","noscript"],i=0;i<badTags.length;i++)tagStripper=new RegExp("<"+badTags[i]+".*?"+badTags[i]+"(.*?)>","gi"),output=output.replace(tagStripper,"");for(var badAttributes=["style","start"],i=0;i<badAttributes.length;i++){var attributeStripper=new RegExp(" "+badAttributes[i]+'="(.*?)"',"gi");output=output.replace(attributeStripper,"")}return output}var ChecklistPasteService={copyPastaToChecklist:copyPastaToChecklist,setPastedChecklistTasks:setPastedChecklistTasks,getPastedChecklistTasks:getPastedChecklistTasks};return ChecklistPasteService}]),angular.module("redbox.onboarding.admin").component("obIndividualChecklist",{bindings:{employee:"<"},controller:"redbox.onboarding.admin.OnboardingChecklistIndividualViewCtrl",controllerAs:"obIndividualChecklistCtrl",templateUrl:"app/onboarding/modules/admin/components/onboarding-individual-checklist/onboarding-individual-checklist-component.html"}).controller("redbox.onboarding.admin.OnboardingChecklistIndividualViewCtrl",["$q","$scope","$language","redbox.framework.checklists.ChecklistConstant","redbox.framework.checklists.ChecklistService","redbox.onboarding.team.EmployeeService",function($q,$scope,$language,ChecklistConstant,ChecklistService,EmployeeService){function getWorkersDataForEmployee(checklist){vm.employee.checklist=checklist;var employee=new EmployeeService({aoid:vm.employee.aoid});return $q.all({workerName:employee.getName(),workerProfile:employee.getWorkerProfile(),managerName:employee.getManager().then(function(manager){return manager.getName()}),jobTitle:employee.getJobTitle(),startDate:employee.getStartDate().catch(function(){})})}function consolidateDataForEmployee(data){var managerName=data.managerName.formattedName.split(","),workerCity=_.get(data,"workerProfile.workAssignments[0].assignedWorkLocations[0].address.cityName"),workerState=_.get(data,"workerProfile.workAssignments[0].assignedWorkLocations[0].address.countrySubdivisionLevel1.codeValue");workerCity&&workerState&&(vm.employee.workerLocation=!0);var startDate,startDateLabel,startDateString,today=moment().startOf("day");data.startDate&&(startDate=moment(data.startDate).startOf("day"),startDateLabel=$language.get(startDate.isBefore(today)?"shared.STARTED":"shared.STARTING"),startDateString=startDate.format("MMM D, YYYY")),vm.employee.details={fullName:data.workerName.givenName+" "+data.workerName.familyName1,workerProfile:data.workerProfile,manager:managerName[1]+" "+managerName[0],jobTitle:data.jobTitle,location:{city:vm.employee.workerLocation?workerCity:"",state:vm.employee.workerLocation?workerState:""},startDate:{label:startDateLabel,value:startDateString}}}function getEmployeeChecklistSummary(){ChecklistService.getChecklistSummariesForAoids([vm.employee.aoid],vm.employee.groupId).then(function(summary){vm.employee.summary=summary.results[0]})}var vm=this;angular.extend(vm,{loading:!0,employee:{aoid:$scope.aoid,groupId:$scope.groupId,workerLocation:!1}}),ChecklistService.getChecklist(vm.employee.aoid,vm.employee.groupId).then(getWorkersDataForEmployee).then(consolidateDataForEmployee).then(getEmployeeChecklistSummary).catch(function(e){vm.error=e||!0}).finally(function(){vm.loading=!1}),$scope.$on(ChecklistConstant.CHECKLIST_UPDATE_OVERDUE_TASK_EVENT,getEmployeeChecklistSummary)}]),angular.module("redbox.onboarding.admin").controller("redbox.onboarding.admin.OnboardingChecklistSummaryTileCtrl",["$scope","$language","redbox.onboarding.display.DisplayService","redbox.framework.checklists.ChecklistService",function($scope,$language,displayService,checklistService){function getInProgressChecklistsChipData(){var chipData={id:"inProgressChecklists",value:vm.checklistsInProgressCount.toString(),description:$language.get("shared.IN_PROGRESS"),size:"lg",color:"neutral-dark"};return chipData}function getOverdueChecklistsChipData(){var chipData={id:"overdueChecklists",value:vm.checklistsOverdueCount.toString(),description:$language.get("shared.OVERDUE"),size:"lg",color:"accent-5-dark",textColor:"neutral-dark"};return chipData}function openViewChecklistSlide(filter){vm.contentTemplate="complete"===filter?"app/onboarding/modules/admin/views/onboarding-checklist-completed-list.html":"app/onboarding/modules/admin/views/onboarding-checklist-incomplete-list.html",displayService.open({type:"slidein",parameters:{contentTemplate:vm.contentTemplate}},fetchChecklistsAndUpdateView)}function fetchChecklistsAndUpdateView(){return vm.loading=!0,vm.hasCompleteChecklists=!1,checklistService.getChecklistSummaries(void 0,"onboarding",[]).then(getChecklistsSummariesSucceeded).catch(function(){vm.instructions=$language.get("shared.OOPS_SOMETHING")}).finally(function(){initializePokerChip([getInProgressChecklistsChipData(),getOverdueChecklistsChipData()]),vm.loading=!1})}function getChecklistsSummariesSucceeded(response){var length,inProgress=0,overdue=0;response&&response.results?(length=response.results.length,length>0?(vm.hasSummaries=!0,_.forEach(response.results,function(checklist){checklist.totalTaskCount>checklist.completedTaskCount&&(inProgress++,vm.hasIncoompleteChecklists=!0),checklist.overdueTaskCount&&checklist.overdueTaskCount>0&&(overdue++,vm.hasIncoompleteChecklists=!0),checklist.totalTaskCount===checklist.completedTaskCount&&(vm.hasCompleteChecklists=!0)}),vm.hasIncompleteChecklists=inProgress>0||overdue>0,vm.checklistsInProgressCount=inProgress,vm.checklistsOverdueCount=overdue):(vm.hasSummaries=!1,vm.instructions=$language.get("onboarding.ADMIN_CHECKLIST_VIEW_TILE_NONE"))):vm.instructions=$language.get("shared.OOPS_SOMETHING")}var vm=this;vm.checklistsInProgressCount=0,vm.checklistsOverdueCount=0,vm.completedChecklistsText=$language.get("onboarding.VIEW_COMPLETED_CHECKLISTS"),angular.extend(vm,{openViewChecklistSlide:openViewChecklistSlide,instructions:"",hasSummaries:!1});var initializePokerChip=function(chipData){angular.forEach(chipData,function(chip){$scope.$broadcast("poker-chip-initialize-"+chip.id,[chip])})};fetchChecklistsAndUpdateView()}]),angular.module("redbox.onboarding.admin").controller("redbox.onboarding.admin.OnboardingChecklistTemplateCtrl",["adp.ng.ui.modal.adpModalService","$language","$scope","adp.ng.ui.slidein.FocusSlideIn","redbox.framework.checklists.ChecklistTemplateService","redbox.onboarding.admin.ChecklistPasteService","redbox.onboarding.admin.OnboardingChecklistTemplateConstants",function(adpModal,$language,$scope,slideIn,ChecklistTemplateService,ChecklistPasteService,constants){function init(){fetchTemplate(),vm.clearPastedTasks()}function openSlideIn(config){var slideInConfig=angular.extend({},config,{scope:$scope,contentTemplate:"app/onboarding/modules/admin/views/onboarding-checklist-template.html",modalCloseLabel:$language.get("shared.CLOSE"),modalContent:$language.get("onboarding.ADMIN_CHECKLIST_UNSAVED_CHANGES_CONTENT"),modalDismissLabel:$language.get("shared.CANCEL"),modalTitle:$language.get("shared.UNSAVED_CHANGES")});slideIn(slideInConfig),slideIn.registerValidationFn(hasNoChangesToSave)}function hasNoChangesToSave(){return!vm.template||!templateOriginal||_.isEqual(angular.toJson(vm.template.attrs),angular.toJson(templateOriginal.attrs))}function fetchTemplate(){vm.templateLoading=!0,ChecklistTemplateService.getChecklistTemplate({bustCache:!0}).then(function(result){vm.templateLoading=!1,vm.template=prepopulateTemplate(result),templateOriginal=angular.copy(vm.template)}).catch(function(){vm.templateLoading=!1,vm.getTemplateError=!0})}function prepopulateTemplate(template){return template&&_.get(template,"attrs.tasks")?template:new ChecklistTemplateService.ChecklistTemplate(angular.copy(constants.DEFAULT_TEMPLATE))}function saveTemplate(){ChecklistTemplateService.saveChecklistTemplate(vm.template).then(function(){vm.saveTemplateSuccess=!0,fetchTemplate()}).catch(function(){vm.saveTemplateError=!0})}function clearPastedTasks(){vm.pastedTasks={hasPastedTasks:!1,addedTasksMessage:$language.get("onboarding.ADMIN_CHECKLIST_NUMBER_TASKS_ADDED",{addedTaskCount:0})}}function openCopyPastaPodal(){vm.clearPastedTasks(),vm.showCopyPastaPodal=!0}function closeCopyPastaPodal(){vm.showCopyPastaPodal=!1,angular.element(".slidein").last().get(0).scrollTop=0}function addChecklistFromPaste(){var pastedTasks=ChecklistPasteService.getPastedChecklistTasks(),pastedTaskLength=_.size(pastedTasks);pastedTaskLength&&(vm.pastedTasks.hasPastedTasks=!0,vm.template.attrs.tasks=vm.template.attrs.tasks.filter(function(task){return task.name||task.dueDateOffset}).concat(pastedTasks),vm.pastedTasks.addedTasksMessage=$language.get("onboarding.ADMIN_CHECKLIST_NUMBER_TASKS_ADDED",{addedTaskCount:pastedTaskLength})),vm.closeCopyPastaPodal()}function openDeleteConfirmationModal(){modalObj=adpModal.open({content:$language.get("onboarding.ADMIN_CHECKLIST_DELETE_WARNING"),title:$language.get("onboarding.ADMIN_CHECKLIST_DELETE_WARNING_TITLE"),closeLabel:$language.get("shared.DELETE")}),modalObj.result.then(function(){deleteTemplate(vm.template.attrs._id)})}function deleteTemplate(id){ChecklistTemplateService.deleteChecklistTemplate(id).then(function(){vm.deleteTemplateSuccess=!0,vm.template=prepopulateTemplate(),templateOriginal=angular.copy(vm.template)}).catch(function(){vm.deleteTemplateError=!0})}function resetMessages(){vm.getTemplateError=!1,vm.saveTemplateError=!1,vm.deleteTemplateError=!1,vm.saveTemplateSuccess=!1,vm.deleteTemplateSuccess=!1}var modalObj,templateOriginal,vm=this;angular.extend(vm,{template:prepopulateTemplate(),getTemplateError:!1,saveTemplateError:!1,deleteTemplateError:!1,saveTemplateSuccess:!1,deleteTemplateSuccess:!1,templateLoading:!0,showCopyPastaPodal:!1,openCopyPastaPodal:openCopyPastaPodal,closeCopyPastaPodal:closeCopyPastaPodal,addChecklistFromPaste:addChecklistFromPaste,openDeleteConfirmationModal:openDeleteConfirmationModal,saveTemplate:saveTemplate,resetMessages:resetMessages,openSlideIn:openSlideIn,hasNoChangesToSave:hasNoChangesToSave,clearPastedTasks:clearPastedTasks}),init()}]).constant("redbox.onboarding.admin.OnboardingChecklistTemplateConstants",{DEFAULT_TEMPLATE:{groupId:"onboarding",tasks:[{}]}}),angular.module("redbox.onboarding.admin").controller("redbox.onboarding.admin.OnboardingChecklistTemplateTileCtrl",["$q","redbox.onboarding.display.DisplayService","redbox.framework.checklists.ChecklistTemplateService","redbox.onboarding.common.WorkerInstanceService",function($q,displayService,checklistTemplateService,WorkerInstanceService){function fetchChecklistTemplateTileData(){return vm.templateLoading=!0,isChecklistTemplateDefined().then(getEmployeeName).catch(function(){vm.hasTemplate=!1}).finally(function(){vm.templateLoading=!1})}function isChecklistTemplateDefined(){return checklistTemplateService.getChecklistTemplate({bustCache:!0}).then(function(template){if(_.isEmpty(template))return $q.reject("Empty template");var updatedDateTime=moment(_.get(template,"attrs.updatedDateTime"));vm.hasTemplate=!0,vm.taskCount=_.get(template,"attrs.tasks").length,vm.dateModifiedAt=updatedDateTime.format("MMM D, YYYY"),vm.timeModifiedAt=updatedDateTime.format("h:mm a")})}function getEmployeeName(){return WorkerInstanceService.getWorkerProfile().then(function(profile){var legalName=_.get(profile,"person.legalName");vm.employeeName=_.get(legalName,"givenName")+" "+_.get(legalName,"familyName1")})}function openSlide(){var deferred=$q.defer();return displayService.open(displayConfig,deferred.resolve),deferred.promise}var vm=this,displayConfig={type:"controller",controller:"redbox.onboarding.admin.OnboardingChecklistTemplateCtrl as OnboardingChecklistTemplateCtrl",methods:["OnboardingChecklistTemplateCtrl","openSlideIn"]};vm.hasTemplate=!1,vm.openChecklistTemplate=function(){return openSlide().then(fetchChecklistTemplateTileData)},fetchChecklistTemplateTileData()}]),angular.module("redbox.onboarding.checklists").service("redbox.onboarding.checklists.ManagerNewHiresService",["$http","$q","adp.ng.logging.LoggerFactory",function($http,$q,loggerFactory){function getNewHiresAoids(aoid,startDateRange,endDateRange){var endRangeParam=endDateRange?"&endDate="+endDateRange:"";return $http({method:"GET",url:"/redboxapi/flexgraph/v1/associates/"+aoid+"/new-hires?startDate="+startDateRange+endRangeParam}).then(function(response){return response.data}).catch(function(error){return logger.error("Could not fetch the new hire aoids: ",JSON.stringify(error)),$q.reject(error)})}var logger=loggerFactory.getLogger("redbox.onboarding.checklists.ManagerNewHiresService");return{getNewHiresAoids:getNewHiresAoids}}]),angular.module("redbox.onboarding.checklists").factory("redbox.onboarding.checklists.ManagerTaskService",["$rootScope","$q","adp.ng.logging.LoggerFactory","$language","redbox.framework.tasks.TasksService","redbox.ext.shared.services.UserIdentityService","redbox.connections.search.EmployeeSearchService","redbox.framework.checklists.ChecklistService",function($rootScope,$q,loggerFactory,$language,TasksService,UserIdentityService,EmployeeSearchService,ChecklistService){function init(bypassCache){return setWatcherOnLanguageChange(),bypassCache&&(cachedPromise=void 0),cachedPromise?(logger.debug("using cached promise"),cachedPromise):cachedPromise=getMyEmployeeAoids().then(getChecklistCounts).then(function(counts){checklistCount=counts.totalChecklistCount,response.title=getTitle(),response.count=counts.notStartedChecklistCount,response.overDueCount=counts.overDueTaskCount,response.totalTaskCount=counts.totalTaskCount,TasksService.updateTaskData(response)}).catch(function(err){var msg="Problem with determining checklist counts";return logger.error(msg,err),cachedPromise=void 0,$q.reject(msg)})}function getChecklistCounts(aoids){return ChecklistService.getChecklistSummariesForAoids(aoids,CHECKLIST_GROUP_ID).then(function(summaries){var notStartedChecklistCount=0,totalTaskCount=0,totalChecklistCount=0,overDueTaskCount=0;return _.forEach(summaries.results,function(checklist){checklist.found&&checklist.completedTaskCount!==checklist.totalTaskCount&&(totalChecklistCount++,totalTaskCount+=checklist.totalTaskCount-checklist.completedTaskCount,0===checklist.completedTaskCount&&notStartedChecklistCount++,checklist.overdueTaskCount>0&&(overDueTaskCount+=checklist.overdueTaskCount))}),{totalChecklistCount:totalChecklistCount,totalTaskCount:totalTaskCount,notStartedChecklistCount:notStartedChecklistCount,overDueTaskCount:overDueTaskCount}})}function getMyEmployeeAoids(){return UserIdentityService.getAoid().then(EmployeeSearchService.getTeamForManager).then(function(results){return _.map(results.employees,"aoid")})}function setWatcherOnLanguageChange(){isLangWatcherOn||($rootScope.$on("$languageChangeSuccess",function(){response.title=getTitle(),response.countDescription=$language.get("shared.NOT_STARTED")}),isLangWatcherOn=!0)}function getTitle(){return checklistCount+" "+$language.get("onboarding.THINGS_TO_DO_TITLE_CHECKLISTS")}var cachedPromise,logger=loggerFactory.getLogger("redbox.onboarding.checklists.ManagerTaskService"),isLangWatcherOn=!1,CHECKLIST_GROUP_ID="onboarding",checklistCount=0,response={id:"onboardingChecklists",state:"connections.newhires",title:$language.get("onboarding.THINGS_TO_DO_TITLE_CHECKLISTS"),count:0,countDescription:$language.get("shared.NOT_STARTED"),overDueDescriptionSingular:$language.get("shared.OVERDUE_TASK"),overDueDescriptionPlural:$language.get("shared.OVERDUE_TASKS"),icon:"fa fa-list-alt",message:"MESSAGE not needed"};return{init:init}}]),angular.module("redbox.onboarding.common").factory("redbox.onboarding.common.AddressParserService",[function(){function parseEmployerAddress(profile){function getWorkAssignments(){return profile&&profile.workAssignments&&profile.workAssignments[0]}function getWorkLocations(){return workAssignments&&workAssignments.assignedWorkLocations&&workAssignments.assignedWorkLocations[0]}function getLocation(){return workLocations&&workLocations.address}function address(){var parts={lineOne:location.lineOne||"",lineTwo:location.lineTwo||"",city:location.cityName||"",state:location.countrySubdivisionLevel1&&location.countrySubdivisionLevel1.codeValue||"",zip:location.postalCode||"",country:location.countryCode||""};return parts.mailing=(parts.lineOne+" "+parts.lineTwo+" "+parts.city+" "+parts.state+" "+parts.zip).replace(/(\s)+/g," ").trim(),parts.search=parts.mailing.replace(/\s/g,"+"),parts}var workAssignments=getWorkAssignments(),workLocations=getWorkLocations(),location=getLocation();return address(location)}function parseEmployeeAddress(profile){function getPerson(){return profile&&profile.person}function getLocation(){return person&&person.legalAddress}function address(){var parts={lineOne:location.lineOne||"",lineTwo:location.lineTwo||"",city:location.cityName||"",state:location.countrySubdivisionLevel1&&location.countrySubdivisionLevel1.codeValue||"",zip:location.postalCode||"",country:location.countryCode||""};return parts.mailing=(parts.lineOne+" "+parts.lineTwo+" "+parts.city+" "+parts.state+" "+parts.zip).replace(/(\s)+/g," ").trim(),parts.search=parts.mailing.replace(/\s/g,"+"),parts}var person=getPerson(),location=getLocation();return address(location)}return{parseEmployerAddress:parseEmployerAddress,parseEmployeeAddress:parseEmployeeAddress}}]),angular.module("redbox.onboarding.common.imagePreload").service("redbox.onboarding.common.imagePreload.ImagePreloadService",["$q","$rootScope",function($q,$rootScope){function preloadImage(config){function resolveOrReject(e,rejectOnError){"error"===e.type&&rejectOnError?deferred.reject(preloadedImage):deferred.resolve(preloadedImage)}var preloadedImage,deferred=$q.defer(),savedConfig=angular.extend({},config);return preloadedImage=$('<img class="'+responsiveClass+" "+hideClass+'">').appendTo("body").on("load error",function(e){$(e.currentTarget).off(),resolveOrReject(e,savedConfig.rejectOnError),$rootScope.$digest()}).attr("src",savedConfig.imageUrl),deferred.promise}function appendTo(img,target){return $(img).appendTo(target).removeClass(hideClass)}var hideClass="img-preloader-hide",responsiveClass="img-responsive";return{preloadImage:preloadImage,appendTo:appendTo}}]),function(){var DAYS_PAST_START_DATE_TO_SHOW_ONBOARDING_TILE=7;angular.module("redbox.onboarding.common").factory("redbox.onboarding.common.OnboardingService",["$q","$state","adp.ng.logging.LoggerFactory","redbox.onboarding.common.StartDateService","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.services.ProfileService",function($q,$state,loggerFactory,StartDateService,UserPermissionService,profileService){function hasOnboarding(){return UserPermissionService.init().then(function(){return logger.debug("User hasOnboarding: ",UserPermissionService.hasOnboarding()),UserPermissionService.hasOnboarding()})}function hasOnboardingPremium(){return UserPermissionService.init().then(function(){return logger.debug("User hasOnboarding: ",UserPermissionService.hasOnboardingPremium()),UserPermissionService.hasOnboardingPremium()})}function isPreboarding(){return OnboardingService.hasOnboarding().then(function(hasPermission){return!!hasPermission&&getAoidOfNonADPPractitioner().then(StartDateService.isBeforeStartDate)}).catch(function(error){return logger.info("User is not preboarding: ",JSON.stringify(error)),$q.reject(error)})}function isOnboarding(){return OnboardingService.hasOnboarding().then(function(hasPermission){return!!hasPermission&&getAoidOfNonADPPractitioner().then(isUserDoneOnboarding)}).catch(function(error){return logger.info("User is not onboarding: ",JSON.stringify(error)),$q.reject(error)})}function inOnboarding(){return $state.includes("onboarding")}function getOnboardingStatus(){var onboardingStatus={preboarding:!1,onboarding:!1,rehire:!1};return logger.info("Verifying preboarding status"),setPreboardingStatus(onboardingStatus).then(setOnboardingStatus).then(setRehireStatus).catch(function(){return onboardingStatus})}function setPreboardingStatus(onboardingStatus){return OnboardingService.isPreboarding().then(function(preboarding){return logger.debug("Preboarding status verified. Preboarding?",preboarding),onboardingStatus.preboarding=preboarding,onboardingStatus})}function setOnboardingStatus(onboardingStatus){return onboardingStatus.preboarding?onboardingStatus:OnboardingService.isOnboarding().then(function(onboarding){return logger.debug("Onboarding status verified. Onboarding?",onboarding),onboardingStatus.onboarding=onboarding,onboardingStatus})}function setRehireStatus(onboardingStatus){return StartDateService.isRehire().then(function(isRehire){return logger.debug("Rehire status is verified. Rehire?",isRehire),onboardingStatus.rehire=isRehire,onboardingStatus})}function getAoidOfNonADPPractitioner(){var deferred=$q.defer();return profileService.get().then(function(profile){profile.isADPPractitioner?deferred.reject("User is an ADPPractitioner"):deferred.resolve(profile.associateoid)}).catch(function(error){logger.error("Error occurred retrieving profile",JSON.stringify(error)),deferred.reject(error)}),deferred.promise}function isUserDoneOnboarding(){return StartDateService.getStartDate().then(function(startDate){return startDate.add(DAYS_PAST_START_DATE_TO_SHOW_ONBOARDING_TILE,"days").isAfter(moment(),"day")})}var logger=loggerFactory.getLogger("redbox.onboarding.common.OnboardingService"),OnboardingService={hasOnboarding:hasOnboarding,hasOnboardingPremium:hasOnboardingPremium,isPreboarding:isPreboarding,isOnboarding:isOnboarding,inOnboarding:inOnboarding,getOnboardingStatus:getOnboardingStatus};return OnboardingService}])}(),angular.module("redbox.onboarding.common").factory("redbox.onboarding.common.StartDateService",["$q","$http","$filter","$language","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserIdentityService",function($q,$http,$filter,$language,LoggerFactory,UserIdentityService){function getStartDate(aoid,config){return getWorkerProfileLite(aoid,handleConfig(config)).then(function(workerDates){var startDateString=workerDates.rehireDate?workerDates.rehireDate:workerDates.originalHireDate;return moment(startDateString)})}function isRehire(aoid){return getWorkerProfileLite(aoid).then(function(workerDates){return!!workerDates.rehireDate})}function getFormattedStartDate(aoid,config){return getStartDate(aoid,config).then(function(startDate){return moment($filter("amDateFormat")(startDate)).locale($language.getLocale().getLanguage()).format("LL")})}function getDaysUntilStart(aoid,config){return getStartDate(aoid,config).then(function(startDate){var days=startDate&&Math.ceil(startDate.diff(moment(),"days",!0));return days})}function getStartDateDetails(aoid,config){return $q.all({startDate:getFormattedStartDate(aoid,config),daysUntilStart:getDaysUntilStart(aoid,config)}).then(function(results){return{startDate:results.startDate,daysUntilStart:results.daysUntilStart}})}function isBeforeStartDate(aoid,config){return getDaysUntilStart(aoid,config).then(function(daysUntilStart){return daysUntilStart>0})}function getWorkerProfileLite(aoid,config){var httpConfig=config&&config.isManager&&{headers:{roleCode:"manager"}}||{};return aoid?(deferredWorkerLiteProfiles[aoid]||(deferredWorkerLiteProfiles[aoid]=$q.defer(),$http.get(workerLiteURL.replace(":A",aoid),httpConfig).then(function(workerLiteResults){_.has(workerLiteResults,"data.workers[0].workerDates")?deferredWorkerLiteProfiles[aoid].resolve(workerLiteResults.data.workers[0].workerDates):(logger.error("User doesn't have workerDates from Lite Worker"),deferredWorkerLiteProfiles[aoid].reject("User doesn't have workerDates from Lite Worker"))}).catch(function(error){logger.error("Error occurred retrieving workerDates from Lite Worker",JSON.stringify(error)),deferredWorkerLiteProfiles[aoid].reject(error.data)})),deferredWorkerLiteProfiles[aoid].promise):UserIdentityService.getAoid().then(getWorkerProfileLite)}function handleConfig(config){return config||{}}var deferredWorkerLiteProfiles={},logger=LoggerFactory.getLogger("redbox.onboarding.common.StartDateService"),workerLiteURL="/hr/v2/workers?$select=workers/associateOID,workers/workerDates&$filter=aoid eq ':A'";return{getStartDate:getStartDate,getFormattedStartDate:getFormattedStartDate,getDaysUntilStart:getDaysUntilStart,getStartDateDetails:getStartDateDetails,isBeforeStartDate:isBeforeStartDate,isRehire:isRehire}}]),angular.module("redbox.onboarding.common").factory("redbox.onboarding.common.WorkerInstanceService",["redbox.connections.worker.WorkerService",function(WorkerService){function getWorkerServiceInstance(altConfig){return workerService?workerService:workerService=new WorkerService(_.assign({},config,altConfig))}function getWorkerProfile(altConfig){return getWorkerServiceInstance(altConfig).get()}function getWorkerManager(altConfig){return getWorkerProfile(altConfig).then(function(){return getWorkerServiceInstance(altConfig).getPrimaryManager()})}var workerService,config={workflowEnabled:!0,masked:!1};return{getWorkerServiceInstance:getWorkerServiceInstance,getWorkerProfile:getWorkerProfile,getWorkerManager:getWorkerManager}}]),angular.module("redbox.onboarding.dashboard").controller("redbox.onboarding.dashboard.DashboardTileCtrl",["$scope","$language","redbox.onboarding.common.OnboardingService",function($scope,$language,OnboardingService){function onInit(){translateLanguageKeys(),OnboardingService.isOnboarding().then(showDashboardTile)}function showDashboardTile(isOnboarding){return isOnboarding&&$scope.$emit("showMe")}function translateLanguageKeys(){vm.lang={WELCOME_HEADING_FALLBACK:$language.get("onboarding.WELCOME_HEADING_FALLBACK"),WELCOME_GREETING_FALLBACK:$language.get("onboarding.WELCOME_GREETING_FALLBACK"),DASHBOARD_BUTTON:$language.get("onboarding.DASHBOARD_BUTTON")}}var vm=this;angular.extend(vm,{$onInit:onInit})}]).component("obDashboardTile",{controller:"redbox.onboarding.dashboard.DashboardTileCtrl",controllerAs:"dashboardTileCtrl",templateUrl:"app/onboarding/modules/dashboard/ob-dashboard-tile-component.html"}),angular.module("redbox.onboarding.display").factory("redbox.onboarding.display.DisplayService",["adp.ng.ui.modal.adpModalService","$window","$rootScope","$language","$controller","adp.ng.ui.slidein.FocusSlideIn",function($adpModal,$window,$rootScope,$language,$controller,$slidein){function open(config,callback){var openByFn;if(config=config||{},callback=angular.isFunction(callback)?callback:angular.noop,openByFn=openBy[config.type],!openByFn)throw new Error("DisplayService: Invalid type passed to open");openByFn(config,callback)}function openByController(config,callback){var listener,params,$scope=$rootScope.$new(),method=$scope;$controller(config.controller,{$scope:$scope}),config.methods.forEach(function(methodName){method=method[methodName]}),params=angular.extend({},config.parameters,{prefixEvent:getUniqueId()}),method(params),listener=$rootScope.$on(params.prefixEvent+".hide",function(){callback(),listener()})}function openByModal(config,callback){var modal,params;params=angular.extend({},config.parameters,{title:$language.get(config.parameters.title)}),modal=$adpModal.open(params),modal.result.then(function(){callback()})}function openByNewWindow(config){$window.open(config.newWindowUrl)}function openBySlidein(config,callback){var slidein,slideinListener,params,eventPrefix=getUniqueId(),eventName=eventPrefix+".hide";params=angular.extend({},config.parameters,{prefixEvent:eventPrefix}),slidein=$slidein(params),slideinListener=$rootScope.$on(eventName,function(evt,iSlidein){iSlidein===slidein&&(callback(),slideinListener())})}function getUniqueId(){return _.uniqueId("config.")}var openBy={controller:openByController,modal:openByModal,newWindow:openByNewWindow,slidein:openBySlidein};return{open:open}}]),angular.module("redbox.onboarding.errorModal").controller("redbox.onboarding.errorModal.OnboardingErrorModalCtrl",["$state","$timeout","$modalInstance","redbox.ext.shared.services.SessionService","redbox.onboarding.common.StartDateService",function($state,$timeout,$modalInstance,SessionStoreService,StartDateService){function returnToDashboard(){$modalInstance.close(),$timeout(function(){$state.go("dashboard")},0)}var vm=this;angular.extend(vm,{logout:SessionStoreService.logout,showLogoutButton:!0,returnToDashboard:returnToDashboard}),StartDateService.isBeforeStartDate().then(function(isBeforeStartDate){vm.showLogoutButton=isBeforeStartDate})}]),angular.module("redbox.onboarding.errorModal").factory("redbox.onboarding.errorModal.ErrorModalService",["$timeout","adp.ng.ui.modal.adpModalService",function($timeout,$adpModal){function showErrorModal(){isModalVisible||(isModalVisible=!0,
$timeout(function(){var result=$adpModal.open({contentUrl:"app/onboarding/modules/error-modal/views/onboarding-error-modal.html",footer:!1,size:"full-screen",closeable:!1,keyboard:!1,fullscreenTheme:"dark",controller:"redbox.onboarding.errorModal.OnboardingErrorModalCtrl as OnboardingErrorModalCtrl"}).result;result.finally(function(){isModalVisible=!1})},500))}function isModalOpen(){return isModalVisible}var isModalVisible=!1;return{showErrorModal:showErrorModal,isModalOpen:isModalOpen}}]),angular.module("redbox.onboarding.i9").constant("redbox.onboarding.i9.I9MetaTransformConstant",[{metaKeyArray:["events","0","eventID"],wizardKeyArray:["data","events","eventID"],postKeyArray:["events","eventID"]},{metaKeyArray:["meta","/data/eventContext","/usI9Screening/associateOID","default"],wizardKeyArray:["data","aoid"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/identityDocumentationIndicator","helperMessage","links","0","href"],wizardKeyArray:["pages","provide-documentation","fields",{key:"documentation"},"fields",{type:"button-offsite"},"modal","url"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/identityDocumentationIndicator","helperMessage","links","0","href"],wizardKeyArray:["pages","review-and-sign","fields",{id:"success-alert"},"fields",{type:"button-offsite"},"modal","url"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/identityDocumentationIndicator","helperMessage","links","0","href"],wizardKeyArray:["pages","in-person","url"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/identityDocumentationIndicator","helperMessage","links","0","href"],wizardKeyArray:["pages","ssn","fields",{key:"ssn"},"fields",{key:"displayWillNotEnter"},"fields",{key:"will-not-enter-buttons"},"fields",{actionType:"external"},"url"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/specialConsiderationCode/codeValue","helperMessage","links"],wizardKeyArray:["pages","ssn","fields",{key:"ssn"},"fields",{key:"displayWillNotEnter"},"fields",{key:"will-not-enter-buttons"},"fields",{actionType:"download"},"links"],metaToWizardTransform:function(links){return _.reduce(links,function(result,n){return result[n.title]=n.href,result},{})}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/countrySubdivisionLevel1","codeList","listItems"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"state"},"select","items"],metaToWizardTransform:function(x){return _.map(x,function(i){return{label:i.codeValue,value:i.codeValue}})}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/lineOne","default"],wizardKeyArray:["data","address","street"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","address","lineOne"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/lineOne","optional"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"street"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/lineOne","maxLength"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"street"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/buildingNumber","default"],wizardKeyArray:["data","address","apartmentnumber"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","address","unit"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/buildingNumber","maxLength"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"apartmentnumber"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/cityName","default"],wizardKeyArray:["data","address","city"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","address","cityName"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/cityName","optional"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"city"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/cityName","maxLength"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"city"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/countrySubdivisionLevel1/codeValue","default"],wizardKeyArray:["data","address","state"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","address","countrySubdivisionLevel1","codeValue"],wizardToPostTransform:function(x){return x&&x.value||x}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/countrySubdivisionLevel1/codeValue","optional"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"state"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/postalCode","default"],wizardKeyArray:["data","address","zipcode"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","address","postalCode"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/postalCode","minLength"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"zipcode"},"validate",{type:"minLength"},"minLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/postalCode","maxLength"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"zipcode"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/address/postalCode","optional"],wizardKeyArray:["pages","address","fields",{key:"address"},"fields",{key:"zipcode"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/expirationDate","default"],wizardKeyArray:["data","alienDocsExpire","value","year"],metaToWizardTransform:function(x){return angular.isDefined(x)?(x+"").substring(0,4):void 0}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/expirationDate","default"],wizardKeyArray:["data","alienDocsExpire","value","month"],metaToWizardTransform:function(x){return angular.isDefined(x)?(x+"").substring(5,7):void 0}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/expirationDate","default"],wizardKeyArray:["data","alienDocsExpire","value","day"],metaToWizardTransform:function(x){return angular.isDefined(x)?(x+"").substring(8,10):void 0}},{wizardKeyArray:["data","alienDocsExpire"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","alienEligibility","expirationDate"],wizardToPostTransform:function(x){return x.present?x.value.year+"-"+x.value.month+"-"+x.value.day:void 0}},{wizardKeyArray:["data","documentation"],postKeyArray:["events","data","transform","usI9Screening","specialConsiderationCode"],wizardToPostTransform:function(x){var codeValue;switch(x.case){case"under18":codeValue="03";break;case"disabilities":codeValue="04";break;default:codeValue="06"}return{codeValue:codeValue}}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/alienRegistrationNumber","default"],wizardKeyArray:["data","alienRegistrationNumber"]},{wizardKeyArray:["data","alienRegistrationNumber"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","alienEligibility","alienRegistrationNumber"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/alienRegistrationNumber","optional"],wizardKeyArray:["pages","alien-registration-number-enter","fields",{key:"alienRegistrationNumber"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/alienRegistrationNumber","minLength"],wizardKeyArray:["pages","alien-registration-number-enter","fields",{key:"alienRegistrationNumber"},"validate",{type:"minLength"},"minLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/alienRegistrationNumber","maxLength"],wizardKeyArray:["pages","alien-registration-number-enter","fields",{key:"alienRegistrationNumber"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/alienRegistrationNumber","pattern"],wizardKeyArray:["pages","alien-registration-number-enter","fields",{key:"alienRegistrationNumber"},"validate",{type:"pattern"},"pattern"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/admissionNumber","default"],wizardKeyArray:["data","arrivalRecord","admissionNumber"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/admissionNumber","optional"],wizardKeyArray:["pages","alien-admission-number","fields",{key:"arrivalRecord"},"fields",{key:"admissionNumber"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/admissionNumber","minLength"],wizardKeyArray:["pages","alien-admission-number","fields",{key:"arrivalRecord"},"fields",{key:"admissionNumber"},"validate",{type:"minLength"},"minLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/admissionNumber","maxLength"],wizardKeyArray:["pages","alien-admission-number","fields",{key:"arrivalRecord"},"fields",{key:"admissionNumber"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/admissionNumber","pattern"],wizardKeyArray:["pages","alien-admission-number","fields",{key:"arrivalRecord"},"fields",{key:"admissionNumber"},"validate",{type:"pattern"},"pattern"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/passport/documentID","default"],wizardKeyArray:["data","arrivalRecord","passport","documentID"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/passport/documentID","optional"],wizardKeyArray:["pages","alien-passport-number-and-country","fields",{key:"arrivalRecord"},"fields",{key:"passport"},"fields",{key:"documentID"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/passport/documentID","minLength"],wizardKeyArray:["pages","alien-passport-number-and-country","fields",{key:"arrivalRecord"},"fields",{key:"passport"},"fields",{key:"documentID"},"validate",{type:"minLength"},"minLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/passport/documentID","maxLength"],wizardKeyArray:["pages","alien-passport-number-and-country","fields",{key:"arrivalRecord"},"fields",{key:"passport"},"fields",{key:"documentID"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/passport/documentID","pattern"],wizardKeyArray:["pages","alien-passport-number-and-country","fields",{key:"arrivalRecord"},"fields",{key:"passport"},"fields",{key:"documentID"},"validate",{type:"pattern"},"pattern"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/alienEligibility/arrivalRecord/passport/countryCode","codeList","listItems"],wizardKeyArray:["pages","alien-passport-number-and-country","fields",{key:"arrivalRecord"},"fields",{key:"passport"},"fields",{key:"countryCode"},"select","items"],metaToWizardTransform:function(x){return _.map(x,function(i){return{label:i.shortName||i.longName,value:i.codeValue}})}},{wizardKeyArray:["data","arrivalRecord"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","alienEligibility","arrivalRecord"],wizardToPostTransform:function(data){if(data&&data.passport&&data.passport.countryCode){var dataCopy=angular.copy(data);return dataCopy.passport.countryCode=data.passport.countryCode.value,dataCopy}return data&&data.admissionNumber?data:void 0}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/birthDate","default"],wizardKeyArray:["data","dateOfBirth","year"],metaToWizardTransform:function(x){return angular.isDefined(x)?(x+"").substring(0,4):void 0}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/birthDate","default"],wizardKeyArray:["data","dateOfBirth","month"],metaToWizardTransform:function(x){return angular.isDefined(x)?(x+"").substring(5,7):void 0}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/birthDate","default"],wizardKeyArray:["data","dateOfBirth","day"],metaToWizardTransform:function(x){return angular.isDefined(x)?(x+"").substring(8,10):void 0}},{wizardKeyArray:["data","dateOfBirth"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","birthDate"],wizardToPostTransform:function(x){return x.year+"-"+x.month+"-"+x.day}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/governmentID/idValue","default"],wizardKeyArray:["data","ssn","value"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","governmentID","idValue"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/governmentID/idValue","optional"],wizardKeyArray:["pages","ssn","fields",{key:"ssn"},"fields",{key:"value"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/governmentID/idValue","pattern"],wizardKeyArray:["pages","ssn","fields",{key:"ssn"},"fields",{key:"value"},"validate",{type:"pattern"},"pattern"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/governmentID/idValue","optional"],wizardKeyArray:["pages","ssn","fields",{key:"ssn"},"fields",{key:"present"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0"],wizardKeyArray:["data","name","isPrepopulated"],metaToWizardTransform:function(x){var isPrepopulated=x["/usI9Screening/sectionOne/personName/givenName"]&&x["/usI9Screening/sectionOne/personName/givenName"].default||x["/usI9Screening/sectionOne/personName/familyName1"]&&x["/usI9Screening/sectionOne/personName/familyName1"].default||x["/usI9Screening/sectionOne/personName/middleName"]&&x["/usI9Screening/sectionOne/personName/middleName"].default;return!!isPrepopulated}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/personName/givenName","default"],wizardKeyArray:["data","name","first"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","personName","givenName"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/personName/givenName","optional"],wizardKeyArray:["pages","name","fields",{key:"name"},"fields",{key:"first"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/personName/givenName","maxLength"],wizardKeyArray:["pages","name","fields",{key:"name"},"fields",{key:"first"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/personName/middleName","default"],wizardKeyArray:["data","name","middle"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","personName","middleName"],metaToWizardTransform:function(x){return x&&x.substring(0,1)||""}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/personName/middleName","maxLength"],wizardKeyArray:["pages","name","fields",{key:"name"},"fields",{key:"middle"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/personName/familyName1","default"],wizardKeyArray:["data","name","last"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","personName","familyName1"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/personName/familyName1","optional"],wizardKeyArray:["pages","name","fields",{key:"name"},"fields",{key:"last"},"validate",{type:"optional"},"optional"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/personName/familyName1","maxLength"],wizardKeyArray:["pages","name","fields",{key:"name"},"fields",{key:"last"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/otherNames","default"],wizardKeyArray:["data","otherNames","value"]},{wizardKeyArray:["data","otherNames"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","otherNames"],wizardToPostTransform:function(x){return x.present?x.value:void 0}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/otherNames","default"],wizardKeyArray:["data","otherNames","present"],metaToWizardTransform:function(x){return angular.isDefined(x)?"true":void 0}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/otherNames","maxLength"],wizardKeyArray:["pages","other-names","fields",{key:"otherNames"},"fields",{key:"value"},"validate",{type:"maxLength"},"maxLength"]},{wizardKeyArray:["data","email","value"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","email","emailUri"]},{wizardKeyArray:["data","phone","value"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","telephone","formattedNumber"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/telephone/formattedNumber","maxLength"],wizardKeyArray:["pages","email-phone","fields",{key:"phone"},"fields",{key:"value"},"validate",{type:"maxLength"},"maxLength"]},{wizardKeyArray:["data","citizenship"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","workerEligibilityTypeCode","codeValue"],wizardToPostTransform:function(x){var type;return _.forEach(x,function(v,i){v&&(type=i)}),x[type]}},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/pinNumber"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"ssn"},"hidden"],metaToWizardTransform:function(x){return!x}},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/pinNumber","optional"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"ssn"},"fields",{key:"last4SSN"},"validate",{type:"optional"},"optional"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/pinNumber","maxLength"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"ssn"},"fields",{key:"last4SSN"},"validate",{type:"maxLength"},"maxLength"],metaToWizardTransform:function(x){return 4}},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/pinNumber","minLength"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"ssn"},"fields",{key:"last4SSN"},"validate",{type:"minLength"},"minLength"],metaToWizardTransform:function(x){return 4}},{optional:!0,skipOnUndefined:!0,wizardKeyArray:["data","review","signatures","ssn","last4SSN"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","electronicSignature","signatureVerificationOptions","pinNumber"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/familyName1","optional"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"ssn"},"fields",{key:"lastName"},"validate",{type:"optional"},"optional"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/familyName1","maxLength"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"ssn"},"fields",{key:"lastName"},"validate",{type:"maxLength"},"maxLength"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/familyName1","minLength"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"ssn"},"fields",{key:"lastName"},"validate",{type:"minLength"},"minLength"]},{optional:!0,skipOnUndefined:!0,wizardKeyArray:["data","review","signatures","ssn","lastName"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","electronicSignature","signatureVerificationOptions","familyName1"]},{metaKeyArray:["meta"],wizardKeyArray:["data","preparerTranslators"],metaToWizardTransform:function(){return[]}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/preparers/personName/givenName","maxLength"],wizardKeyArray:["pages","preparer-translator-name","fields",{key:"preparerTranslator"},"fields",{key:"name"},"fields",{key:"first"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/preparers/personName/familyName1","maxLength"],wizardKeyArray:["pages","preparer-translator-name","fields",{key:"preparerTranslator"},"fields",{key:"name"},"fields",{key:"last"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/preparers/relationshipTypeCode","codeList","listItems"],wizardKeyArray:["pages","preparer-translator-relationship","fields",{key:"preparerTranslator"},"fields",{key:"relationship"},"select","allItems"],metaToWizardTransform:function(x){return _.map(x,function(i){return{label:i.shortName||i.longName,value:i.codeValue}})}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/preparers/address/countrySubdivisionLevel1","codeList","listItems"],wizardKeyArray:["pages","preparer-translator-address","fields",{key:"preparerTranslator"},"fields",{key:"address"},"fields",{key:"state"},"select","items"],metaToWizardTransform:function(x){return _.map(x,function(i){return{label:i.codeValue,value:i.codeValue}})}},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/preparers/address/lineOne","maxLength"],wizardKeyArray:["pages","preparer-translator-address","fields",{key:"preparerTranslator"},"fields",{key:"address"},"fields",{key:"street"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/preparers/address/cityName","maxLength"],wizardKeyArray:["pages","preparer-translator-address","fields",{key:"preparerTranslator"},"fields",{key:"address"},"fields",{key:"city"},"validate",{type:"maxLength"},"maxLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/preparers/address/postalCode","minLength"],wizardKeyArray:["pages","preparer-translator-address","fields",{key:"preparerTranslator"},"fields",{key:"address"},"fields",{key:"zipcode"},"validate",{type:"minLength"},"minLength"]},{metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/preparers/address/postalCode","maxLength"],wizardKeyArray:["pages","preparer-translator-address","fields",{key:"preparerTranslator"},"fields",{key:"address"},"fields",{key:"zipcode"},"validate",{type:"maxLength"},"maxLength"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/securityQuestionCode"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"securityQuestion"},"hidden"],metaToWizardTransform:function(x){return!x}},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/securityQuestionCode","codeList","listItems"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"securityQuestion"},"fields",{key:"securityQuestion"},"select","items"],metaToWizardTransform:function(x){return _.map(x,function(i){return{label:i.longName,value:i.codeValue}})}},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/securityQuestionCode","optional"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"securityQuestion"},"fields",{key:"securityQuestion"},"validate",{type:"optional"},"optional"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/securityQuestionCode","optional"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"securityQuestion"},"fields",{key:"answer"},"validate",{type:"optional"},"optional"]},{optional:!0,skipOnUndefined:!0,wizardKeyArray:["data","review","signatures","securityQuestion","securityQuestion","value"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","electronicSignature","signatureVerificationOptions","securityQuestionCode","codeValue"]},{optional:!0,skipOnUndefined:!0,wizardKeyArray:["data","review","signatures","securityQuestion","answer"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","electronicSignature","signatureVerificationOptions","securityAnswerValue"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/workerID/idValue"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"pin"},"hidden"],metaToWizardTransform:function(x){return!x}},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/workerID/idValue","optional"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"pin"},"validate",{type:"optional"},"optional"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/workerID/idValue","maxLength"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"pin"},"validate",{type:"maxLength"},"maxLength"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/workerID/idValue","minLength"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"pin"},"validate",{type:"minLength"},"minLength"]},{optional:!0,metaKeyArray:["meta","/data/transforms","0","/usI9Screening/sectionOne/electronicSignature/signatureVerificationOptions/workerID/idValue","default"],wizardKeyArray:["pages","review-and-sign","fields",{key:"review"},"fields",{key:"signatures"},"fields",{key:"pin"},"validate",{type:"pattern"},"pattern"],metaToWizardTransform:function(x){return x?"^"+x+"$":x}},{optional:!0,skipOnUndefined:!0,wizardKeyArray:["data","review","signatures","pin"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","electronicSignature","signatureVerificationOptions","workerID","idValue"]},{optional:!0,skipOnUndefined:!0,wizardKeyArray:["data","review","acknowledge"],postKeyArray:["events","data","transform","usI9Screening","sectionOne","acknowledgementIndicator"]}]),angular.module("redbox.onboarding.i9").controller("redbox.onboarding.i9.I9WizardCtrl",["$window","$modalInstance","$scope","$timeout","adp.ng.logging.LoggerFactory","redbox.wizard.WizardConstant","redbox.wizard.WizardRendererService","redbox.wizard.WizardDriverService","redbox.wizard.WizardEvaluatorService","redbox.wizard.WizardPagemakerService","redbox.wizard.WizardStyleService","redbox.onboarding.i9.I9ModalService","redbox.onboarding.i9.I9SubmissionService","redbox.onboarding.i9.I9InitialDataService",function($window,$modalInstance,$scope,$timeout,loggerFactory,wizardConstant,Renderer,Driver,Evaluator,Pagemaker,WizardStyleService,I9ModalService,I9SubmissionService,I9InitialDataService){function startWizard(initialPagesAndData){var renderer,hooks,pagemaker;pagemaker=new Pagemaker(initialPagesAndData.pages,{pageNotFound:function(key){logger.error("Attempted to go to "+key+", which is not a defined page! Data final state:"),logger.error(driver.getData()),driver.stop()}}),renderer=new Renderer({target:i9WizardDiv,scope:$scope,containerClass:"container"}),hooks={preShow:function(page,data,animationDirection){WizardStyleService.setCurrentPage(page),I9ModalService.setCurrentPageKey(page.key),handleAnimation(page,data,animationDirection,i9WizardDiv),closePopover()},preHide:function(){handleTransitionEndEvent()},onSetValidationErrors:function(page,data,errors,isErrorState){WizardStyleService.setErrorState(isErrorState)},onStopDriver:cleanupUI},driver=new Driver(initialPagesAndData.data,pagemaker,hooks,renderer,Evaluator),driver.start(),vm.callbacks=driver.callbacks}function closeWizard(){driver.stop()}function cleanupUI(){closePopover(),I9SubmissionService.cleanup(),$modalInstance.close()}function closePopover(){$(".i9-popover-close").triggerHandler("click")}function attemptToCloseWizard(){driver.unsavedDataExists()&&!I9SubmissionService.hasSuccessfullyPosted()?I9ModalService.showUnsavedDataModal().then(closeWizard):closeWizard()}function handleAnimation(page,data,animationDirection,element){var animationClass="";if(element.removeClass("animation-slide-forward animation-slide-backward animation-fade animation-fade-in-review"),"review-and-sign"===page.key)animationClass="animation-fade-in-review";else if("sensitive-information-warning"===page.key&&animationDirection===wizardConstant.animationDirections.BACKWARD)animationClass="animation-fade";else switch(animationDirection){case wizardConstant.animationDirections.BACKWARD:animationClass="animation-slide-backward";break;case wizardConstant.animationDirections.NONE:animationClass="animation-fade";break;case wizardConstant.animationDirections.FORWARD:animationClass="animation-slide-forward"}element.addClass(animationClass)}function handleTransitionEndEvent(){var pageContainer=$(".wizard-page-container");i9NavButtons.addClass("hide-during-transition"),pageContainer.on("transitionend webkitTransitionEnd",function(){$timeout(function(){i9NavButtons.removeClass("hide-during-transition")},250),pageContainer.off("transitionend webkitTransitionEnd")})}function openModalToFullI9Instructions(){I9ModalService.showFullI9InstructionsModal().then(function(){$window.open(GOVERNMENT_I9_URL)})}function handleLoadingError(){I9ModalService.showLoadingErrorModal().finally(cleanupUI)}var driver,i9WizardDiv,i9NavButtons,vm=this,logger=loggerFactory.getLogger("redbox.onboarding.i9.I9WizardCtrl"),GOVERNMENT_I9_URL="http://www.uscis.gov/i-9";vm.attemptToCloseWizard=attemptToCloseWizard,vm.style=WizardStyleService,vm.showLoadingIndicator=I9SubmissionService.isLoading,vm.openModalToFullI9Instructions=openModalToFullI9Instructions,$timeout(function(){i9WizardDiv=$(".i9-wizard"),i9NavButtons=$(".adp-wizard-nav-buttons")},0).then(function(){I9InitialDataService.getInitialPagesAndData().then(startWizard,handleLoadingError)})}]),angular.module("redbox.onboarding.i9").factory("redbox.onboarding.i9.I9DefaultPagesService",["$q","$language","$window","redbox.wizard.WizardConstant","redbox.onboarding.i9.I9SubmissionService","redbox.onboarding.i9.I9ModalService",function($q,$language,$window,wizardConstant,I9SubmissionService,I9ModalService){
function getProgress(count,currentPreparerQuestionNum){var progress,offset=PROGRESS_INTERVAL_FOR_EACH_PREPARER_SET/TOTAL_QUESTIONS_IN_EACH_PREPARER_SET*currentPreparerQuestionNum;return progress=_.add(_.add(BASE_STARTING_PROGRESS_FOR_PREPARERS,offset),PROGRESS_INTERVAL_FOR_EACH_PREPARER_SET*count)}function inUnder18PreparerFlow(data){return"under18"===data.documentation.case&&0===data.preparerTranslators.length}var MAX_NUMBER_OF_PREPARERS=3,BASE_STARTING_PROGRESS_FOR_PREPARERS=76,BASE_ENDING_PROGRESS_FOR_PREPARERS=88,PROGRESS_INTERVAL_FOR_EACH_PREPARER_SET=(BASE_ENDING_PROGRESS_FOR_PREPARERS-BASE_STARTING_PROGRESS_FOR_PREPARERS)/MAX_NUMBER_OF_PREPARERS,TOTAL_QUESTIONS_IN_EACH_PREPARER_SET=4;return{start:{hooks:{preShow:I9SubmissionService.initialize},title:"onboarding.I9_PAGE_START_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-start.html",nextButtonText:"onboarding.I9_BUTTON_START",progress:0,next:'"name"',displayStartButton:!0,displayCancelButton:!1},name:{title:"onboarding.I9_PAGE_NAME_TITLE_ENTER",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-name.html",progress:4.34,next:'"ssn"',fields:[{key:"name",type:"object",repeaterWrapperCls:"row",fields:[{key:"first",id:"first-name",type:"text",cls:"col-xs-12 col-sm-8",label:"wizard.WZ_PERSON_FIRST_NAME_GIVEN_NAME",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"middle",id:"middle-initial",type:"text",cls:"col-xs-12 col-sm-4",label:"wizard.WZ_PERSON_MIDDLE_INITIAL",maxlength:1,validate:[{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"last",id:"last-name",type:"text",cls:"col-xs-12 col-sm-8",label:"wizard.WZ_PERSON_LAST_NAME_FAMILY_NAME",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]}]}]},ssn:{hooks:{onValidatedSubmit:function(page,data){return 2===data.ssn.present?I9ModalService.showPageInterceptModal({title:"onboarding.I9_PAGE_IN_PERSON_MODAL_TITLE",description:"onboarding.I9_PAGE_IN_PERSON_MODAL_DESCRIPTION",urlType:"acceptable-documents",closeBehavior:{closeWizard:!0}}).then($q.when.bind(void 0,wizardConstant.specialValues.CLOSE_WIZARD)):3===data.ssn.present?I9ModalService.showPageInterceptModal({title:"onboarding.I9_COMMON_HR_MODAL_TITLE",description:"onboarding.I9_PAGE_HR_NO_SSN_MODAL_DESCRIPTION",closeBehavior:{closeWizard:!0}}).then($q.when.bind(void 0,wizardConstant.specialValues.CLOSE_WIZARD)):void 0}},title:"onboarding.I9_PAGE_SSN_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-ssn.html",progress:8.68,next:'"citizen"',fields:[{key:"ssn",type:"object",fields:[{key:"value",label:"onboarding.I9_PAGE_SSN_RADIO_HAVE_SSN_SSN_LABEL",type:"ssn",hidden:!0,placeholder:"onboarding.I9_PAGE_SSN_RADIO_HAVE_SSN_SSN_PLACEHOLDER",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED",priority:0},{type:"pattern",message:"shared.VALIDATION_INVALID",priority:1}]},{key:"displayWillNotEnter",type:"object",hidden:!0,fields:[{type:"div",label:"onboarding.I9_PAGE_SSN_RADIO_HAVE_SSN_WONT_ENTER_DIV_LABEL",cls:"error adp-validation-error"},{key:"will-not-enter-buttons",type:"object",repeaterWrapperCls:"row will-not-enter-links-wrapper",fields:[{type:"button",cls:"col-xs-12 col-sm-6 col-md-4",e2e:"download-i9",buttonType:"link",actionType:"download",label:"onboarding.I9_COMMON_DOWNLOAD_I9_FORM",analytics:{event:"Link",category:"Onboarding",label:"I9 - SSN - Outclick - Download Blank I9 Form"},action:function(){var i18nCode=$language.use(),url=_.find(this.links,function(val,key){return i18nCode===key})||this.links["en-US"];$window.open(url)}},{type:"button",cls:"col-xs-12 col-sm-6",e2e:"see-doc-list",buttonType:"link",actionType:"external",label:"onboarding.I9_COMMON_ACCEPTABLE_DOCUMENTATION",analytics:{event:"Link",category:"Onboarding",label:"I9 - SSN - Outclick - Download Acceptable Documents"},action:function(){$window.open(this.url)}}]}]},{type:"radio",key:"present",keys:[{value:1,label:"onboarding.I9_PAGE_SSN_RADIO_HAVE_SSN",id:"ssn-yes",displayFields:["value"]},{value:2,label:"onboarding.I9_PAGE_SSN_RADIO_HAVE_SSN_WONT_ENTER",id:"ssn-yes-will-not-enter",displayFields:["displayWillNotEnter"]},{value:3,label:"onboarding.I9_PAGE_SSN_RADIO_NO_SSN",id:"ssn-no"}],validate:[{type:"optional",message:"shared.VALIDATION_MAKE_A_SELECTION"}]}],validateIf:[{key:"value",expr:"data.present === 1"}]}]},citizen:{title:"onboarding.I9_PAGE_CITIZEN_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:13.02,next:'data.citizenship.citizen === 4 ? "provide-documentation" : "noncitizen-national"',fields:[{type:"object",key:"citizenship",fields:[{key:"citizen",type:"radio",keys:[{value:"4",label:"shared.YES",id:"citizen-yes"},{value:!1,label:"shared.NO",id:"citizen-no"}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}]}]},"noncitizen-national":{title:"onboarding.I9_PAGE_NONCITIZEN_NATIONAL_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-non-citizen-national.html",progress:17.36,next:'data.citizenship.noncitizenNational === 5 ? "provide-documentation" : "lawful-permanent-resident"',fields:[{type:"object",key:"citizenship",fields:[{key:"noncitizenNational",type:"radio",keys:[{value:"5",label:"shared.YES",id:"noncitizen-national-yes"},{value:!1,label:"shared.NO",id:"noncitizen-national-no"}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}]}]},"lawful-permanent-resident":{title:"onboarding.I9_PAGE_LAWFUL_PERMANENT_RESIDENT_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-lawful-permanent-resident.html",progress:21.7,next:'data.citizenship.lawfulPermanentResident === 6 ? "alien-registration-number-enter" : "alien-authorized-to-work"',fields:[{type:"object",key:"citizenship",fields:[{key:"lawfulPermanentResident",type:"radio",keys:[{value:"6",label:"onboarding.I9_PAGE_LAWFUL_PERMANENT_RESIDENT_RADIO_YES",id:"lawful-permanent-resident-yes"},{value:!1,label:"shared.NO",id:"lawful-permanent-resident-no"}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}]}]},"alien-authorized-to-work":{title:"onboarding.I9_PAGE_ALIEN_AUTHORIZED_TO_WORK_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-alien-authorized-to-work.html",progress:26.04,next:'data.citizenship.alienAuthorizedToWork === 7 ? "alien-expiring-docs" : ""',fields:[{key:"citizenship",type:"object",fields:[{key:"displayAlienNotAuthorized",type:"div",hidden:!0,label:"onboarding.I9_PAGE_ALIEN_AUTHORIZED_TO_WORK_NOT_AUTHORIZED_LABEL",cls:"error adp-validation-error"},{type:"radio",key:"alienAuthorizedToWork",keys:[{value:"7",label:"onboarding.I9_PAGE_ALIEN_AUTHORIZED_TO_WORK_RADIO_YES",id:"alien-authorized-to-work-yes"},{value:!1,label:"shared.NO",id:"alien-authorized-to-work-no",displayFields:["displayAlienNotAuthorized"]}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}],validate:[{expr:"data.alienAuthorizedToWork === 7",message:""}]}]},"alien-expiring-docs":{title:"onboarding.I9_PAGE_ALIEN_EXPIRING_DOCS_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:30.38,next:'"alien-registration-number"',fields:[{key:"alienDocsExpire",type:"object",fields:[{key:"present",type:"radio",keys:[{value:!1,label:"onboarding.I9_PAGE_ALIEN_EXPIRING_DOCS_LABEL_NO",id:"alien-expiring-docs-no"},{value:!0,label:"onboarding.I9_PAGE_ALIEN_EXPIRING_DOCS_LABEL_YES",id:"alien-expiring-docs-yes",displayFields:["value"]}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]},{key:"value",type:"date",config:{yearsToAdd:21,yearsToInclude:1},hidden:!0,validate:[{type:"optional",expr:"data.month && data.day && data.year",message:"shared.VALIDATION_REQUIRED",priority:0},{expr:'globals.moment(data.year + "-" + data.month + "-" + data.day, "YYYY-MM-DD").isAfter(globals.moment())',globals:{moment:$window.moment},message:"onboarding.I9_PAGE_ALIEN_EXPIRED_ERROR",priority:1}]}],validateIf:[{key:"value",expr:"data.present === true"}]}]},"alien-registration-number":{title:"onboarding.I9_PAGE_ALIEN_REGISTRATION_NUMBER_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:34.72,next:'data.hasRegistrationNumber === true ? "alien-registration-number-enter" : "alien-admission-number"',fields:[{key:"hasRegistrationNumber",type:"radio",keys:[{value:!0,label:"shared.YES",id:"has-registration-number-yes"},{value:!1,label:"shared.NO",id:"has-registration-number-no"}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}]},"alien-registration-number-enter":{title:"onboarding.I9_PAGE_ALIEN_REGISTRATION_NUMBER_ENTER_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-alien-registration-number.html",progress:39.06,next:'"provide-documentation"',fields:[{key:"alienRegistrationNumber",type:"text",label:"onboarding.I9_PAGE_ALIEN_REGISTRATION_NUMBER_LABEL",placeholder:"onboarding.I9_PAGE_ALIEN_REGISTRATION_NUMBER_ENTER_PLACEHOLDER",e2e:"alien-registration-number",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED",priority:0},{type:"minLength",message:"shared.VALIDATION_TOO_SHORT",priority:1},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG",priority:2},{type:"pattern",message:"shared.VALIDATION_INVALID",priority:3}]}]},"alien-admission-number":{title:"onboarding.I9_PAGE_ALIEN_ADMISSION_NUMBER_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-alien-admission-number.html",progress:43.4,next:'"alien-cbp"',fields:[{key:"arrivalRecord",type:"object",fields:[{key:"admissionNumber",type:"text",label:"onboarding.I9_PAGE_ALIEN_ADMISSION_NUMBER_LABEL",placeholder:"onboarding.I9_PAGE_ALIEN_ADMISSION_NUMBER_ENTER_PLACEHOLDER",e2e:"alien-admission-number",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED",priority:0},{type:"minLength",message:"shared.VALIDATION_TOO_SHORT",priority:1},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG",priority:2},{type:"pattern",message:"shared.VALIDATION_INVALID",priority:3}]}]}]},"alien-cbp":{title:"onboarding.I9_PAGE_ALIEN_CBP_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:47.73,next:'data.admissionNumberWithCBP === true ? "alien-passport-number-and-country" : "provide-documentation"',fields:[{key:"admissionNumberWithCBP",type:"radio",keys:[{value:!0,label:"shared.YES",id:"cbp-yes"},{value:!1,label:"shared.NO",id:"cbp-no"}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}]},"alien-passport-number-and-country":{title:"onboarding.I9_PAGE_ALIEN_PASSPORT_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-alien-passport-number.html",progress:52.08,next:'"provide-documentation"',fields:[{key:"arrivalRecord",type:"object",fields:[{key:"passport",type:"object",fields:[{key:"documentID",type:"text",label:"onboarding.I9_PAGE_ALIEN_PASSPORT_NUMBER_LABEL",placeholder:"onboarding.I9_ALIEN_PASSPORT_NUMBER_PLACEHOLDER",e2e:"passport-number",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED",priority:0},{type:"minLength",message:"shared.VALIDATION_TOO_SHORT",priority:1},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG",priority:2},{type:"pattern",message:"shared.VALIDATION_INVALID",priority:3}]},{key:"countryCode",type:"select",label:"onboarding.I9_PAGE_ALIEN_PASSPORT_COUNTRY_LABEL",select:{selected:"shared.SELECT",searchEnabled:!0,hideSelected:!1},validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_REQUIRED"}]}]}]}]},"provide-documentation":{hooks:{onValidatedSubmit:function(page,data){if(data.documentation.provideDocumentation)delete data.documentation.case;else{if("under18"===data.documentation.case)return I9ModalService.showPageInterceptModal({title:"onboarding.I9_PAGE_PROVIDE_DOCUMENTATION_UNDER_18_MODAL_TITLE",description:"onboarding.I9_PAGE_PROVIDE_DOCUMENTATION_UNDER_18_MODAL_DESCRIPTION"});if("disabilities"===data.documentation.case)return I9ModalService.showPageInterceptModal({title:"onboarding.I9_PAGE_PROVIDE_DOCUMENTATION_DISABILITIES_MODAL_TITLE",description:"onboarding.I9_PAGE_PROVIDE_DOCUMENTATION_DISABILITIES_MODAL_DESCRIPTION"});if("none"===data.documentation.case)return I9ModalService.showPageInterceptModal({title:"onboarding.I9_PAGE_MODAL_CANNOT_CONTINUE_TITLE",description:"onboarding.I9_PAGE_MODAL_CANNOT_CONTINUE_DESCRIPTION",closeBehavior:{closeWizard:!0}}).then($q.when.bind(void 0,wizardConstant.specialValues.CLOSE_WIZARD))}}},title:"onboarding.I9_PAGE_PROVIDE_DOCUMENTATION_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:56.42,next:'"date-of-birth"',fields:[{key:"documentation",type:"object",fields:[{type:"button-offsite",label:"onboarding.I9_COMMON_ACCEPTABLE_DOCUMENTATION",analytics:{event:"Button",category:"Onboarding",label:"I9 - provide-documentation - See Document List"},modal:{buttons:{ok:"shared.OK",cancel:"shared.CANCEL"},title:"onboarding.I9_COMMON_NEW_WINDOW",description:"onboarding.I9_COMMON_DOCUMENT_LIST_BUTTON_MODAL_DESCRIPTION",analytics:{close:{event:"Link",category:"Onboarding",label:"I9 - provide-documentation - DOCUMENT_LIST - MODAL_CLOSE"},dismiss:{event:"Link",category:"Onboarding",label:"I9 - provide-documentation - DOCUMENT_LIST - MODAL_DISMISS"}}}},{key:"caseLabel",type:"div",cls:"subhead",hidden:!0,label:"shared.VALIDATION_ANY_APPLY"},{key:"case",type:"radio",hidden:!0,keys:[{value:'"under18"',label:"onboarding.I9_PAGE_PROVIDE_DOCUMENTATION_RADIO_UNDER_18",id:"under-18"},{value:'"disabilities"',label:"onboarding.I9_PAGE_PROVIDE_DOCUMENTATION_RADIO_DISABILITIES",id:"disabilities"},{value:'"none"',label:"shared.NONE_OF_THE_ABOVE",id:"none"}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]},{key:"provideDocumentation",type:"radio",keys:[{value:!0,label:"shared.YES",id:"provide-documentation-yes"},{value:!1,label:"shared.NO",id:"provide-documentation-no",displayFields:["caseLabel","case"]}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}],validateIf:[{key:"case",expr:"data.provideDocumentation === false"}]}]},"date-of-birth":{title:"onboarding.I9_PAGE_DATE_OF_BIRTH_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:60.76,next:'"other-names"',fields:[{key:"dateOfBirth",type:"date",config:{yearsToSubtract:13,yearsToInclude:100,yearsDescending:!0,obfuscateYear:!0},validate:[{type:"optional",expr:"data.month && data.day && data.year",message:"shared.VALIDATION_REQUIRED"},{type:"over13",expr:'globals.moment(data.year + "-" + data.month + "-" + data.day, "YYYY-MM-DD").isBefore(globals.moment().subtract(14,"year"))',globals:{moment:$window.moment},message:"onboarding.I9_PAGE_DATE_OF_BIRTH_VALIDATION_OVER13"}]}],validate:[{type:"under18",expr:'( data.documentation.case === "under18" &&    globals.moment(data.dateOfBirth.year + "-" + data.dateOfBirth.month + "-" + data.dateOfBirth.day, "YYYY-MM-DD").isAfter(globals.moment().subtract(18,"year"))  ) || data.documentation.case !== "under18"',globals:{moment:$window.moment},message:"onboarding.I9_PAGE_DATE_OF_BIRTH_VALIDATION_UNDER18"}]},"other-names":{title:"onboarding.I9_PAGE_OTHER_NAMES_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-other-names.html",progress:65.1,next:'"address"',fields:[{key:"otherNames",type:"object",fields:[{key:"value",label:"onboarding.I9_PAGE_OTHER_NAMES_LABEL",type:"text",hidden:!0,cls:"other-names-label",validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{type:"radio",key:"present",keys:[{value:!0,label:"shared.YES",id:"other-names-yes",displayFields:["value"]},{value:!1,label:"shared.NO",id:"other-names-no"}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}],validateIf:[{key:"value",expr:"data.present === true"}]}]},address:{title:"onboarding.I9_PAGE_ADDRESS_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-address.html",progress:69.44,next:'"email-phone"',fields:[{key:"address",type:"object",repeaterWrapperCls:"row",fields:[{key:"street",id:"wz-street",type:"text",label:"wizard.WZ_PERSON_ADDRESS_STREET_NUMBER_AND_NAME",cls:"col-xs-12 col-md-9",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"apartmentnumber",id:"wz-apartment-number",type:"text",label:"wizard.WZ_PERSON_APT_NUMBER",cls:"col-xs-12 col-md-3",validate:[{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"city",id:"wz-city",type:"text",label:"wizard.WZ_PERSON_CITY_OR_TOWN",cls:"col-xs-12 col-md-9",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"zipcode",id:"wz-zipcode",type:"text",label:"wizard.WZ_PERSON_ZIP_CODE",cls:"col-md-3 col-xs-4",validate:[{type:"minLength",message:"shared.VALIDATION_TOO_SHORT",priority:1},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG",priority:2},{type:"optional",message:"shared.VALIDATION_REQUIRED",priority:0},{type:"pattern",pattern:"(^\\d{5}$)|(^\\d{5}-\\d{4}$)|(^(?!.*[DFIOQU])[A-VXY,a-vxy][0-9][A-Z,a-z](\\s|-)[0-9][A-Z,a-z][0-9]$)",message:"shared.VALIDATION_INVALID",priority:3}]},{key:"state",type:"select",label:"shared.STATE",cls:"col-xs-4",select:{selected:"shared.SELECT"},validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED"}]}]}]},"email-phone":{title:"onboarding.I9_PAGE_EMAIL_PHONE_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-email-phone.html",progress:73.78,next:'data.documentation.case === "under18" || data.documentation.case === "disabilities" ? "preparer-translator-name" : "preparer-translator"',fields:[{key:"email",type:"text-opt-out",label:"onboarding.I9_PAGE_EMAIL_PHONE_EMAIL_LABEL",doNotProvideLabel:"onboarding.I9_PAGE_EMAIL_PHONE_EMAIL_OPTOUT_LABEL",validate:[{message:"onboarding.I9_PAGE_EMAIL_PHONE_EMAIL_REQUIRED",expr:"data.optOut || data.value"}],fields:[{key:"value",validate:[{optional:!1,pattern:'^(([^<>()[\\]\\.,;:\\s@"]+(\\.[^<>()[\\]\\.,;:\\s@"]+)*)|(".+"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$',message:"onboarding.I9_PAGE_EMAIL_PHONE_EMAIL_REQUIRED"}]}],validateIf:[{key:"value",expr:'data.value !== "" || !data.optOut'}]},{key:"phone",type:"text-opt-out",label:"onboarding.I9_PAGE_EMAIL_PHONE_PHONE_LABEL",doNotProvideLabel:"onboarding.I9_PAGE_EMAIL_PHONE_PHONE_OPTOUT_LABEL",validate:[{message:"onboarding.I9_PAGE_EMAIL_PHONE_PHONE_REQUIRED",expr:"data.optOut || data.value"}],fields:[{key:"value",validate:[{type:"maxLength",message:"onboarding.I9_PAGE_EMAIL_PHONE_PHONE_REQUIRED",optional:!1}]}],validateIf:[{key:"value",expr:'data.value !== "" || !data.optOut'}]}]},"preparer-translator":{hooks:{preShow:function(page,data){"under18"===data.documentation.case&&1===data.preparerTranslators.length?page.title="onboarding.I9_PAGE_PREPARER_TRANSLATOR_TITLE_PARENT_LEGAL_GUARDIAN":"under18"!==data.documentation.case&&0===data.preparerTranslators.length?page.title="onboarding.I9_PAGE_PREPARER_TRANSLATOR_TITLE_SINGLE":data.preparerTranslators.length>0&&(page.title="onboarding.I9_PAGE_PREPARER_TRANSLATOR_TITLE_MULTIPLE"),page.progress=getProgress(data.preparerTranslators.length,1)}},templateUrl:"app/onboarding/modules/i9/views/page-preparer-translator.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-preparer-translator.html",next:'data.preparerTranslator.present === true ? "preparer-translator-name" : "sensitive-information-warning"',fields:[{key:"preparerTranslator",type:"object",fields:[{key:"present",type:"radio",keys:[{value:!0,label:"shared.YES",id:"preparer-translator-yes"},{value:!1,label:"shared.NO",id:"preparer-translator-no"}],validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_MAKE_A_SELECTION"}]}]}]},"preparer-translator-name":{hooks:{preShow:function(page,data){inUnder18PreparerFlow(data)?page["alert-message"]="onboarding.I9_COMMON_PARENT_LEGAL_GUARDIAN_BANNER":page["alert-message"]="onboarding.I9_COMMON_PREPARER_BANNER",page.progress=getProgress(data.preparerTranslators.length,2)}},title:"onboarding.I9_PAGE_NAME_TITLE_ENTER",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-preparer-translator-information.html",next:'"preparer-translator-relationship"',fields:[{key:"preparerTranslator",type:"object",fields:[{key:"name",type:"object",repeaterWrapperCls:"row",fields:[{key:"first",id:"first-name",type:"text",cls:"col-xs-12 col-sm-8",label:"wizard.WZ_PERSON_FIRST_NAME_GIVEN_NAME",validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"middle",id:"middle-initial",type:"text",cls:"col-xs-12 col-sm-4",label:"wizard.WZ_PERSON_MIDDLE_INITIAL",maxlength:1,validate:[{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"last",id:"last-name",type:"text",cls:"col-xs-12 col-sm-8",label:"wizard.WZ_PERSON_LAST_NAME_FAMILY_NAME",validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]}]}]}]},"preparer-translator-relationship":{hooks:{preShow:function(page,data){var items,relationship=_.find(_.find(page.fields,{key:"preparerTranslator"}).fields,{key:"relationship"}),allItems=relationship.select.allItems;if(0===data.preparerTranslators.length)switch(data.documentation.case){case"under18":items=_.filter(allItems,function(i){return"3"!==i.value&&"4"!==i.value});break;case"disabilities":items=_.filter(allItems,function(i){return"4"!==i.value})}relationship.select.items=items||allItems,inUnder18PreparerFlow(data)?page["alert-message"]="onboarding.I9_COMMON_PARENT_LEGAL_GUARDIAN_BANNER":page["alert-message"]="onboarding.I9_COMMON_PREPARER_BANNER",page.progress=getProgress(data.preparerTranslators.length,3)}},title:"onboarding.I9_PAGE_PREPARER_RELATIONSHIP_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-preparer-translator-information.html",next:'"preparer-translator-address"',fields:[{key:"preparerTranslator",type:"object",fields:[{key:"relationship",type:"select",select:{selected:"shared.PLEASE_SELECT",hideSelected:!1},validate:[{optional:!1,message:"shared.VALIDATION_REQUIRED"}]}]}]},"preparer-translator-address":{hooks:{onValidatedSubmit:function(page,data){return I9ModalService.showPageInterceptModal({title:inUnder18PreparerFlow(data)?"onboarding.I9_PARENT_LEGAL_GUARDIAN_CONFIRMATION":"onboarding.I9_PREPARER_TRANSLATOR_CONFIRMATION",description:"onboarding.I9_PREPARER_TRANSLATOR_ATTESTATION",closeLabel:"shared.CONFIRM",closeBehavior:{closeWizard:!0}}).then(function(){data.preparerTranslators.push(data.preparerTranslator),data.preparerTranslator={}})},preShow:function(page,data,animationDirection){inUnder18PreparerFlow(data)?page["alert-message"]="onboarding.I9_COMMON_PARENT_LEGAL_GUARDIAN_BANNER":page["alert-message"]="onboarding.I9_COMMON_PREPARER_BANNER",animationDirection===wizardConstant.animationDirections.BACKWARD&&(data.preparerTranslator=data.preparerTranslators.pop()),page.progress=getProgress(data.preparerTranslators.length,4)}},title:"onboarding.I9_PAGE_ADDRESS_TITLE",templateUrl:"app/wizard/views/page-default.html",helpTemplateUrl:"app/onboarding/modules/i9/views/help/help-preparer-translator-information.html",next:"data.preparerTranslators.length >= "+MAX_NUMBER_OF_PREPARERS+' ? "sensitive-information-warning" : "preparer-translator"',fields:[{key:"preparerTranslator",type:"object",fields:[{key:"address",type:"object",repeaterWrapperCls:"row",fields:[{key:"street",id:"wz-street",type:"text",label:"wizard.WZ_PERSON_ADDRESS_STREET_NUMBER_AND_NAME",cls:"col-xs-12 col-md-9",validate:[{type:"optional",optional:!1,message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"apartmentnumber",id:"wz-apartment-number",type:"text",label:"wizard.WZ_PERSON_APT_NUMBER",cls:"col-xs-12 col-md-3",validate:[{message:"shared.VALIDATION_TOO_LONG"}]},{key:"city",id:"wz-city",type:"text",label:"wizard.WZ_PERSON_CITY_OR_TOWN",cls:"col-xs-12 col-md-9",validate:[{optional:!1,type:"optional",message:"shared.VALIDATION_REQUIRED"},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG"}]},{key:"zipcode",id:"wz-zipcode",type:"text",label:"wizard.WZ_PERSON_ZIP_CODE",cls:"col-md-3 col-xs-4",validate:[{type:"minLength",message:"shared.VALIDATION_TOO_SHORT",priority:1},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG",priority:2},{type:"optional",optional:!1,message:"shared.VALIDATION_REQUIRED",priority:0},{type:"pattern",pattern:"(^\\d{5}$)|(^\\d{5}-\\d{4}$)|(^(?!.*[DFIOQU])[A-VXY,a-vxy][0-9][A-Z,a-z](\\s|-)[0-9][A-Z,a-z][0-9]$)",message:"shared.VALIDATION_INVALID",priority:3}]},{key:"state",type:"select",label:"shared.STATE",cls:"col-xs-4",select:{selected:"shared.SELECT"},validate:[{optional:!1,type:"optional",message:"shared.VALIDATION_REQUIRED"}]}]}]}]},"sensitive-information-warning":{hooks:{preShow:I9SubmissionService.preShow.sensitiveInformationWarning,postShow:I9SubmissionService.postShow.sensitiveInformationWarning,onValidatedSubmit:function(page,data){return I9SubmissionService.onValidatedSubmit.sensitiveInformationWarning(page,data).catch(function(){return I9ModalService.showErrorModal().then($q.when.bind(void 0,wizardConstant.specialValues.CLOSE_WIZARD))})}},templateUrl:"app/wizard/views/page-default.html",progress:91.14,nextButtonText:"shared.CONTINUE",next:'"review-and-sign"',fields:[{type:"alert",alert:{title:"onboarding.I9_PAGE_SENSITIVE_DATA_WARNING",closeable:!1,type:"warning"}}]},"review-and-sign":{hooks:{preShow:I9SubmissionService.preShow.reviewAndSign,postShow:I9SubmissionService.postShow.reviewAndSign,onValidatedSubmit:function(page,data){return I9SubmissionService.onValidatedSubmit.reviewAndSign(page,data).then(function(){return $q.reject()},function(){return I9ModalService.showErrorModal().then($q.when.bind(void 0,wizardConstant.specialValues.CLOSE_WIZARD))})}},title:"onboarding.I9_PAGE_REVIEW_AND_SIGN_TITLE",templateUrl:"app/wizard/views/page-default.html",progress:95,cls:"i9-review-and-sign",displayCloseButtons:!1,nextButtonText:"shared.SUBMIT",terminal:!0,displayCancelButton:!0,fields:[{type:"button-offsite",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_ZOOMABLE_IMAGE_BUTTON_LABEL",cls:"zoomable-image-btn",analytics:{event:"Button",category:"Onboarding",label:"I9 - review-and-sign - Zoomable Image"},modal:{buttons:{ok:"shared.OK",cancel:"shared.CANCEL"},id:"i9-modal-zoom",title:"onboarding.I9_COMMON_NEW_WINDOW",description:"onboarding.I9_PAGE_REVIEW_AND_SIGN_ZOOMABLE_IMAGE_MODAL_LABEL",analytics:{close:{event:"Link",category:"Onboarding",label:"I9 - review-and-sign - REVIEW - ZOOMABLE_IMAGE - MODAL_CLOSE"},dismiss:{event:"Link",category:"Onboarding",label:"I9 - review-and-sign - REVIEW - ZOOMABLE_IMAGE - MODAL_DISMISS"}}}},{type:"div",cls:"i9-preview"},{type:"alert",key:"review",hidden:!1,cls:"i9-signature-alert",alert:{type:"warning",closeable:"false",title:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_TITLE",icon:"false"},fields:[{type:"div",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_PERJURY_NOTE",cls:"copy"},{type:"div",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_CONSENT",cls:"copy"},{type:"div",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_SIGNATURE_VALIDATION",cls:"i9-signature-validation-header"},{type:"object",key:"signatures",repeaterWrapperCls:"form-group",fields:[{hidden:!0,type:"object",key:"ssn",fields:[{key:"lastName",type:"text",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_SSN_LASTNAME_LABEL",cls:"signature-form",e2e:"review-last-name",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED",priority:0},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG",priority:2},{type:"minLength",message:"shared.VALIDATION_TOO_SHORT",priority:1},{type:"pattern",message:"shared.VALIDATION_INVALID",priority:3}]},{key:"last4SSN",type:"text",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_SSN_LAST4SSN_LABEL",cls:"signature-form",e2e:"review-last4SSN",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED",priority:0},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG",priority:2},{type:"minLength",message:"shared.VALIDATION_TOO_SHORT",priority:1},{type:"pattern",message:"shared.VALIDATION_INVALID",priority:3}]}]},{hidden:!0,type:"object",key:"securityQuestion",fields:[{key:"securityQuestion",type:"select",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_SECURITY_QUESTION_SELECT_LABEL",cls:"signature-form",select:{selected:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_SECURITY_QUESTION_SELECT_SELECTED_LABEL",hideSelected:!1},validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED"}]},{key:"answer",type:"text",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_SECURITY_QUESTION_ANSWER_LABEL",cls:"signature-form",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED"}]}]},{hidden:!0,type:"text",key:"pin",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_CUSTOM_PIN_LABEL",placeholder:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_CUSTOM_PIN_PLACEHOLDER",cls:"signature-form",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED",priority:0},{type:"maxLength",message:"shared.VALIDATION_TOO_LONG",priority:2},{type:"minLength",message:"shared.VALIDATION_TOO_SHORT",priority:1},{type:"pattern",message:"shared.VALIDATION_INVALID",priority:3}]}]},{type:"checkbox",key:"acknowledge",cls:"some-class",name:"acknowledge",alternate:"false",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_DECLARATION_CHECKBOX_LABEL",validate:[{type:"optional",message:"shared.VALIDATION_REQUIRED",expr:"data === true"}]}]},{id:"success-alert",type:"alert",hidden:!0,cls:"i9-print-box",dateTime:!0,alert:{type:"success",closeable:"false",title:"onboarding.I9_PAGE_REVIEW_AND_SIGN_SUCCESS_TITLE",icon:"check-circle"},fields:[{type:"div",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_SUCCESS_BRING_DOCUMENTATION",cls:"copy"},{type:"button-offsite",label:"onboarding.I9_COMMON_ACCEPTABLE_DOCUMENTATION",print:{label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_SUCCESS_PRINT_ACCEPTABLE_DOCUMENTS",cls:"hide i9-acceptable-document-url"},analytics:{event:"Button",category:"Onboarding",label:"I9 - review-and-sign - Success - See Document List"},modal:{buttons:{ok:"shared.OK",cancel:"shared.CANCEL"},id:"i9-modal-success",title:"onboarding.I9_COMMON_NEW_WINDOW",description:"onboarding.I9_COMMON_DOCUMENT_LIST_BUTTON_MODAL_DESCRIPTION",analytics:{close:{event:"Link",category:"Onboarding",label:"I9 - review-and-sign - SUCCESS - DOCUMENT_LIST - MODAL_CLOSE"},dismiss:{event:"Link",category:"Onboarding",label:"I9 - review-and-sign - SUCCESS - DOCUMENT_LIST - MODAL_DISMISS"}}}},{type:"confirmation-number",label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_SUCCESS_CONFIRMATION_NUMBER_LABEL",cls:"copy i9-confirmation-number",confirmationNumber:""},{type:"button",buttonType:"secondary",actionType:"print",cls:"i9-print-conf-btn",border:!0,label:"onboarding.I9_PAGE_REVIEW_AND_SIGN_SUCCESS_PRINT_CONFIRMATION_NUMBER",analytics:{category:"Onboarding",label:"I9 - review-and-sign - Print confirmation number",event:"Button"},action:function(){$window.print()}}]}]}}}]),angular.module("redbox.onboarding.i9").service("redbox.onboarding.i9.I9GetEventsService",["$http","$q","redbox.ext.shared.services.UserIdentityService",function($http,$q,userIdentity){
function userHasCompletedI9(force){return getI9Events(force).then(function(events){return{userHasCompletedI9:0===events.length}})}function getEventsAndMeta(force){return eventsAndMetaDeferred&&!force||(eventsAndMetaDeferred=$q.defer(),userIdentity.getAoid().then(function(AOID){$http.get(makeEventsAndMetaUri(AOID)).then(function(response){eventsAndMetaDeferred.resolve(_.get(response,"data"))}).catch(function(){eventsAndMetaDeferred.reject()})})),eventsAndMetaDeferred.promise}function getTransformsObject(meta){return meta&&angular.isArray(meta["/data/transforms"])&&meta["/data/transforms"][0]}function getAcceptableDocumentsUrl(){return getEventsAndMeta().then(function(eventsMeta){return eventsMeta.meta["/data/transforms"][0]["/usI9Screening/sectionOne/identityDocumentationIndicator"].helperMessage.links[0].href})}function getEI9Url(){return getEventsAndMeta().then(function(eventsMeta){return _.get(eventsMeta,"meta.links[0].href")})}function getI9Events(force){return getEventsAndMeta(force).then(function(eventsMeta){return eventsMeta.events})}function makeEventsAndMetaUri(AOID){var status="created";return"/events/hr/v1/worker.us-i9-screening.section1.complete?$filter=events/data/eventContext/usI9Screening/associateOID eq '"+AOID+"' and events/eventStatusCode/codeValue eq '"+status+"'&$expand=meta"}var eventsAndMetaDeferred;return{userHasCompletedI9:userHasCompletedI9,getEventsAndMeta:getEventsAndMeta,getTransformsObject:getTransformsObject,getAcceptableDocumentsUrl:getAcceptableDocumentsUrl,getEI9Url:getEI9Url}}]),angular.module("redbox.onboarding.i9").factory("redbox.onboarding.i9.I9InitialDataService",["redbox.onboarding.i9.I9DefaultPagesService","redbox.onboarding.i9.I9MetaTransformConstant","redbox.onboarding.i9.I9GetEventsService","redbox.shared.services.DataTransformService",function(I9DefaultPagesService,I9MetaTransformConstant,I9GetEventsService,DataTransformService){function getInitialPagesAndData(){return I9GetEventsService.getEventsAndMeta().then(function(eventsAndMeta){var toObject={data:{},pages:angular.copy(I9DefaultPagesService)};return DataTransformService.filterConstant(toObject,eventsAndMeta,["metaKeyArray","wizardKeyArray","metaToWizardTransform"],I9MetaTransformConstant),toObject})}return{getInitialPagesAndData:getInitialPagesAndData}}]),angular.module("redbox.onboarding.i9").factory("redbox.onboarding.i9.I9ModalService",["$language","adp.ng.ui.modal.adpModalService","redbox.onboarding.i9.I9GetEventsService",function($language,$adpModal,I9GetEventsService){function showUnsavedDataModal(){return triggerModalWithDefaults({title:$language.get("onboarding.I9_UNSAVED_DATA_MODAL_TITLE"),content:$language.get("onboarding.I9_UNSAVED_DATA_MODAL_DESCRIPTION")})}function showFullI9InstructionsModal(){return triggerModalWithDefaults({title:$language.get("onboarding.I9_FOOTER_ENTIRE_FORM_MODAL_TITLE"),content:$language.get("onboarding.I9_FOOTER_ENTIRE_FORM_MODAL_DESCRIPTION")})}function showPageInterceptModal(pageModalOptions){function processModal(modalOptions,url){var analytics=getFormattedAnalytics("I9 - "+currentPageKey+" - "+_.last(modalOptions.description.split("."))+" - MODAL_CONTENT");return angular.extend(modalOptions,{title:$language.get(pageModalOptions.title),content:$language.get(pageModalOptions.description,{url:url,analytics:analytics})}),modalOptions.closeLabel&&(modalOptions.closeLabel=$language.get(modalOptions.closeLabel)),triggerModalWithDefaults(modalOptions)}return"acceptable-documents"===pageModalOptions.urlType?I9GetEventsService.getAcceptableDocumentsUrl().then(function(acceptableDocumentsUrl){return processModal(pageModalOptions,acceptableDocumentsUrl)}):I9GetEventsService.getEI9Url().then(function(ei9Url){return processModal(pageModalOptions,ei9Url)})}function showErrorModal(){return I9GetEventsService.getAcceptableDocumentsUrl().then(function(acceptableDocumentsUrl){var analytics=getFormattedAnalytics("I9 - "+currentPageKey+" - I9_ERROR_DESCRIPTION - MODAL_CONTENT"),modalOptions={title:$language.get("onboarding.I9_ERROR_TITLE"),content:$language.get("onboarding.I9_ERROR_DESCRIPTION",{url:acceptableDocumentsUrl,analytics:analytics}),closeLabel:$language.get("onboarding.I9_ERROR_BUTTON_TEXT"),windowClass:"i9-opened-modal",type:"error"};return triggerModalWithDefaults(modalOptions)})}function showLoadingErrorModal(){var modal=$adpModal.open({title:$language.get("shared.OOPS_SOMETHING"),content:$language.get("shared.SERVICE_FAILURE_ERROR_MESSAGE"),closeLabel:$language.get("shared.CLOSE"),type:"error",closeable:!1,dismissButton:!1});return modal.result}function triggerModalWithDefaults(options){var defaults={closeLabel:$language.get("shared.OK"),dismissLabel:$language.get("shared.CANCEL"),size:"md",analytics:{close:{event:"Link",category:"Onboarding",label:"I9 - "+currentPageKey+" - MODAL_CLOSE"},dismiss:{event:"Link",category:"Onboarding",label:"I9 - "+currentPageKey+" - MODAL_DISMISS"}},windowClass:"i9-opened-modal"},modal=$adpModal.open(angular.extend(defaults,options));return modal.result}function getFormattedAnalytics(label){return'analytics-on="click" analytics-event="Link" analytics-category="Onboarding" analytics-label="'+label+'"'}function setCurrentPageKey(newCurrentPageKey){currentPageKey=newCurrentPageKey}var currentPageKey="";return{showUnsavedDataModal:showUnsavedDataModal,showFullI9InstructionsModal:showFullI9InstructionsModal,showPageInterceptModal:showPageInterceptModal,showErrorModal:showErrorModal,setCurrentPageKey:setCurrentPageKey,showLoadingErrorModal:showLoadingErrorModal}}]),angular.module("redbox.onboarding.i9").factory("redbox.onboarding.i9.I9PostDataService",["$http","$language","adp.ng.logging.LoggerFactory",function($http,$language,loggerFactory){function previewPost(data){var transform;return data=angular.copy(data),transform=getTransformFromData(data),transform.eventStatusCode={codeValue:"inprogress"},transform.usI9Screening.sectionOne.electronicSignature={signatureIndicator:!1},post(data).then(function(results){return{imageUrl:results.data.events[0].links[0].href}}).catch(function(error){return logger.error("Preview post error:",JSON.stringify(error)),{error:!0}})}function finalPost(data){var transform;return data=angular.copy(data),transform=getTransformFromData(data),transform.eventStatusCode={codeValue:"submit"},transform.usI9Screening.sectionOne.electronicSignature.signatureIndicator=!0,transform.usI9Screening.sectionOne.electronicSignature.signatureDate=moment().format("YYYY-MM-DD"),post(data).then(function(results){return{results:results}}).catch(function(error){return logger.error("Final post error:",JSON.stringify(error)),{error:!0}})}function post(data){var transform=getTransformFromData(data),uri="/events/hr/v1/worker.us-i9-screening.section1.complete/"+data.events.eventID;transform.usI9Screening.sectionOne.governmentID.nameCode={codeValue:"SSN"},transform.usI9Screening.sectionOne.address.countrySubdivisionLevel1.subdivisionType="state";var myData={events:[{eventID:data.events.eventID,data:data.events.data}]};return $http.post(uri,myData,{headers:{"Accept-Language":$language.use()}})}function getTransformFromData(data){return data.events.data.transform}var logger=loggerFactory.getLogger("redbox.onboarding.i9.I9PostDataService");return{previewPost:previewPost,finalPost:finalPost}}]),angular.module("redbox.onboarding.i9").factory("redbox.onboarding.i9.I9SubmissionService",["$timeout","$q","$language","redbox.onboarding.i9.I9GetEventsService","redbox.onboarding.i9.I9PostDataService","redbox.shared.services.DataTransformService","redbox.onboarding.i9.I9MetaTransformConstant","redbox.onboarding.common.imagePreload.ImagePreloadService",function($timeout,$q,$language,I9GetEventsService,I9PostDataService,DataTransformService,I9MetaTransformConstant,ImagePreloadService){function initialize(){successfullyPosted=!1,showLoadingIndicator=!1,i9PreviewImageUrl=void 0,i9PreviewImageObject=void 0}function cleanup(){$(".i9-print-box").remove()}function isLoading(){return showLoadingIndicator}function transformPreparer(toObject,data){var preparers=toObject.events.data.transform.usI9Screening.sectionOne.preparers=[];data.preparerTranslators.forEach(function(preparerTranslator){preparers.push({personName:{givenName:preparerTranslator.name.first,familyName1:preparerTranslator.name.last},address:{lineOne:preparerTranslator.address.street,cityName:preparerTranslator.address.city,unit:preparerTranslator.address.apartmentnumber,postalCode:preparerTranslator.address.zipcode,countrySubdivisionLevel1:{codeValue:preparerTranslator.address.state.value,subdivisionType:"state"},countryCode:"US"},electronicSignature:{signatureIndicator:!0,signatureDate:moment().format("YYYY-MM-DD")},relationshipTypeCode:{codeValue:preparerTranslator.relationship.value}})})}function ovsSiw(page,data){var toObject={};return showLoadingIndicator=!0,DataTransformService.filterConstant(toObject,{data:data},["wizardKeyArray","postKeyArray","wizardToPostTransform"],I9MetaTransformConstant),transformPreparer(toObject,data),I9PostDataService.previewPost(toObject).then(function(response){return response.error?(showLoadingIndicator=!1,$q.reject()):(i9PreviewImageUrl=response.imageUrl,ImagePreloadService.preloadImage({imageUrl:response.imageUrl}).then(function(imageObject){i9PreviewImageObject=imageObject,showLoadingIndicator=!1}))})}function ovsRas(page,data){var toObject={};return showLoadingIndicator=!0,DataTransformService.filterConstant(toObject,{data:data},["wizardKeyArray","postKeyArray","wizardToPostTransform"],I9MetaTransformConstant),transformPreparer(toObject,data),I9PostDataService.finalPost(toObject).then(function(response){var dateTime,pageFields=page.fields,reviewSection=_.find(pageFields,{key:"review"}),successSection=_.find(pageFields,{id:"success-alert"});return showLoadingIndicator=!1,response.error?$q.reject():(successfullyPosted=!0,dateTime=moment(response.results.data.events[0].creationDateTime).format("L LT"),createPrintConfirmation(dateTime),page.progress=100,reviewSection.hidden=!0,successSection.hidden=!1,page.displayCloseButtons=!0,_.find(successSection.fields,{type:"confirmation-number"}).confirmationNumber=response.results.data.events[0].data.output.usI9Screening.sectionOne.confirmationNumber,$q.when())})}function preshowSiw(page,data){showLoadingIndicator=!1}function preshowRas(page,data){var pageFields=page.fields,reviewSection=_.find(pageFields,{key:"review"}),signatureSection=_.find(reviewSection.fields,{key:"signatures"}),signatureSSN=_.find(signatureSection.fields,{key:"ssn"});_.find(pageFields,{type:"button-offsite"}).modal.url=i9PreviewImageUrl,signatureSSN.hidden||(_.find(_.find(signatureSSN.fields,{key:"lastName"}).validate,{type:"pattern"}).pattern="^"+data.name.last+"$",_.find(_.find(signatureSSN.fields,{key:"last4SSN"}).validate,{type:"pattern"}).pattern="^"+(data.ssn.value||"").substr(5)+"$")}function postshowSiw(page,data){}function postshowRas(page,data){showLoadingIndicator=!1,$timeout(function(){ImagePreloadService.appendTo(i9PreviewImageObject,".i9-preview"),$(".review-and-sign").addClass("review-and-sign-show")},0)}function createPrintConfirmation(dateTime){$timeout(function(){var $printBox=$(".i9-print-box").eq(0).find(".print-date-time").append(dateTime).addBack().clone().addClass("hide").appendTo("body");I9GetEventsService.getAcceptableDocumentsUrl().then(function(acceptableDocumentsUrl){var content=$language.get("onboarding.I9_PAGE_REVIEW_AND_SIGN_SUCCESS_PRINT_ACCEPTABLE_DOCUMENTS",{url:acceptableDocumentsUrl});$(".i9-acceptable-document-url",$printBox).html(content)})},500)}function hasSuccessfullyPosted(){return successfullyPosted}var showLoadingIndicator,i9PreviewImageUrl,i9PreviewImageObject,successfullyPosted;return initialize(),{initialize:initialize,cleanup:cleanup,isLoading:isLoading,onValidatedSubmit:{sensitiveInformationWarning:ovsSiw,reviewAndSign:ovsRas},preShow:{sensitiveInformationWarning:preshowSiw,reviewAndSign:preshowRas},postShow:{sensitiveInformationWarning:postshowSiw,reviewAndSign:postshowRas},hasSuccessfullyPosted:hasSuccessfullyPosted}}]),angular.module("redbox.onboarding.maps").controller("redbox.onboarding.maps.GoogleMapsCtrl",["redbox.onboarding.maps.OnboardingMapsService","redbox.onboarding.maps.GoogleMapsService",function(OnboardingMapsService,GoogleMapsService){var markers,vm=this;vm.config=OnboardingMapsService.getConfigObject(),vm.showPlaceOnMap=function(key,resetZoom){resetZoom&&vm.config.map.setZoom(vm.config.zoom),vm.config.gmap.event.trigger(vm.config.markersObject[key],"click")},vm.setActiveState=function(key){angular.forEach(vm.config.markersObject,function(v){v.active=!1}),key&&vm.config.markersObject[key]&&(vm.config.markersObject[key].active=!0)},vm.results={places:function(args){var currentCategory;angular.forEach(vm.config.placesTypes,function(v,category){currentCategory=_.find(args.nearbyPlaces,category)[category],vm.results.limit(currentCategory),vm.config.nearbyPlaces[category]=currentCategory,vm.results.markers(vm.config.nearbyPlaces[category],category,args)})},limit:function(currentCategory){(vm.config.tablet||vm.config.mobile)&&currentCategory.splice(10)},markers:function(places,category,args){angular.forEach(places,function(v,i){markers.init(v,i,v.place_id,category,args)})}},markers={init:function(place,index,placeId,category,args){var markerEventArgs,icon={url:place.icon,scaledSize:new vm.config.gmap.Size(25,25)},marker=GoogleMapsService.createMarker(args.map,place.geometry.location,icon),key="marker-"+category+"-"+index;vm.config.markersObject[key]=marker,markerEventArgs=GoogleMapsService.getMarkerEventArgs({marker:marker,map:args.map,iw:args.iw,key:key,placesService:args.placesService,placeId:placeId,cb:args.cb}),GoogleMapsService.createMarkerEvent(markerEventArgs)}}}]),angular.module("redbox.onboarding.maps").directive("obMapTabs",["$timeout",function($timeout){var link=function(scope,$el,attrs){function init(){var $tabs=$el.children("li"),$content=$el.next().children(".tab-content"),active=attrs.active&&$tabs.eq(attrs.active).length&&parseInt(attrs.active,10)||0;$el.addClass("ob-map-tabs"),$tabs.eq(active).addClass("active"),$content.eq(active).addClass("active"),event({$el:$el,$tabs:$tabs,$content:$content})}function event(args){var $tab;args.$el.on("click.ob.map.tabs",args.$tabs,function(e){e.preventDefault(),$tab=$(e.target),$tab.hasClass("active")||(args.$tabs.removeClass("active"),args.$content.removeClass("active"),$tab.addClass("active"),args.$content.eq($tab.index()).addClass("active"))})}$timeout(function(){init()},0)};return{link:link,restrict:"A"}}]),angular.module("redbox.onboarding.maps").directive("obMaps",["$window","$document","$timeout","redbox.onboarding.maps.GoogleMapsService","redbox.onboarding.maps.OnboardingMapsService","redbox.shared.constants.AppConstant",function($window,$document,$timeout,GoogleMapsService,OnboardingMapsService,appConstant){var compile=function($el){return $el.addClass("ob-google-maps"),link},link=function(scope,$el,attrs,ctrl){function scroller($content,scrollTop,speed){$content.animate({scrollTop:scrollTop},speed)}function showMap(){(isTablet||isMobile)&&$window.pageYOffset>0&&scroller($("html,body"),$(".map-container").offset().top-$(".ob-mobile-header").outerHeight(),400)}var geocoder,events,isMobile=$document.width()<=appConstant.smWidth,isTablet=!isMobile&&$document.width()<=appConstant.mdWidth;GoogleMapsService.getApiUri("gmap.init").then(function(api){$window.gmap={load:function(){var id="gmap-jsapi";return!document.getElementById(id)&&function(s){var js,gmjs=document.getElementsByTagName(s)[0];return js=document.createElement(s),js.id=id,js.src=api,gmjs.parentNode.insertBefore(js,gmjs),!0}("script")||$window.google&&$window.gmap.init()},init:function(){var gmap=$window.google.maps;geocoder=GoogleMapsService.createGeocoder(gmap),OnboardingMapsService.init(gmap,{geocoder:geocoder,events:events,ctrl:ctrl,el:$el[0],isMobile:isMobile,isTablet:isTablet})}},$window.gmap.load()}),events={click:{employerMarker:{init:function(args){return function(){events.click.employerMarker.setup(args)}},setup:function(args){ctrl.setActiveState(),args.map.setCenter(args.marker.getPosition()),this.infoWindow(args),showMap()},infoWindow:function(args){var iwContent,address=ctrl.config.employer.address.parts;iwContent='<div class="iw-container"><h4>'+ctrl.config.employer.name+'</h4><div data-ng-if="address.lineOne">'+address.lineOne+'</div><div data-ng-if="address.lineTwo">'+address.lineTwo+'</div><div data-ng-if="address.city || address.state || address.zip">'+(address.city&&address.city+" ")+(address.state&&address.state+" ")+(address.zip&&address.zip+" ")+"</div></div>",args.iw.setContent(iwContent),args.iw.open(args.map,args.marker),$timeout(function(){},0)}},placeMarker:{init:function(args){return function(){events.click.placeMarker.setup(args)}},setup:function(args){ctrl.setActiveState(args.key),args.map.setCenter(args.marker.getPosition()),args.iw.setContent("loading..."),args.iw.open(args.map,args.marker),this.handlePlacesList(args),this.infoWindow(args),showMap()},handlePlacesList:function(args){var tab=args.key.search(/tab1/)!==-1&&"tab1"||"tab2",$content=$("#map-tabs-content");$("#places-tab-"+tab).trigger("click"),scroller($content,$("#"+args.key).position().top+$content[0].scrollTop,400)},infoWindow:function(args){var address,iwContent;GoogleMapsService.getPlacesDetails(args.placesService,args.placeId).then(function(results){address=GoogleMapsService.parsePlaceDetailAddress(results.address_components),iwContent='<div class="iw-container"><h5><img src="'+results.icon+'">'+results.name+'</h5><div data-ng-if="address.number && address.street">'+address.number+" "+address.street+'</div><div data-ng-if="address.city || address.state || address.zip">'+(address.city&&address.city+" ")+(address.state&&address.state+" ")+(address.zip&&address.zip+" ")+"</div></div>",args.iw.setContent(iwContent)})}}}}};return{compile:compile,restrict:"A",controller:"redbox.onboarding.maps.GoogleMapsCtrl as GoogleMapsCtrl"}}]),angular.module("redbox.onboarding.maps").factory("redbox.onboarding.maps.GoogleMapsService",["$q","$timeout","$language","redbox.shared.services.ConfigService","adp.ng.logging.LoggerFactory",function($q,$timeout,$language,ConfigService,LoggerFactory){function getApiKey(){return ConfigService.get("googleKeyClientId").then(function(keyClientId){return keyClientId||""}).catch(function(e){return logger.error("Could not retrieve Google API key or client_id"),logger.error(e),$q.when("")})}function getApiUri(callback){return getApiKey().then(function(key){var lang=$language.getLocale().name.replace(/-US/,"");return GOOGLE_API_URL.replace(/{lang}/,lang).replace(/{callback}/,callback)+key})}function createGeocoder(googleMap){return gmap=googleMap,gmap&&new gmap.Geocoder}function getLatLng(geocoder,address){var deferred=$q.defer();return geocoder?geocoder.geocode({address:address},function(results,status){deferred.resolve("OK"===status&&results[0])}):deferred.reject("No geocoder reference was passed"),deferred.promise}function mapSetup(el,ctrl,events,latlng){var args,options=getMapOptions(ctrl.config.zoom,ctrl.config.radius,latlng,ctrl.config.mobile),places=getPlacesOptions(ctrl.config.places,ctrl.config.placesTypes),map=createMap(el,options),marker=createMarker(map,latlng),infoWindow=createInfoWindow(200),placesService=createPlacesService(map);ctrl.config.markersObject["marker-target-0"]=marker,ctrl.config.map=map,args={map:map,marker:marker,iw:infoWindow,places:places,placesService:placesService,options:options,ctrl:ctrl,events:events},mapImplementation(args)}function toRadians(degrees){return degrees*Math.PI/180}function getDistance(coordOne,coordTwo){var differenceLatitude,differenceLongitude,latitudeOne,latitudeTwo,angleDifferential,unitDistance,RADIUS=6371;return latitudeOne=toRadians(coordOne.lat()),latitudeTwo=toRadians(coordTwo.lat()),differenceLatitude=toRadians(coordTwo.lat()-coordOne.lat()),differenceLongitude=toRadians(coordTwo.lng()-coordOne.lng()),angleDifferential=Math.sin(differenceLatitude/2)*Math.sin(differenceLatitude/2)+Math.sin(differenceLongitude/2)*Math.sin(differenceLongitude/2)*Math.cos(latitudeOne)*Math.cos(latitudeTwo),unitDistance=2*Math.atan2(Math.sqrt(angleDifferential),Math.sqrt(1-angleDifferential)),RADIUS*unitDistance}function mapImplementation(args){var markerEventArgs,nearbySearchArgs,placesResultsArgs;markerEventArgs=getMarkerEventArgs({marker:args&&args.marker,map:args&&args.map,iw:args&&args.iw,cb:args&&args.events.click.employerMarker.init}),nearbySearchArgs=getNearbySearchArgs({center:args&&args.options.center,radius:args&&args.options.radius,places:args&&args.places,placesService:args&&args.placesService,timeout:args&&args.ctrl.config.placesTimeout}),placesResultsArgs=getPlacesResultsArgs({map:args&&args.map,iw:args&&args.iw,placesService:args&&args.placesService,ctrl:args&&args.ctrl,cb:args&&args.events.click.placeMarker.init}),createMapLoadedEvent(args.map,args.ctrl.config),createTimer(args),createMarkerEvent(markerEventArgs),$timeout(function(){gmap.event.trigger(args.marker,"click")},args.ctrl.config.placesTimeout),args&&args.options.center&&args.places.api&&args.places.types&&performNearbySearch(nearbySearchArgs).then(function(results){placesResultsArgs.nearbyPlaces=sortResults(results,args.options.center),handleNearbyPlacesResults(placesResultsArgs)})}function getMapOptions(zoom,radius,latlng,isMobile){return{zoom:zoom||14,radius:radius||5e4,center:latlng,panControl:!1,scaleControl:!1,mapTypeControl:!1,streetViewControl:!isMobile,zoomControl:!isMobile,zoomControlOptions:{style:gmap&&gmap.ZoomControlStyle.SMALL}}}function createMap(el,options){return gmap&&new gmap.Map(el,options)}function createMapLoadedEvent(map,config){return gmap&&gmap.event.addListenerOnce(map,"tilesloaded",function(){config.hasLoaded.map=!0,$timeout(function(){config.spinner=!config.hasLoaded.places},0)})}function getMarkerEventArgs(args){return{marker:args&&args.marker,map:args&&args.map,iw:args&&args.iw,key:args&&args.key,placesService:args&&args.placesService,placeId:args&&args.placeId,cb:args&&args.cb}}function createMarker(map,location,icon){return gmap&&new gmap.Marker({map:map,position:location||map.getCenter(),icon:icon||"",animation:gmap.Animation.DROP})}function createMarkerEvent(args){return gmap&&gmap.event.addListener(args.marker,"click",args.cb(args))}function createInfoWindow(maxWidth){return gmap&&new gmap.InfoWindow({maxWidth:maxWidth||380})}function getPlacesOptions(places,placesTypes){return{api:places===!0,types:places&&placesTypes}}function createPlacesService(map){return gmap&&new gmap.places.PlacesService(map)}function getNearbySearchArgs(args){return{center:args&&args.center,radius:args&&args.radius,places:args&&args.places,placesService:args&&args.placesService,timeout:args&&args.timeout}}function getPlacesResultsArgs(args){return{map:args&&args.map,iw:args&&args.iw,placesService:args&&args.placesService,ctrl:args&&args.ctrl,cb:args&&args.cb}}function handleNearbyPlacesResults(args){return args.ctrl.config.hasLoaded.places=!0,args.ctrl.config.spinner=!args.ctrl.config.hasLoaded.map,args.ctrl.results&&args.ctrl.results.places(args)}function sortResults(results,center){var tab1=_.forEach(results[0].tab1,function(place){place.distance=getDistance(center,place.geometry.location)}),tab2=_.forEach(results[1].tab2,function(place){place.distance=getDistance(center,place.geometry.location)});if(results[0].tab1.length>0)var tab1max=results[0].tab1.length<20?results[0].tab1.length:20;if(results[1].tab2.length>0)var tab2max=results[1].tab2.length<20?results[1].tab2.length:20;return[{tab1:_.sortBy(tab1,"distance").slice(0,tab1max)},{tab2:_.sortBy(tab2,"distance").slice(0,tab2max)}]}function performNearbySearch(args){var request={location:args.center,radius:args.radius},promises=[];return angular.forEach(args.places.types,function(groupPlaceTypes){angular.forEach(groupPlaceTypes,function(placeType){var deferred=$q.defer();promises.push(deferred.promise),$timeout(function(){var obj={};obj[placeType]=[],request.type=[placeType],args.placesService?args.placesService.nearbySearch(request,function(results,status){obj[placeType]=results,deferred.resolve("OK"===status&&obj)}):deferred.reject("No placesService reference was passed")},args.timeout)})}),$q.all(promises).then(function(responses){var placeTypeMap=[];_.forEach(responses,function(response){_.forEach(response,function(value,key){placeTypeMap[key]=value})});var obj={};angular.forEach(args.places.types,function(groupPlaceTypes,key){obj[key]=[],angular.forEach(groupPlaceTypes,function(placeType){obj[key]=obj[key].concat(placeTypeMap[placeType])})});var returnObj=[{tab1:obj.tab1},{tab2:obj.tab2}];return returnObj})}function getPlacesDetails(placesService,placeId){var deferred=$q.defer();return placesService?placesService.getDetails({placeId:placeId},function(results,status){deferred.resolve("OK"===status&&results)}):deferred.reject("No placesService reference was passed"),deferred.promise}function parsePlaceDetailAddress(parts){var address={};return angular.forEach(parts,function(v){address.number="street_number"===v.types[0]&&v.short_name||address.number||"",address.street="route"===v.types[0]&&v.short_name||address.street||"",address.city="locality"===v.types[0]&&v.short_name||address.city||"",address.state="administrative_area_level_1"===v.types[0]&&v.short_name||address.state||"",address.zip="postal_code"===v.types[0]&&v.short_name||address.zip||""}),address}function showError(config,flag){config.error=flag,config.spinner=!1}function createTimer(args){$timeout(function(){args.ctrl.config.hasLoaded.map&&args.ctrl.config.hasLoaded.places||showError(args.ctrl.config,!0)},args.ctrl.config.hasLoaded.timeout)}var gmap,GOOGLE_API_URL="https://maps.googleapis.com/maps/api/js?v=3&libraries=places&language={lang}&callback={callback}",logger=LoggerFactory.getLogger("redbox.onboarding.maps.GoogleMapsService");return{getApiKey:getApiKey,getApiUri:getApiUri,createGeocoder:createGeocoder,getLatLng:getLatLng,mapSetup:mapSetup,mapImplementation:mapImplementation,getMapOptions:getMapOptions,createMap:createMap,createMapLoadedEvent:createMapLoadedEvent,getMarkerEventArgs:getMarkerEventArgs,createMarker:createMarker,createMarkerEvent:createMarkerEvent,createInfoWindow:createInfoWindow,getPlacesOptions:getPlacesOptions,createPlacesService:createPlacesService,getNearbySearchArgs:getNearbySearchArgs,getPlacesResultsArgs:getPlacesResultsArgs,handleNearbyPlacesResults:handleNearbyPlacesResults,performNearbySearch:performNearbySearch,getDistance:getDistance,sortResults:sortResults,getPlacesDetails:getPlacesDetails,parsePlaceDetailAddress:parsePlaceDetailAddress,showError:showError,createTimer:createTimer}}]),angular.module("redbox.onboarding.maps").factory("redbox.onboarding.maps.OnboardingMapsService",["redbox.onboarding.maps.GoogleMapsService","redbox.onboarding.common.AddressParserService","redbox.onboarding.common.WorkerInstanceService","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory",function(GoogleMapsService,AddressParserService,WorkerInstanceService,ClientService,LoggerFactory){function getConfigObject(){return{employer:{address:{}},employee:{address:{}},worker:{},places:!0,placesTypes:{tab1:["restaurant","cafe","meal_delivery"],tab2:["gym","park","convenience_store"]},placesTimeout:1250,zoom:14,radius:5e4,spinner:!0,error:!1,markersObject:{},nearbyPlaces:{},mobile:!1,tablet:!1,hasLoaded:{map:!1,places:!1,timeout:1e4}}}function updateConfigObject(gmap,employer,employee,isMobile,isTablet,config){return config.gmap=gmap||{},config.mobile=isMobile,config.tablet=isTablet,config.employer.name=employer.name||"",config.employer.address.standard=employer.address.mailing,config.employer.address.search=employer.address.search,config.employer.address.parts=employer.address,config.employee.address.standard=employee.address.mailing,config.employee.address.search=employee.address.search,config.employee.address.parts=employee.address,config}function init(gmap,config){var obj=angular.extend({},config);ClientService.getClient().then(function(employer){WorkerInstanceService.getWorkerProfile().then(function(profile){initializeGoogleMaps(gmap,angular.extend(obj,{profile:profile,employer:employer}))}).catch(function(error){GoogleMapsService.showError(obj.ctrl.config,!0),logger.error("OB Maps Error: Call to `/hr/v2/workers/{aoid}` failed. Error returned: "+error)})}).catch(function(error){GoogleMapsService.showError(obj.ctrl.config,!0),logger.error("OB Maps Error: Call to getClient() failed. Error returned: "+error)})}function initializeGoogleMaps(gmap,args){args.ctrl.config=updateConfigObject(gmap,{name:args.employer.name,address:AddressParserService.parseEmployerAddress(args.profile)},{address:AddressParserService.parseEmployeeAddress(args.profile)},args.isMobile,args.isTablet,args.ctrl.config),GoogleMapsService.getLatLng(args.geocoder,args.ctrl.config.employer.address.standard).then(function(results){GoogleMapsService.mapSetup(args.el,args.ctrl,args.events,results.geometry.location)}).catch(function(error){GoogleMapsService.showError(args.ctrl.config,!0),logger.error("Onboarding Maps Error: "+error)})}var logger=LoggerFactory.getLogger("redbox.onboarding.maps.OnboardingMapsService");return{init:init,getConfigObject:getConfigObject,updateConfigObject:updateConfigObject}}]),angular.module("redbox.onboarding.navigation").controller("redbox.onboarding.navigation.NavigationCtrl",["$rootScope","$scope","$window","$state","$timeout","redbox.onboarding.template.TemplateService","redbox.onboarding.navigation.PositioningManagerService","redbox.onboarding.common.OnboardingService","redbox.onboarding.errorModal.ErrorModalService",function($rootScope,$scope,$window,$state,$timeout,TemplateService,PositioningManager,OnboardingService,ErrorModalService){function onInit(){var rootScopeWatch;vm.hideElements=!0,OnboardingService.getOnboardingStatus().then(function(onboardingStatus){vm.isRehire=onboardingStatus.rehire,vm.hasStarted=!onboardingStatus.preboarding}),TemplateService.getTemplate().then(function(response){handleTemplateApiUp(response),revealNavigation()}).catch(ErrorModalService.showErrorModal),positioningManager=new PositioningManager,rootScopeWatch=$rootScope.$watch(function(){positioningManager.setTotal(getMainContainer().outerHeight(!0),!1),positioningManager.setEach(_.map(getLinks(),function(x){return $(x).outerHeight(!0)}))}),angular.element($window).on("resize.onboarding.NavigationCtrl",function(){$timeout(function(){})}),initializeStateChangeWatchers(),$scope.$on("$destroy",function(){angular.element($window).off("resize.onboarding.NavigationCtrl"),rootScopeWatch()})}function revealNavigation(){$timeout(function(){obRevealed=!0,getObReveal().css("height",getMainContainer().outerHeight(!0)+10+"px"),$timeout(function(){getObReveal().css("overflow","visible")},500)},navigationRevealDelay)}function getNavigationRevealHeight(){return obRevealed?getMainContainer().outerHeight(!0):0}function getObReveal(){return obReveal=obReveal&&obReveal.length?obReveal:$(".ob-reveal")}function getPaddingHeight(){return positioningManager.getPadding()}function getIndicatorBlockHeight(){var currentIndex=TemplateService.currentStateIndex(currentState());return positioningManager.getPartial(currentIndex)}function getMainContainer(){return mainContainer=mainContainer&&mainContainer.length?mainContainer:$(".ob-view-container")}function getLinks(){return links=links&&links.length?links:$("a.ob-nav-link")}function currentState(){return $state.current.name}function showPreviousPageArrow(){return TemplateService.showPreviousPageArrow(currentState())}function showNextPageArrow(){return TemplateService.showNextPageArrow(currentState())}function nextPageExists(){return TemplateService.nextPageExists(currentState())}function previousPageExists(){return TemplateService.previousPageExists(currentState())}function gotoNextPage(){return!!nextPageExists()&&($state.go(TemplateService.nextPage(currentState())),!0)}function gotoPreviousPage(){
return!!previousPageExists()&&($state.go(TemplateService.previousPage(currentState())),!0)}function initializeStateChangeWatchers(){var stateChangeListener=$rootScope.$on("$stateChangeStart",function(evt,toState,toParams,fromState,fromParams){var direction=TemplateService.relativeState(toState.name,fromState.name),container=getMainContainer();$state.includes("onboarding")&&_.contains(toState.name,"onboarding")&&($(".stage").scrollTop(0),transitionEndEvent()),1===direction?(container.addClass("next-state"),container.removeClass("previous-state")):(container.addClass("previous-state"),container.removeClass("next-state"))});$scope.$on("$viewContentLoaded",function(){viewContentLoaded||(vm.transitionComplete=!0,viewContentLoaded=!0)}),$scope.$on("$destroy",function(){stateChangeListener()})}function transitionEndEvent(){var content=$('[ui-view="stepsMain"]');vm.transitionComplete=!1,$window.Modernizr.csstransitions?content.bind("transitionend webkitTransitionEnd",function(){vm.transitionComplete=!0,$timeout(function(){},0)}):vm.transitionComplete=!0}function handleTemplateApiUp(template){vm.template=template,vm.hideElements=!1}var mainContainer,links,positioningManager,obReveal,vm=this,obRevealed=!1,navigationRevealDelay=800,viewContentLoaded=!1;vm.template=void 0,vm.errorModalIsOpen=ErrorModalService.isModalOpen,vm.positioning={getPaddingHeight:getPaddingHeight,getIndicatorBlockHeight:getIndicatorBlockHeight,getNavigationRevealHeight:getNavigationRevealHeight},vm.nav={nextPageExists:nextPageExists,previousPageExists:previousPageExists,gotoNextPage:gotoNextPage,gotoPreviousPage:gotoPreviousPage,showPreviousPageArrow:showPreviousPageArrow,showNextPageArrow:showNextPageArrow,stateActive:$state.includes},onInit()}]),angular.module("redbox.onboarding.navigation").directive("obMobileNav",["$document",function($document){return{restrict:"EA",transclude:!0,template:'<i class="ob-mobile-nav-toggle brand-primary-color fa fa-ellipsis-h"></i><ng-transclude class="ob-mobile-nav-container"></ng-transclude>',link:function(scope,elem,attrs){var $toggle,$menu,dragging=!1;$toggle=elem.children().eq(0),$menu=elem.children().eq(1),$toggle.on("click.ob.mobile.nav",function(e){$menu.toggleClass("ob-mobile-nav-show"),e.stopPropagation()}),$document.on("touchmove.ob.mobile.nav",function(event){dragging=!0}),$document.on("touchstart.ob.mobile.nav",function(event){dragging=!1}),$document.on("click.ob.mobile.nav touchend.ob.mobile.nav",function(event){var clickWasTriggeredInMenu=elem.find(event.target).length>0,isCurrentlySelectedMenuItem=$(event.target).hasClass("active");dragging||clickWasTriggeredInMenu&&!isCurrentlySelectedMenuItem||$menu.removeClass("ob-mobile-nav-show")}),scope.$on("$destroy",function(){$document.off("click.ob.mobile.nav touchstart.ob.mobile.nav touchmove.ob.mobile.nav touchend.ob.mobile.nav"),$toggle.off("click.ob.mobile.nav")})}}}]),angular.module("redbox.onboarding.navigation").factory("redbox.onboarding.navigation.PositioningManagerService",[function(){function PositioningManager(each,total){this.each=each||[],this.total=total||0,this.cached={},this.recalculate()}function partialSums(array){var returnArray=[],totalHeight=_.reduce(array,function(partialSum,item){return returnArray.push(partialSum),partialSum+item},0);return returnArray.push(totalHeight),returnArray}return PositioningManager.prototype.recalculate=function(){var padding,partials=partialSums(this.each);this.each&&this.each.length>1?(padding=(this.total-partials[partials.length-1])/(this.each.length-1),padding=padding<0?0:padding):padding=0,this.cached={padding:padding,partials:partials}},PositioningManager.prototype.setEach=function(newEach,shouldRecalculate){this.each=newEach,(void 0===shouldRecalculate||shouldRecalculate)&&this.recalculate()},PositioningManager.prototype.setTotal=function(newTotal,shouldRecalculate){this.total=newTotal,(void 0===shouldRecalculate||shouldRecalculate)&&this.recalculate()},PositioningManager.prototype.getPadding=function(){return this.cached.padding},PositioningManager.prototype.getPartial=function(n){return n===this.cached.partials.length-1?void 0:this.cached.partials&&this.cached.partials.length>1?this.cached.partials[n]+n*this.cached.padding:void 0},PositioningManager}]),angular.module("redbox.onboarding.socialRelationships").factory("redbox.onboarding.socialRelationships.NotificationRequestService",["$http",function($http){function sendNotification(message){return $http.post("/events/core/v1/social-relationship-notification-request.add",buildPayload(message))}function buildPayload(message){return{actor:{associateOID:message.actorAoid},originator:{associateOID:message.originatorAoid},data:{transform:{notificationRequest:{subject:message.subject,messageText:message.body,recipients:[{associateOID:message.recipientAoid}]}}}}}return{sendNotification:sendNotification}}]),angular.module("redbox.onboarding.socialRelationships").constant("redbox.onboarding.socialRelationships.RELATIONSHIPS_CONSTANT",{ONBOARDING_TEAM:"onboarding.team",ONBOARDING_BUDDY:"onboarding.buddy"}).factory("redbox.onboarding.socialRelationships.SocialRelationshipsService",["$q","$http","adp.ng.logging.LoggerFactory","redbox.onboarding.socialRelationships.RELATIONSHIPS_CONSTANT",function($q,$http,LoggerFactory,RELATIONSHIPS){function getOnboardingTeamFor(aoid){return getAoidsForSocialRelationships(aoid,RELATIONSHIPS.ONBOARDING_TEAM)}function getOnboardingBuddyFor(aoid){return getAoidsForSocialRelationships(aoid,RELATIONSHIPS.ONBOARDING_BUDDY).then(function(aoidArray){return aoidArray[0]})}function saveOnboardingTeamFor(aoid,aoids){return getSocialRelationships(aoid,RELATIONSHIPS.ONBOARDING_TEAM).then(function(originalTeamData){var originalTeam=extractAoids(aoid,originalTeamData),aoidsToAssign=_.difference(aoids,originalTeam),relationsToRemove=_.filter(originalTeamData.socialRelationships,function(relation){return!_.includes(aoids,relation.sourceParty.associateOID)}),itemIDsToRemove=_.map(relationsToRemove,"itemID");return unassignRelationships(_.compact(itemIDsToRemove)).then(function(){assignAoids(aoid,aoidsToAssign,RELATIONSHIPS.ONBOARDING_TEAM)})})}function saveOnboardingBuddyFor(aoid,targetAoid){return unassignOnboardingBuddyFor(aoid).then(function(){return assignAoids(aoid,[targetAoid],RELATIONSHIPS.ONBOARDING_BUDDY)})}function unassignOnboardingBuddyFor(aoid){return getSocialRelationships(aoid,RELATIONSHIPS.ONBOARDING_BUDDY).then(function(relationships){var itemIDsToRemove=_.map(relationships.socialRelationships,"itemID");return unassignRelationships(_.compact(itemIDsToRemove))})}function getAoidsForSocialRelationships(aoid,relationship){return getSocialRelationships(aoid,relationship).then(function(data){return extractAoids(aoid,data)}).catch(function(err){var msg="Failed getting "+relationship+" for "+aoid;return logger.error(msg,err),$q.reject(msg)})}function getSocialRelationships(aoid,relationship){var url="/redboxapi/hr/v1/associates/"+aoid+"/social-relationships?$filter=socialRelationships/relationshipTypeCode/codeValue eq '"+relationship+"'";return $http.get(url).then(filterResponseByTargetParty.bind(void 0,aoid))}function filterResponseByTargetParty(aoid,response){var relationships=_.filter(response.data.socialRelationships,function(relation){return aoid===relation.targetParty.associateOID});return{socialRelationships:relationships}}function extractAoids(aoid,data){var sources=_.map(data.socialRelationships,"sourceParty.associateOID");return _.without(sources,aoid)}function unassignRelationships(itemIDs){if(_.size(itemIDs)>0){var events=_.map(itemIDs,function(id){return{data:{eventContext:{socialRelationship:{itemID:id}}}}});return $http.post("/redboxapi/events/hr/v1/socialRelationship.unassign",{events:events})}return $q.when()}function assignAoids(aoid,aoids,relationship){var data={events:createEventsForPost(relationship,aoid,aoids)};return aoids.length>0?$http.post("/redboxapi/events/hr/v1/socialRelationship.assign",data):$q.when()}function createEventsForPost(relationship,aoid,sourceAoids){var events=[];return _.forEach(sourceAoids,function(sourceAoid){var event={data:{eventContext:{targetParty:{associateOID:aoid}},transform:{socialRelationship:{relationshipTypeCode:{codeValue:relationship},targetParty:{associateOID:aoid},sourceParty:{associateOID:sourceAoid}}}}};events.push(event)}),events}var logger=LoggerFactory.getLogger("redbox.onboarding.socialRelationships.SocialRelationshipsService");return{getOnboardingTeamFor:getOnboardingTeamFor,saveOnboardingTeamFor:saveOnboardingTeamFor,getOnboardingBuddyFor:getOnboardingBuddyFor,saveOnboardingBuddyFor:saveOnboardingBuddyFor,unassignOnboardingBuddyFor:unassignOnboardingBuddyFor}}]),angular.module("redbox.onboarding.steps.about").constant("redbox.onboarding.steps.about.tasks.AboutTasksConstant",[{id:"personal-info",step:"about",displayOptions:{heading:"onboarding.ABOUT_PERSONAL_INFO_TILE_HEADING",button:"shared.VERIFY",contents:"onboarding.ABOUT_PERSONAL_INFO_TILE_CONTENTS",requirement:{due:"onboarding.ONBOARDING_GENERICS_DUE"},icon:"fa-user"},display:{type:"slidein",parameters:{contentTemplate:"app/onboarding/modules/steps/about/views/personal-info-slidein-wrapper.html"}}},{id:"status",step:"about",displayOptions:{heading:"onboarding.ABOUT_TILE_STATUS_HEADING",contents:"onboarding.ABOUT_TILE_STATUS_CONTENTS",button:"shared.ADD",icon:"fa-comment"},optional:!0,showOptionalText:!0,display:{type:"controller",controller:"redbox.onboarding.steps.about.EditStatusSlideinCtrl as EditStatusSlideinCtrl",methods:["EditStatusSlideinCtrl","openEditStatusSlidein"]}}]),angular.module("redbox.onboarding.steps.about").controller("redbox.onboarding.steps.about.AboutCtrl",["$scope","redbox.onboarding.common.WorkerInstanceService","redbox.onboarding.steps.about.tasks.AboutTasksService",function($scope,WorkerInstanceService,AboutTasksService){function init(){getWorker(!0),loadTasks(),WorkerInstanceService.workerLoader=getWorker}function getWorker(bustCache){return currentWorkerService.get(bustCache).then(function(){vm.worker=currentWorkerService.worker,$scope.worker=vm.worker,vm.workflow=currentWorkerService.workflow}).finally(function(){vm.loading=!1})}function loadTasks(){return AboutTasksService.getTasks(!0).then(function(tasks){vm.tasks=tasks,vm.manyTasks=tasks.length})}var currentWorkerService=WorkerInstanceService.getWorkerServiceInstance(),vm=this;angular.extend(vm,{loading:!0,tasks:void 0,workerService:currentWorkerService}),init()}]),angular.module("redbox.onboarding.steps.about").controller("redbox.onboarding.steps.about.EditStatusSlideinCtrl",["$scope","adp.ng.ui.slidein.FocusSlideIn","redbox.ext.shared.services.UserIdentityService",function($scope,$slidein,UserIdentityService){function openEditStatusSlidein(config){function clearListeners(){saveListener&&saveListener(),closeListener&&closeListener()}var saveListener,closeListener,slideIn,newConfig=angular.extend({contentTemplate:"app/onboarding/modules/steps/about/views/edit-status-slidein.html",scope:$scope},config),prefixEvent=newConfig.prefixEvent;saveListener=$scope.$on("close-tile-what-i-do",function(){slideIn&&slideIn.hide(),clearListeners()}),closeListener=$scope.$on(prefixEvent+".hide",function(){clearListeners()}),UserIdentityService.getAoid().then(function(aoid){$scope.worker={},$scope.worker.associateOID=aoid,slideIn=$slidein(newConfig)})}var vm=this;vm.openEditStatusSlidein=openEditStatusSlidein}]),angular.module("redbox.onboarding.steps.about").controller("redbox.onboarding.steps.about.PersonalInfoSlideinCtrl",["$scope","redbox.onboarding.common.WorkerInstanceService","redbox.onboarding.tasks.TaskStatesConstant",function($scope,WorkerInstanceService,TaskStatesConstant){function confirmPersonalInfo(){WorkerInstanceService.personalInfoTileData.completed=TaskStatesConstant.COMPLETED}function isPersonalInfoConfirmed(){return WorkerInstanceService.personalInfoTileData.completed===TaskStatesConstant.COMPLETED}var vm=this;vm.workerService=WorkerInstanceService.getWorkerServiceInstance(),vm.dataLoading=!1,vm.confirmPersonalInfo=confirmPersonalInfo,vm.isPersonalInfoConfirmed=isPersonalInfoConfirmed,$scope.$on("worker-profile-refresh",function(event){vm.dataLoading=!0,WorkerInstanceService.workerLoader(!0).finally(function(){vm.dataLoading=!1})}),$scope.$on("adp-meta-form-processing",function(event,msg){msg&&(vm.dataLoading=msg.processing)})}]),angular.module("redbox.onboarding.steps.about.tasks").factory("redbox.onboarding.steps.about.tasks.AboutTasksService",["redbox.onboarding.steps.about.tasks.AboutTasksConstant","redbox.onboarding.tasks.TasksService",function(AboutTasksConstant,TasksService){return new TasksService(AboutTasksConstant)}]),angular.module("redbox.onboarding.steps.about.tasks.tiles").factory("redbox.onboarding.steps.about.tasks.tiles.PersonalInfoTileService",["$q","redbox.onboarding.common.WorkerInstanceService","redbox.onboarding.template.TemplateService",function($q,WorkerInstanceService,TemplateService){function getTile(){function handleFail(){return $q.when({completed:void 0})}return workerService.get().then(function(){return workerService.worker?TemplateService.getTemplate().then(function(template){return{completed:_.find(template.pages,{key:"about"}).status}}):handleFail()},handleFail)}function setTileState(tile,data){switch(tile.enabled=!0,WorkerInstanceService.personalInfoTileData||(WorkerInstanceService.personalInfoTileData=data),WorkerInstanceService.personalInfoTileData.completed){case"completed":tile.completed=!0;break;case"incomplete":tile.completed=!1;break;default:tile.completed=void 0}tile.completed?(tile.displayOptions.button="shared.EDIT",tile.displayOptions.analytics="onboarding.about.status.edit"):(tile.displayOptions.button="shared.VERIFY",tile.displayOptions.analytics="onboarding.about.status.verify")}var workerService=WorkerInstanceService.getWorkerServiceInstance();return{getTile:getTile,setTileState:setTileState}}]),angular.module("redbox.onboarding.steps.about.tasks.tiles").factory("redbox.onboarding.steps.about.tasks.tiles.StatusTileService",["$q","redbox.shared.services.NaturalLanguageFormService","redbox.ext.shared.services.UserIdentityService","redbox.ext.shared.services.UserPreferenceService",function($q,NaturalLanguageFormService,UserIdentityService,UserPreferencesService){function getTile(){var deferred=$q.defer();return UserIdentityService.getAoid().then(function(aoid){NaturalLanguageFormService.getFormattedUserForm(aoid,"whatIDo").then(function(form){deferred.resolve(form)}).catch(function(){deferred.resolve(!1)})}),deferred.promise}function setTileState(tile,data){tile=tile||{},isStatusEnabled().then(function(isEnabled){tile.enabled=isEnabled}),data?(tile.completed=!0,tile.displayOptions.button="shared.EDIT",tile.displayOptions.analytics="onboarding.about.status.edit"):(tile.completed=!1,tile.displayOptions.button="shared.ADD",tile.displayOptions.analytics="onboarding.about.status.add")}function isStatusEnabled(){return UserPreferencesService.getPreferences().then(function(preferences){return!_.get(preferences,"disallowStatusUpdate.value",!1)})}return{getTile:getTile,setTileState:setTileState}}]),angular.module("redbox.onboarding.steps.done").controller("redbox.onboarding.steps.done.DoneCtrl",["$q","$state","redbox.onboarding.steps.done.DoneService","redbox.ext.shared.services.SessionService","redbox.onboarding.template.TemplateService","redbox.onboarding.tasks.TaskStatesConstant",function($q,$state,DoneService,SessionService,TemplateService,TaskStatesConstant){function onInit(){$q.all({isEmployeeEnrolledInBenefits:DoneService.isEmployeeEnrolledInBenefits(),isBeforeStartDate:DoneService.isBeforeStartDate(),profile:DoneService.getEmployeeName(),isRehire:DoneService.isRehire()}).then(function(results){var isBeforeStartDate=results.isBeforeStartDate,isEnrolledInBenefits=results.isEmployeeEnrolledInBenefits,isRehire=results.isRehire;vm.employeeName=_.get(results,"profile.person.legalName.givenName",""),vm.showDashboardButton=shouldShowDashboardButton(isEnrolledInBenefits,isBeforeStartDate,isRehire),vm.showLogoutButton=shouldShowLogoutButton(isBeforeStartDate,isRehire),vm.showBenefitsButton=shouldShowBenefitsButton(isEnrolledInBenefits,isBeforeStartDate)}),toggleDoneTitles()}function goToBenefits(){$state.go("benefits.index")}function logout(){SessionService.logout()}function shouldShowDashboardButton(isEnrolledInBenefits,isBeforeStartDate,isRehire){return isRehire&&!shouldShowBenefitsButton(isEnrolledInBenefits,isBeforeStartDate)||!isEnrolledInBenefits&&!isBeforeStartDate}function shouldShowLogoutButton(isBeforeStartDate,isRehire){return isBeforeStartDate&&!isRehire}function shouldShowBenefitsButton(isEnrolledInBenefits,isBeforeStartDate){return isEnrolledInBenefits&&!isBeforeStartDate}function toggleDoneTitles(){TemplateService.getTemplate().then(function(template){var pages=template.pages;_.forEach(pages,function(page,key){page.status===TaskStatesConstant.COMPLETED&&"welcome"!==page.key&&"done"!==page.key?vm.hasCompletedPage=!0:page.status===TaskStatesConstant.INCOMPLETE&&"done"!==page.key&&"welcome"!==page.key&&(vm.hasIncompletedPage=!0)})})}var vm=this;angular.extend(vm,{hasCompletedPage:!1,hasIncompletedPage:!1,goToBenefits:goToBenefits,logout:logout}),onInit()}]),angular.module("redbox.onboarding.steps.done").service("redbox.onboarding.steps.done.DoneEvaluatorService",["redbox.onboarding.template.TemplateService",function(TemplateService){function callback(){return TemplateService.getTemplate().then(function(result){var i;for(i=0;i<result.pages.length;i++)if(result.pages[i].key!==DONE_KEY&&"completed"!==result.pages[i].status)return!1;return!0})}var DONE_KEY="done";return{callback:callback}}]),angular.module("redbox.onboarding.steps.done").factory("redbox.onboarding.steps.done.DoneService",["$injector","adp.ng.logging.LoggerFactory","redbox.onboarding.common.StartDateService","redbox.onboarding.common.WorkerInstanceService","redbox.ext.shared.services.UserPermissionService",function($injector,loggerFactory,StartDateService,WorkerInstanceService,UserPermissionService){function isEmployeeEnrolledInBenefits(){return hasBenefits().then(function(employeeHasBenefits){if(employeeHasBenefits){var EnrollmentService=$injector.get("redbox.benefits.enrollment.service.EnrollmentService");return EnrollmentService.getEvents().then(function(data){return data.openBenefitEvents.length>0})}return!1})}function isBeforeStartDate(){return StartDateService.isBeforeStartDate()}function getEmployeeName(){return WorkerInstanceService.getWorkerProfile().catch(function(error){logger.error("Call failed in getting Employees name",error)})}function hasBenefits(){return UserPermissionService.init().then(function(){return UserPermissionService.hasBenefits()})}function isRehire(){return StartDateService.isRehire()}var logger=loggerFactory.getLogger("redbox.onboarding.steps.done.DoneService");return{isEmployeeEnrolledInBenefits:isEmployeeEnrolledInBenefits,isBeforeStartDate:isBeforeStartDate,getEmployeeName:getEmployeeName,isRehire:isRehire}}]),angular.module("redbox.onboarding.steps.neighborhood").controller("redbox.onboarding.steps.neighborhood.NeighborhoodCtrl",[function(){}]),angular.module("redbox.onboarding.steps.paperwork").constant("redbox.onboarding.steps.paperwork.tasks.PaperworkTasksConstant",[{id:"i9",step:"paperwork",displayOptions:{heading:"onboarding.PAPERWORK_TILE_I9_HEADING",button:"onboarding.ONBOARDING_GENERICS_FILL_OUT",contents:"onboarding.PAPERWORK_TILE_I9_CONTENTS_PENDING",contentsCompleted:"onboarding.PAPERWORK_TILE_I9_CONTENTS_COMPLETED",requirement:{due:"onboarding.ONBOARDING_GENERICS_DUE"},icon:"fa-file-text-o"},display:{type:"modal",parameters:{keyboard:!1,backdrop:!1,size:"full-screen",fullscreenTheme:"light",footer:!1,contentUrl:"app/onboarding/modules/steps/paperwork/views/i9.html",windowClass:"i9-wizard-modal",controller:"redbox.onboarding.i9.I9WizardCtrl as I9WizardCtrl"}}},{id:"tax-withholdings",step:"paperwork",displayOptions:{heading:"onboarding.PAPERWORK_TILE_TAX_WITHHOLDINGS_HEADING",contents:"onboarding.PAPERWORK_TILE_TAX_WITHHOLDINGS_CONTENTS",button:"onboarding.ONBOARDING_GENERICS_FILL_OUT",icon:"fa-bank"},display:{type:"controller",controller:"redbox.pay.TaxWithholdingCtrl as TaxWithholdingCtrl",methods:["TaxWithholdingCtrl","openOnboardingTaxSlide"],parameters:{backButton:"shared.BACK"}}},{id:"company-policies",step:"paperwork",displayOptions:{heading:"onboarding.PAPERWORK_TILE_COMPANY_POLICIES_HEADING",contents:"onboarding.PAPERWORK_TILE_COMPANY_POLICIES_CONTENTS",button:"shared.REVIEW",requirement:{due:"onboarding.ONBOARDING_GENERICS_DUE",day:"onboarding.ONBOARDING_GENERICS_DAY"},icon:"fa-files-o"},display:{type:"controller",controller:"redbox.company.policies.PolicyCtrl as PolicyCtrl",methods:["PolicyCtrl","viewAllPolicies"],parameters:{backButton:"shared.BACK"}}},{id:"direct-deposit",step:"paperwork",displayOptions:{heading:"onboarding.PAPERWORK_TILE_DIRECT_DEPOSIT_HEADING",contents:"onboarding.PAPERWORK_TILE_DIRECT_DEPOSIT_CONTENTS",icon:"adp-fa-icon-pay"},optional:!0,showOptionalText:!1,display:{type:"controller",controller:"redbox.pay.directDeposit.DirectDepositTileCtrl as DirectDepositTileCtrl",methods:["DirectDepositTileCtrl","openDirectDepositSlide"],parameters:{backButton:"shared.BACK"}}},{id:"emergency-contacts",step:"paperwork",displayOptions:{heading:"onboarding.PAPERWORK_TILE_EMERGENCY_CONTACTS_HEADING",contents:"onboarding.PAPERWORK_TILE_EMERGENCY_CONTACTS_CONTENTS",icon:"fa-medkit"},display:{type:"slidein",parameters:{contentTemplate:"app/onboarding/modules/steps/paperwork/views/emergency-contacts.html"}}}]),angular.module("redbox.onboarding.steps.paperwork").controller("redbox.onboarding.steps.paperwork.PaperworkCtrl",["redbox.onboarding.steps.paperwork.tasks.PaperworkTasksService",function(PaperworkTasksService){function loadTasks(){return vm.loadingTasks=!0,PaperworkTasksService.getTasks(!0).then(function(tasks){vm.tasks=tasks}).finally(function(){vm.loadingTasks=!1})}var vm=this;angular.extend(vm,{tasks:void 0,loadingTasks:!1,loadingProgress:PaperworkTasksService.getLoadingProgress}),loadTasks()}]),angular.module("redbox.onboarding.steps.paperwork.tasks").factory("redbox.onboarding.steps.paperwork.tasks.PaperworkTasksService",["redbox.onboarding.steps.paperwork.tasks.PaperworkTasksConstant","redbox.onboarding.tasks.TasksService",function(PaperworkTasksConstant,TasksService){return new TasksService(PaperworkTasksConstant)}]),angular.module("redbox.onboarding.steps.paperwork.tasks.tiles").factory("redbox.onboarding.steps.paperwork.tasks.tiles.CompanyPoliciesTileService",["$language","$q","redbox.company.policies.PolicyEmployeeService","redbox.onboarding.common.StartDateService","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant",function($language,$q,PolicyEmployeeService,StartDateService,userPermissionService,sffo){function getTile(args){var startDate,policies,deferred=$q.defer(),companyPolicies={};return userPermissionService.init().then(function(){var userHasCompanyPoliciesPermission=userPermissionService.hasPermission(sffo.workerInformationManagement.policyManagement.policyAcknowledgementManagement);return userHasCompanyPoliciesPermission?(startDate=StartDateService.getStartDate(),policies=getCompanyPolicies({refetch:args&&args.refetch}),$q.all({startDate:startDate.catch(function(){return!1}),policies:policies}).then(function(result){result.policies.all&&result.policies.all.length>0?(companyPolicies.single=1===result.policies.all.length||!1,companyPolicies.toAcknowledge=result.policies.unAckCount,companyPolicies.dueDate=getDueDate(result.policies.all)):companyPolicies.doNotShow=!0,deferred.resolve(companyPolicies)}).catch(deferred.reject),deferred.promise):$q.when({doNotShow:!0})})}function setTileState(tile,companyPolicies){return tile=tile||{},tile.displayOptions=tile.displayOptions||{},tile.error=companyPolicies.error,companyPolicies.error?(tile.enabled=!0,tile.displayOptions.dueDate=void 0,tile.completed=void 0,void(tile.displayOptions.toComplete=void 0)):companyPolicies.doNotShow===!0?void(tile.enabled=!1):(tile.enabled=!0,companyPolicies.single?(tile.displayOptions.button="shared.VIEW",tile.displayOptions.analytics="onboarding.company.policies.view"):(tile.displayOptions.button="onboarding.ONBOARDING_GENERICS_VIEW_ALL",tile.displayOptions.analytics="onboarding.company.policies.view.all"),void(companyPolicies.toAcknowledge<=0?(tile.completed=!0,tile.displayOptions.toComplete=void 0,tile.displayOptions.dueDate=void 0):(tile.completed=!1,tile.displayOptions.toComplete=companyPolicies.toAcknowledge,tile.displayOptions.dueDate=companyPolicies.dueDate&&moment(companyPolicies.dueDate).locale($language.getLocale().getLanguage()).format("LL")||"")))}function getDueDate(policies){var i,dueDates=[];for(i=0;i<policies.length;i++)!policies[i].acknowledgedIndicator&&policies[i].acknowledgementRequiredIndicator&&policies[i].acknowledgementDueDate&&dueDates.push(moment(new Date(policies[i].acknowledgementDueDate)));return dueDates.length>0&&moment.min(dueDates)||""}function getCompanyPolicies(args){return PolicyEmployeeService.fetchPolicies({refetch:args.refetch}).then(function(){return{all:PolicyEmployeeService.getEmployeePolicies(),unAckCount:PolicyEmployeeService.getEmployeeUnackPolicyCount()}}).catch(function(e){$q.reject(e)})}return{getTile:getTile,setTileState:setTileState}}]),angular.module("redbox.onboarding.steps.paperwork.tasks.tiles").factory("redbox.onboarding.steps.paperwork.tasks.tiles.DirectDepositTileService",["redbox.pay.directDeposit.DirectDepositService","redbox.pay.PayPermissionService",function(DirectDepositService,PayPermissionService){function setTileState(tile,tileConfig){tile=tile||{},tile.displayOptions=tile.displayOptions||{},tile.display=tile.display||{},tile.enabled=tileConfig.tileEnabled,tile.error=tileConfig.error,tileConfig.tileEnabled&&!tileConfig.error&&(tileConfig.directDepositComplete?(tile.completed=!0,tile.displayOptions.button="shared.EDIT",tile.displayOptions.analytics="onboarding.direct.deposit.edit"):(tile.completed=!1,tile.displayOptions.button="onboarding.PAPERWORK_TILE_DIRECT_DEPOSIT_ADD_ACCOUNT",tile.displayOptions.analytics="onboarding.direct.deposit.add"))}function getTile(){return PayPermissionService.canViewDirectDeposit().then(function(canViewDirectDeposit){return canViewDirectDeposit?DirectDepositService.accountExistsOrPending().then(function(directDepositAccountExists){return{tileEnabled:!0,error:!1,directDepositComplete:directDepositAccountExists}}).catch(function(){return{tileEnabled:!0,error:!0}}):{tileEnabled:!1}})}return{getTile:getTile,setTileState:setTileState}}]),angular.module("redbox.onboarding.steps.paperwork.tasks.tiles").factory("redbox.onboarding.steps.paperwork.tasks.tiles.EmergencyContactsTileService",["redbox.connections.contacts.ContactsService","redbox.ext.shared.services.UserIdentityService",function(ContactsService,UserIdentityService){function getTile(){return UserIdentityService.getAoid().then(function(aoid){return ContactsService.getContacts(aoid,{lazyLoadDetails:!0})})}function setTileState(tile,data){return tile=tile||{},tile.displayOptions=tile.displayOptions||{},tile.display=tile.display||{},tile.enabled=!0,tile.error=data.error,data.error?void(tile.completed=void 0):void(data.hasOwnProperty("pendingAction")||!_.isEmpty(data.personalContacts)?(tile.displayOptions.button="shared.EDIT",tile.displayOptions.analytics="onboarding.emergency.contacts.review",tile.completed=!0):(tile.displayOptions.button="onboarding.PAPERWORK_TILE_EMERGENCY_CONTACTS_ADD_CONTACT",tile.displayOptions.analytics="onboarding.emergency.contacts.add.contact",tile.completed=!1))}return{getTile:getTile,setTileState:setTileState}}]),angular.module("redbox.onboarding.steps.paperwork.tasks.tiles").factory("redbox.onboarding.steps.paperwork.tasks.tiles.I9TileService",["$q","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.constants.SFFOConstant","redbox.onboarding.i9.I9GetEventsService","redbox.onboarding.common.StartDateService",function($q,userPermissionService,sffo,I9GetEventsService,StartDateService){function getTile(){return userPermissionService.init().then(function(){return $q.all({rehireFlag:StartDateService.isRehire(),completedI9:I9GetEventsService.userHasCompletedI9(),hasI9Permission:userPermissionService.hasPermission(sffo.workerInformationManagement.workerManagement.employmentEligibilityManagement)}).then(function(userI9Status){return userI9Status.completedI9.userHasCompletedI9&&userI9Status.rehireFlag?$q.when({doNotShow:!0}):userI9Status.hasI9Permission?I9GetEventsService.userHasCompletedI9(!0):$q.when({doNotShow:!0})})})}function setTileState(tile,data){tile=tile||{},tile.displayOptions=tile.displayOptions||{},tile.display=tile.display||{},tile.error=data.error,data.error?(tile.enabled=!0,tile.completed=void 0):(tile.enabled=!data.doNotShow,data.userHasCompletedI9?I9GetEventsService.getAcceptableDocumentsUrl().then(function(acceptableDocumentsUrl){tile.completed=!0,tile.displayOptions.contents=tile.displayOptions.contentsCompleted,tile.displayOptions.button="onboarding.I9_COMMON_ACCEPTABLE_DOCUMENTATION",tile.displayOptions.display=tile.displayOptions.display||{},tile.display.type="newWindow",tile.display.newWindowUrl=acceptableDocumentsUrl,tile.displayOptions.analytics="onboarding.i9.view"}):(setDueDate(tile),tile.completed=!1,tile.displayOptions.analytics="onboarding.i9.fill.out"))}function setDueDate(tile){StartDateService.getFormattedStartDate().then(function(formattedStartDate){tile.displayOptions.dueDate=formattedStartDate})}return{getTile:getTile,setTileState:setTileState}}]),angular.module("redbox.onboarding.steps.paperwork.tasks.tiles").factory("redbox.onboarding.steps.paperwork.tasks.tiles.TaxWithholdingsTileService",["redbox.pay.FederalWithholdingService","redbox.pay.PayPermissionService",function(FederalWithholdingService,PayPermissionService){function setTileState(tile,tileConfig){tile=tile||{},tile.displayOptions=tile.displayOptions||{},tile.display=tile.display||{},tile.enabled=tileConfig.tileEnabled,tileConfig.tileEnabled&&(tile.error=tileConfig.federalWithholding.error,_.get(tileConfig,"federalWithholding.hasCompletedFederalWithholding",!1)?(tile.completed=!0,tile.displayOptions.analytics="onboarding.tax.withholdings.review",tile.displayOptions.button="shared.EDIT"):(tile.completed=!1,tile.displayOptions.analytics="onboarding.tax.withholdings.fill.out",tile.displayOptions.button="onboarding.ONBOARDING_GENERICS_FILL_OUT"))}function getTile(){return PayPermissionService.canViewFederalTaxWithholding().then(function(canViewFederalTaxWithholding){return canViewFederalTaxWithholding?getFederalWithholdingStatus().then(function(federalWithholdingStatus){return{tileEnabled:!0,federalWithholding:federalWithholdingStatus}}):{tileEnabled:!1}})}function getFederalWithholdingStatus(){return FederalWithholdingService.federalElectionsExistOrPending({refetch:!0}).then(function(hasCompletedFederal){return{error:!1,hasCompletedFederalWithholding:hasCompletedFederal}}).catch(function(){return{error:!0}})}return{getTile:getTile,setTileState:setTileState}}]),angular.module("redbox.onboarding.steps.team").controller("redbox.onboarding.steps.team.OBCarouselCtrl",["$scope","redbox.framework.ArrayNavigator.ArrayNavigatorService",function($scope,ArrayNavigatorService){function shouldShowPageIndicators(){var arrayLength=vm.arrayNavigator.getLength();return arrayLength<pageLimit&&arrayLength>1}var currentIndex,vm=this,pageLimit=vm.options.pageLimit||6;angular.extend(vm,{shouldShowPageIndicators:shouldShowPageIndicators}),$scope.$watch(function(){return vm.items.length},function(){currentIndex=vm.arrayNavigator&&vm.arrayNavigator.getCurrentIndex()||0,vm.arrayNavigator=new ArrayNavigatorService.ArrayNavigator(vm.items,currentIndex)})}]).component("obCarousel",{controller:"redbox.onboarding.steps.team.OBCarouselCtrl as OBCarouselCtrl",templateUrl:"app/onboarding/modules/steps/team/components/ob-carousel/ob-carousel.html",bindings:{items:"<",
options:"<",carouselTitle:"@"}}),angular.module("redbox.onboarding.steps.team").controller("redbox.onboarding.steps.team.TeamCtrl",["$q","redbox.ext.shared.services.UserIdentityService","redbox.onboarding.team.TeamService","redbox.connections.worker.WorkerService",function($q,UserIdentityService,TeamService,WorkerService){function getTeam(aoid){return TeamService.getOnboardingTeamForEmployee(aoid)}function getBuddy(aoid){return TeamService.getOnboardingBuddyForEmployee(aoid)}function getManagerTitle(manager){var workerServiceInstance=new WorkerService(_.assign({href:"/hr/v2/workers/"+manager.aoid},defaultConfig));workerServiceInstance.get().then(function(profile){_.set(manager,"attrs.title",_.get(profile,"workAssignments[0].jobCode.longName")),vm.managerLoaded=!0,vm.manager.push(manager)})}var vm=this,defaultConfig={workflowEnabled:!0,masked:!1};angular.extend(vm,{manager:[],team:[],buddy:[],teamLoaded:!1,managerLoaded:!1,buddyLoaded:!1,hasBuddy:!1,carouselOptions:{size:"md"}}),UserIdentityService.getAoid().then(function(aoid){return $q.all({team:getTeam(aoid),buddy:getBuddy(aoid)}).then(function(result){if(result.buddy&&(vm.hasBuddy=!0,vm.buddy=[result.buddy],result.team.length>1&&result.buddy.aoid===result.team[0].aoid)){var firstValue=result.team.shift();result.team.push(firstValue)}vm.teamLoaded=!0,vm.team=result.team}).finally(function(){vm.buddyLoaded=!0})}),TeamService.getOnboardingManagerForEmployee().then(function(manager){getManagerTitle(manager)})}]),angular.module("redbox.onboarding.steps.team").controller("redbox.onboarding.steps.team.OBTeamSlideinCtrl",["$scope","adp.ng.ui.slidein.FocusSlideIn","redbox.ext.shared.services.UserIdentityService","redbox.onboarding.team.TeamService",function($scope,FocusSlideIn,UserIdentityService,TeamService){function getTeam(aoid){return TeamService.getOnboardingTeamForEmployee(aoid)}function isTeamLoaded(){return teamLoaded}function viewAllTeamMembers(){FocusSlideIn({scope:$scope,contentTemplate:"app/onboarding/modules/steps/team/views/team-all.html"})}var vm=this,teamLoaded=!1;angular.extend(vm,{team:[],isTeamLoaded:isTeamLoaded,viewAllTeamMembers:viewAllTeamMembers}),UserIdentityService.getAoid().then(getTeam).then(function(result){vm.team=result,teamLoaded=!0})}]),angular.module("redbox.onboarding.steps.welcome").component("adpManagerWelcomeMessage",{bindings:{employerName:"<"},controller:"redbox.onboarding.steps.welcome.ManagerWelcomeCtrl",controllerAs:"managerWelcomeMessageCtrl",templateUrl:"app/onboarding/modules/steps/welcome/components/manager-welcome-message/manager-welcome-message-component.html"}).controller("redbox.onboarding.steps.welcome.ManagerWelcomeCtrl",["$q","$language","redbox.onboarding.steps.welcome.WelcomeMessageService","redbox.onboarding.common.WorkerInstanceService","redbox.onboarding.common.StartDateService",function($q,$language,WelcomeMessageService,WorkerInstanceService,StartDateService){function onInit(){$q.all({manager:WorkerInstanceService.getWorkerManager(),message:WelcomeMessageService.getWelcomeMessage(),isRehire:StartDateService.isRehire()}).then(function(result){vm.managerAoid=_.get(result.manager,"associateOID"),vm.managerFullName=parseFullName(_.get(result.manager,"reportsToWorkerName.formattedName")),vm.managerFirstName=parseFullName(_.get(result.manager,"reportsToWorkerName.formattedName"),!0),setWelcomeMessage(result.message,result.isRehire)}).catch(function(){setWelcomeMessage()})}function setWelcomeMessage(customMessage,isRehire){customMessage&&customMessage.trim().length>0?vm.welcomeMessage=customMessage:isRehire?vm.welcomeMessage=$language.get("connections.COMPANY_WELCOME_MESSAGE_REHIRE"):vm.welcomeMessage=$language.get("connections.COMPANY_WELCOME_MESSAGE")}function parseFullName(name,first){if(name){var names=name.split(",");return first?names[1].split(" ")[0]:names[1]+" "+names[0]}}var vm=this;angular.extend(vm,{managerAoid:void 0,managerFirstName:void 0,managerFullName:void 0,welcomeMessageTitle:$language.get("connections.NEWHIRE_WIZARD_WELCOME_MESSAGE_DEFAULT_TITLE"),managerWelcomeMessageTitle:$language.get("onboarding.WELCOME_MESSAGE_MESSAGE"),$onInit:onInit})}]),angular.module("redbox.onboarding.steps.welcome").controller("redbox.onboarding.steps.welcome.WelcomeStepsCtrl",["$language","redbox.onboarding.template.TemplateService",function($language,TemplateService){function getWelcomeStepsClass(pages){var vals={1:"12",2:"6",3:"4",4:"3"},stepsCount=pages.length;return stepsCount>4?"col-sm-3":"col-sm-"+vals[stepsCount]}function welcomeScreenFilter(page){return page.welcomeScreen&&page.welcomeScreen.show}var vm=this;angular.extend(vm,{welcomeStepsHeader:$language.get("onboarding.WELCOME_STEPS_HEADER")}),TemplateService.getTemplate().then(function(template){vm.pages=_.filter(template.pages,welcomeScreenFilter),vm.welcomeStepsClass=getWelcomeStepsClass(vm.pages)})}]).component("obWelcomeSteps",{controller:"redbox.onboarding.steps.welcome.WelcomeStepsCtrl",controllerAs:"welcomeStepsCtrl",templateUrl:"app/onboarding/modules/steps/welcome/components/ob-welcome-steps/ob-welcome-steps-component.html"}),angular.module("redbox.onboarding.steps.welcome").controller("redbox.onboarding.steps.welcome.WelcomeCtrl",["adp.ng.logging.LoggerFactory","redbox.onboarding.steps.welcome.WelcomeGreetingService","redbox.onboarding.common.WorkerInstanceService","redbox.onboarding.common.AddressParserService","redbox.onboarding.errorModal.ErrorModalService",function(LoggerFactory,WelcomeGreetingService,WorkerInstanceService,AddressParserService,errorModal){var vm=this,logger=LoggerFactory.getLogger("redbox.onboarding.steps.welcome.WelcomeCtrl");angular.extend(vm,{employerAddress:{},employerName:void 0,greeting:void 0,greetingKey:{},welcomeMessage:void 0}),WelcomeGreetingService.getGreetingText().then(function(results){vm.employerName=results.employerName,vm.greeting=results.greeting,vm.greetingKey={company:results.employerName,startDate:results.startDate}}),WorkerInstanceService.getWorkerProfile().then(function(profile){vm.employerAddress=AddressParserService.parseEmployerAddress(profile)}).catch(function(){logger.error("Call to getWorkerProfile() failed in employerAddress section."),errorModal.showErrorModal()})}]),angular.module("redbox.onboarding.steps.welcome").controller("redbox.onboarding.steps.welcome.WelcomeHeaderCtrl",["$scope","redbox.onboarding.steps.welcome.WelcomeGreetingService",function($scope,WelcomeGreetingService){$scope.heading="WELCOME_HEADING_INITIAL",$scope.subheading="WELCOME_SUBHEADING_INITIAL",WelcomeGreetingService.getHeaderText().then(function(results){$scope.heading=results.heading,$scope.headingKey=results,$scope.subheading=results.subheading,$scope.subheadingKey=results})}]),angular.module("redbox.onboarding.steps.welcome").factory("redbox.onboarding.steps.welcome.WelcomeGreetingService",["$q","redbox.shared.services.ClientService","redbox.onboarding.common.WorkerInstanceService","redbox.onboarding.common.StartDateService","adp.ng.logging.LoggerFactory",function($q,ClientService,WorkerInstanceService,StartDateService,LoggerFactory){function getHeaderText(){return WorkerInstanceService.getWorkerProfile().then(handleHeader).catch(function(error){return logger.error("Some call failed in getHeaderText()",error),{heading:"WELCOME_HEADING_FALLBACK",subheading:"WELCOME_SUBHEADING_FALLBACK"}})}function getGreetingText(){var promises={client:ClientService.getClient(),workerProfile:WorkerInstanceService.getWorkerProfile()};return $q.all(promises).then(handleGreeting).catch(function(error){return logger.error("Call to getClient() or getWorkerProfile() failed in getGreetingText(): "+error),{greeting:{welcome:"WELCOME_GREETING_VIDEO_COMPANY_NAME_FALLBACK",content:"WELCOME_GREETING_VIDEO_PRE_DAY1_FALLBACK"}}})}function handleHeader(results){var profile=results;return $q.all({startDate:StartDateService.getStartDate(),client:ClientService.getClient()}).then(function(insideResults){var heading,subheading,name=profile.person&&profile.person.legalName&&profile.person.legalName.givenName,employerName=insideResults.client.name,startDate=insideResults.startDate.format("MMMM Do, YYYY");return heading=employerName&&name?"WELCOME_HEADING_WITH_COMPANY_AND_EMPLOYEE_NAME":employerName?"WELCOME_HEADING_WITH_COMPANY_NAME":name?"WELCOME_HEADING_WITH_EMPLOYEE_NAME":"WELCOME_HEADING_FALLBACK",subheading=insideResults.startDate.isSame(moment(0))?"WELCOME_SUBHEADING_FALLBACK":moment().isBefore(insideResults.startDate,"day")?"WELCOME_SUBHEADING_WITH_START_DATE_BEFORE":"WELCOME_SUBHEADING_WITH_START_DATE_ON_OR_AFTER",{heading:heading,employerName:employerName,name:name,subheading:subheading,startDate:startDate}})}function handleGreeting(theResults){return $q.all({profileDate:StartDateService.getStartDate(),formattedStartDate:StartDateService.getFormattedStartDate(),daysUntilStart:StartDateService.getDaysUntilStart(),hasVideo:ClientService.hasOnboardingVideo()}).then(function(results){var clientResponse=theResults.client,hasVideo=results.hasVideo,employerName=clientResponse.name||"",required=employerName&&results.profileDate,isBeforeFirstDay=required&&results.daysUntilStart>0&&"WELCOME_GREETING_PRE_DAY1",isAfterFirstDay=required&&results.daysUntilStart<=0&&"WELCOME_GREETING_POST_DAY1",greeting=isBeforeFirstDay||isAfterFirstDay,startDate=results.formattedStartDate;return hasVideo&&(greeting={welcome:employerName?"WELCOME_GREETING_VIDEO_COMPANY_NAME":"WELCOME_GREETING_VIDEO_COMPANY_NAME_FALLBACK",content:"WELCOME_GREETING_VIDEO_WATCH"},results.daysUntilStart>0&&(greeting.content=startDate?"WELCOME_GREETING_VIDEO_PRE_DAY1":"WELCOME_GREETING_VIDEO_PRE_DAY1_FALLBACK")),{employerName:employerName,startDate:startDate,greeting:greeting}})}var logger=LoggerFactory.getLogger("redbox.onboarding.steps.welcome.WelcomeGreetingService");return{getHeaderText:getHeaderText,getGreetingText:getGreetingText}}]),angular.module("redbox.onboarding.steps.welcome").factory("redbox.onboarding.steps.welcome.WelcomeMessageService",["$q","redbox.onboarding.template.TemplateService","redbox.ext.shared.services.UserIdentityService",function($q,TemplateService,UserIdentityService){function getWelcomeMessage(aoid,bustCache){var myDeferred;return aoid&&deferredWelcomeMessage[aoid]&&!bustCache?deferredWelcomeMessage[aoid].promise:aoid?(myDeferred=deferredWelcomeMessage[aoid]=$q.defer(),TemplateService.getUserTemplate(aoid,bustCache).then(extractMessage).then(function(message){myDeferred.resolve(message)}).catch(function(){myDeferred.reject()}),myDeferred.promise):UserIdentityService.getAoid().then(function(usersAoid){return getWelcomeMessage(usersAoid,bustCache)})}function hasWelcomeMessage(aoid,bustCache){return getWelcomeMessage(aoid,bustCache).then(function(message){return message&&" "!==message})}function extractMessage(template){var welcomePage=template.steps&&template.steps.welcome;return welcomePage&&welcomePage.associate&&welcomePage.associate.message&&welcomePage.associate.message.value||void 0}function saveWelcomeMessage(aoid,message){return TemplateService.postUserTemplate("welcome",{message:message},aoid)}var deferredWelcomeMessage={};return{getWelcomeMessage:getWelcomeMessage,saveWelcomeMessage:saveWelcomeMessage,hasWelcomeMessage:hasWelcomeMessage}}]),angular.module("redbox.onboarding.steps.welcomevideo").controller("redbox.onboarding.steps.welcomevideo.WelcomeVideoCtrl",["redbox.shared.services.ClientService",function(ClientService){var vm=this;ClientService.getClient().then(function(client){vm.videoSrc=_.get(client,"videos.onboarding.url","")})}]),angular.module("redbox.onboarding.steps.whatwedo").controller("redbox.onboarding.steps.whatwedo.ObCompanyNewsCtrl",["$scope","$language","adp.ng.ui.slidein.FocusSlideIn","redbox.onboarding.steps.whatwedo.CompanyNewsConstant",function($scope,$language,$slidein,constant){function viewAllNews(){var config={};angular.extend(config,{scope:{news:vm.newsAll},contentTemplate:constant.COMPANY_TEMPLATES.NEWS_ALL}),openSlidein(config)}function openNewsItem(){var config={};angular.extend(config,{scope:{selectedIndex:0,news:vm.newsAll,selectedNews:vm.newsArticle},contentTemplate:constant.COMPANY_TEMPLATES.NEWS}),openSlidein(config)}function openSlidein(config){var scope=$scope.$new();angular.extend(scope,_.get(config,"scope")),$slidein({scope:scope,contentTemplate:config.contentTemplate,backButton:config.backButtonText||$language.get("onboarding.TITLE_WHATWEDO")})}var vm=this;angular.extend(vm,{viewAllNews:viewAllNews,openNewsItem:openNewsItem})}]).constant("redbox.onboarding.steps.whatwedo.CompanyNewsConstant",{COMPANY_TEMPLATES:{NEWS:"app/company/modules/news/views/company-news.html",NEWS_ALL:"app/company/modules/news/views/company-news-all.html"}}),angular.module("redbox.onboarding.steps.whatwedo").component("obCompanyNewsArticle",{bindings:{newsArticle:"<",newsAll:"<"},controller:"redbox.onboarding.steps.whatwedo.ObCompanyNewsCtrl",controllerAs:"obcompanynewsCtrl",templateUrl:"app/onboarding/modules/steps/whatwedo/components/ob-company-news/ob-company-news-component.html"}),angular.module("redbox.onboarding.steps.whatwedo").controller("redbox.onboarding.steps.whatwedo.WhatwedoCtrl",["$q","$language","adp.ng.logging.LoggerFactory","redbox.shared.services.ClientService","redbox.company.news.CompanyNewsService","redbox.onboarding.steps.whatwedo.WhatwedoConstant",function($q,$language,LoggerFactory,ClientService,CompanyNewsService,constant){function getBio(bioResult){var bio=_.get(bioResult,"content");bio&&vm.content.push({text:bio,title:constant.COMPANY_BIO,order:3})}function getNews(newsResult){if(newsResult.length){var newsTrimmed=_.slice(newsResult,0,constant.NEWS_LIMIT);newsTrimmed.forEach(function(item){item.smallImage=getImage(item),item.displayPublicationDateTime=formatDate(item.publicationDateTime)}),newsTrimmed[0].title=constant.COMPANY_NEWS,newsTrimmed[0].order=1,vm.content.push(newsTrimmed[0])}}function getVideo(videoResult){var video=_.get(videoResult,"videos.company.url");video&&vm.content.push({url:video,title:constant.COMPANY_VIDEO,order:2})}function getImage(item){return item.images&&_.find(item.images,function(image){return"s"===image.sizeCode}).imageUri.href}function formatDate(date){return moment(date).format("LL")}function sortAllContent(){moreThanOneItem&&vm.content.sort(function(a,b){return a.order-b.order})}function previous(){vm.pointer>0&&moreThanOneItem&&vm.pointer--,setLabels()}function next(){vm.pointer<vm.content.length-1&&moreThanOneItem&&(vm.pointer++,setLabels())}function setLabels(){moreThanOneItem&&(0===vm.pointer?(vm.previousLabel=!1,vm.nextLabel=vm.content[vm.pointer+1].title):vm.pointer===vm.content.length-1?(vm.previousLabel=vm.content[vm.pointer-1].title,vm.nextLabel=!1):(vm.previousLabel=vm.content[vm.pointer-1].title,vm.nextLabel=vm.content[vm.pointer+1].title))}function goToPointer(val){val>=0&&val<vm.content.length&&(vm.pointer=val,setLabels())}var companyBio,companyNews,companyVideo,vm=this,logger=LoggerFactory.getLogger("redbox.onboarding.steps.whatwedo.WhatwedoCtrl"),locale=$language.getLocale().name,moreThanOneItem=!1;angular.extend(vm,{loadingIndicator:!0,error:!1,shouldShowReadMoreBio:!1,content:[],pointer:0,previous:previous,previousLabel:"",next:next,nextLabel:"",goToPointer:goToPointer}),companyBio=ClientService.getCompanyBio(locale),companyVideo=ClientService.getClient(),companyNews=CompanyNewsService.getList().then(function(list){return list?list:(logger.error("No news items returned from ClientService"),$q.reject())}),$q.all({companyBio:companyBio,companyNews:companyNews,companyVideo:companyVideo}).then(function(results){getBio(results.companyBio),getNews(results.companyNews),getVideo(results.companyVideo),vm.newsAll=results.companyNews}).catch(function(){vm.error=!0}).finally(function(){0===vm.content.length?vm.error=!0:vm.content.length>1&&(moreThanOneItem=!0,vm.nextLabel=vm.content[vm.pointer].title),sortAllContent(),vm.constant=constant,vm.loadingIndicator=!1})}]).constant("redbox.onboarding.steps.whatwedo.WhatwedoConstant",{COMPANY_TEMPLATES:{NEWS:"app/company/modules/news/views/company-news.html",NEWS_ALL:"app/company/modules/news/views/company-news-all.html"},COMPANY_NEWS:"company.COMPANY_NEWS",COMPANY_BIO:"company.DASHBOARD_BIO",COMPANY_VIDEO:"company.DASHBOARD_VIDEO",NEWS_LIMIT:1}),angular.module("redbox.onboarding.steps.whatwedo").component("obCompanyStep",{controller:"redbox.onboarding.steps.whatwedo.WhatwedoCtrl",controllerAs:"WhatwedoCtrl",templateUrl:"app/onboarding/modules/steps/whatwedo/views/whatwedo.html"}),angular.module("redbox.onboarding.tasks").component("obTaskCard",{bindings:{task:"<"},templateUrl:"app/onboarding/modules/tasks/components/task-card/task-card-component.html",controllerAs:"TaskCardCtrl"}),angular.module("redbox.onboarding.tasks").constant("redbox.onboarding.tasks.TaskStatesConstant",{COMPLETED:"completed",INCOMPLETE:"incomplete",ERROR:"error"}),angular.module("redbox.onboarding.tasks").service("redbox.onboarding.tasks.TaskEvaluatorServiceGenerator",["$q",function($q){function TaskEvaluatorServiceGenerator(TasksService){function setup(notifyStateService){return teardown(),clearTasksListenerFunction=TasksService.addListener(notifyStateService),$q.when()}function callback(){return TasksService.areAllTasksComplete()}function teardown(){angular.isFunction(clearTasksListenerFunction)&&clearTasksListenerFunction()}var clearTasksListenerFunction;return{setup:setup,teardown:teardown,callback:callback}}return TaskEvaluatorServiceGenerator}]),angular.module("redbox.onboarding.tasks").factory("redbox.onboarding.tasks.TaskService",["$injector","redbox.onboarding.display.DisplayService","redbox.onboarding.tasks.TaskStatesConstant",function($injector,DisplayService,TaskStates){function Task(config,onUpdateCallback){var privateData=config||{};init(privateData,onUpdateCallback),update(privateData),angular.extend(this,{showDetails:showDetails.bind(this,privateData),shouldShowDueDate:shouldShowDueDate.bind(this,privateData),getId:getId.bind(this,privateData),getDisplayOptions:getDisplayOptions.bind(this,privateData),isCompleted:isCompleted.bind(this,privateData),isOptional:isOptional.bind(this,privateData),showOptionalText:showOptionalText.bind(this,privateData),isEnabled:isEnabled.bind(this,privateData),getState:getState.bind(this,privateData),STATES:TaskStates})}function showDetails(privateData){DisplayService.open(privateData.display,update.bind(this,privateData))}function shouldShowDueDate(privateData){return shouldDisplayDate(privateData)}function getId(privateData){return privateData.id}function getDisplayOptions(privateData){return privateData.displayOptions}function isOptional(privateData){return privateData.optional}function showOptionalText(privateData){return privateData.showOptionalText}function isCompleted(privateData){return privateData.completed}function isEnabled(privateData){return privateData.enabled}function getState(privateData){return privateData.error?TaskStates.ERROR:privateData.completed?TaskStates.COMPLETED:TaskStates.INCOMPLETE}function init(privateData,onUpdateCallback){privateData.displayOptions=privateData.displayOptions||{},privateData.tileService=$injector.get(tileServicePrefix+privateData.step+".tasks.tiles."+toUpperCamelCase(privateData.id)+"TileService"),privateData.onUpdateCallback=angular.isFunction(onUpdateCallback)?onUpdateCallback:angular.noop}function update(privateData){privateData.displayOptions.loading=!0,privateData.tileService.getTile({refetch:!0}).then(function(data){privateData.tileService.setTileState(privateData,data)}).catch(function(e){privateData.tileService.setTileState(privateData,{error:!0,message:e})}).finally(function(){privateData.displayOptions.loading=!1,privateData.onUpdateCallback()})}function shouldDisplayDate(privateData){return privateData.displayOptions.dueDate&&!privateData.completed&&!privateData.optional&&!privateData.error}function toUpperCamelCase(str){return _.map(str.split("-"),upperCaseFirstCharacter).join("")}function upperCaseFirstCharacter(str){return str[0].toUpperCase()+str.substring(1)}var tileServicePrefix="redbox.onboarding.steps.";return Task}]),angular.module("redbox.onboarding.tasks").factory("redbox.onboarding.tasks.TasksService",["$q","redbox.onboarding.tasks.TaskService","redbox.onboarding.tasks.TaskStatesConstant",function($q,Task,TaskStates){function TaskService(tasksConstant){function getTasks(force){var tasks=[],taskLoadingPromises=[];return deferredTasks&&!force||(deferredTasks=$q.defer(),tasksLoaded=0,calculatetasksLoadedPercent(),tasksConstant.forEach(function(taskData){var task,taskUpdateCallback,callbackCalledOnce=!1,taskDeferred=$q.defer();taskLoadingPromises.push(taskDeferred.promise),taskUpdateCallback=function(){callbackCalledOnce||(taskDeferred.resolve(),tasksLoaded++,calculatetasksLoadedPercent()),notifyListeners()},task=new Task(taskData,taskUpdateCallback),tasks.push(task)}),$q.all(taskLoadingPromises).then(function(){deferredTasks.resolve(_.filter(tasks,function(task){return task.isEnabled()}))})),deferredTasks.promise}function areAllTasksComplete(){return getTasks().then(function(tasks){var errorFound=!1,incompleteFound=!1;return _.forEach(tasks,function(task){var state=task.getState();if(state!==TaskStates.COMPLETED&&!task.isOptional())return state!==TaskStates.ERROR?(incompleteFound=!0,!1):void(errorFound=!0)}),!incompleteFound&&(!errorFound||$q.reject("Could not retrieve completed status for all required paperwork tasks."))})}function calculatetasksLoadedPercent(){loadingProgress=Math.round(tasksLoaded/totalTasks*100)+"%"}function getLoadingProgress(){return loadingProgress}function notifyListeners(){_.forEach(listeners,function(cb){angular.isFunction(cb)&&cb()})}function addListener(cb){var listenerIndex;return listeners=listeners||[],listeners.push(cb),listenerIndex=listeners.length-1,function(){listeners[listenerIndex]=null}}var deferredTasks,listeners=[],tasksLoaded=0,totalTasks=tasksConstant.length,loadingProgress="0%";return{getTasks:getTasks,areAllTasksComplete:areAllTasksComplete,addListener:addListener,getLoadingProgress:getLoadingProgress}}return TaskService}]),angular.module("redbox.onboarding.team").factory("redbox.onboarding.team.EmployeeService",["$q","redbox.shared.services.NaturalLanguageFormService","redbox.onboarding.socialRelationships.SocialRelationshipsService","redbox.connections.worker.WorkerService","redbox.onboarding.socialRelationships.NotificationRequestService","redbox.onboarding.common.StartDateService",function($q,FormService,SocialService,WorkerService,NotificationRequestService,StartDateService){function Employee(attrs){var workerServiceInstance,workerProfilePromise,getManagerPromise;if(!attrs)throw new Error("attrs is a required parameter");if(!attrs.aoid)throw new Error("attrs.aoid is a required parameter");this.aoid=attrs.aoid,this.attrs=attrs,this.attrs.selected=!1,workerServiceInstance=new WorkerService(_.assign({href:"/hr/v2/workers/"+attrs.aoid},defaultConfig)),this.getWorkerProfile=function(){return workerProfilePromise||(workerProfilePromise=workerServiceInstance.get()),workerProfilePromise},this.getManager=function(){var employee=this;return getManagerPromise||(getManagerPromise=this.getWorkerProfile().then(function(){var manager=workerServiceInstance.getPrimaryManager();return employee.manager=new Employee({aoid:_.get(manager,"associateOID")}),employee.manager})),getManagerPromise}}var defaultConfig={workflowEnabled:!0,masked:!1};return Employee.prototype.resetSelected=function(){this.attrs.selected=!1},Employee.prototype.isSelected=function(){return this.attrs.selected},Employee.prototype.setSelected=function(selected){this.attrs.selected=selected},Employee.prototype.saveBuddy=function(buddy){return SocialService.saveOnboardingBuddyFor(this.getAoid(),buddy.getAoid())},Employee.prototype.unassignBuddy=function(){return SocialService.unassignOnboardingBuddyFor(this.getAoid())},Employee.prototype.getStatusMessage=function(){var employee=this;return FormService.getFormattedUserForm(this.aoid,"whatIDo").then(function(form){return employee.statusMessage=employee.attrs.statusMessage=form.readForm(),employee.attrs.statusMessage}).catch(function(){})},Employee.prototype.notifyOfBuddy=function(onboarder){var values,onboarderName,onboarderStartDate,buddyManager,buddyName,me=this;return $q.all([onboarder.getName(),onboarder.getJobTitle(),onboarder.getStartDate(),me.getManager(),me.getName()]).then(function(results){function buildSubjectAndBody(data){var compiledTemplate,messageObj={actorAoid:buddyManager.getAoid(),originatorAoid:buddyManager.getAoid(),recipientAoid:this.getAoid()};return compiledTemplate=_.template("<subject>You have been designated as an onboarding buddy</subject><body>Hello <%= buddyName %>, <%= onboarderName %> is a new employee that will be joining our company on <%= startDate %>. I have appointed you as the onboarding buddy to help them feel comfortable and learn about the new position. As the onboarding buddy you should answer questions, and provide helpful information. I know that they will appreciate your assistance. I have already given them your email address. Please let me know if you have any questions. Thanks, <%= managerName %></body>")(data),messageObj.subject=getMessagePart(compiledTemplate,"subject"),messageObj.body=getMessagePart(compiledTemplate,"body"),messageObj}function getMessagePart(compTmp,tag){var regex=new RegExp("\\<"+tag+"\\>\\s*([.|\\s\\S]*)\\s*\\<\\/"+tag+"\\>","gi");return regex.exec(compTmp)[1]}return onboarderName=results[0],onboarderStartDate=results[2],buddyManager=results[3],buddyName=results[4],buddyManager.getName().then(function(managerName){return values={onboarderName:onboarderName.givenName+" "+onboarderName.familyName1,startDate:onboarderStartDate.format("MMMM Do, YYYY"),managerName:managerName.givenName+" "+managerName.familyName1,buddyName:buddyName.givenName},NotificationRequestService.sendNotification(buildSubjectAndBody.call(me,values))})})},Employee.prototype.getAoid=function(){return this.attrs.aoid},Employee.prototype.getStartDate=function(config){var employee=this,httpConfig=config||{};return StartDateService.getStartDate(this.getAoid(),httpConfig).then(function(startDate){return employee.startDate=startDate,employee.startDate})},Employee.prototype.getName=function(){var employee=this;return this.getWorkerProfile().then(function(profile){return employee.name=_.get(profile,"person.legalName"),employee.name})},Employee.prototype.getLocation=function(){return this.attrs.location},Employee.prototype.getJobTitle=function(){var employee=this;return this.getWorkerProfile().then(function(profile){return employee.jobTitle=_.get(profile,"workAssignments[0].jobCode.longName"),employee.jobTitle})},Employee}]),angular.module("redbox.onboarding.team").factory("redbox.onboarding.team.TeamService",["$q","redbox.ext.shared.services.UserIdentityService","redbox.connections.search.EmployeeSearchService","redbox.onboarding.common.WorkerInstanceService","redbox.onboarding.socialRelationships.SocialRelationshipsService","redbox.onboarding.team.EmployeeService",function($q,UserIdentityService,EmployeeSearchService,WorkerInstanceService,SocialService,Employee){function Team(onboarderAoid,members){this.onboarderAoid=onboarderAoid,this.members=members}function getOnboardingTeamForManager(onboarderAoid){return getTeamForCurrentUser().then(removeOnboardingEmployee.bind(void 0,onboarderAoid)).then(markAlreadyChosenTeamMembers.bind(void 0,onboarderAoid)).then(addStatusMessages).then(createTeam.bind(void 0,onboarderAoid))}function getOnboardingTeamForEmployee(onboarderAoid){return getManagerAoid(onboarderAoid).then(getTeamForAoid).then(removeOnboardingEmployee.bind(void 0,onboarderAoid)).then(filterTeamMembers.bind(void 0,onboarderAoid)).then(addStatusMessages)}function getOnboardingBuddyForEmployee(onboarderAoid){return getManagerAoid(onboarderAoid).then(getTeamForAoid).then(filterBuddyForEmployee.bind(void 0,onboarderAoid)).then(addStatusMessages).then(function(buddy){return buddy[0]}).then(getBuddysEmail)}function getOnboardingManagerForEmployee(){return getManagerWithFormattedName().then(getManagerStatusMessage)}function createTeam(onboarderAoid,employees){return new Team(onboarderAoid,employees)}function saveTeam(onboarderAoid,members){var selectedAoids=_.chain(members).filter(function(member){return member.isSelected()}).pluck("aoid").value();return SocialService.saveOnboardingTeamFor(onboarderAoid,selectedAoids)}function removeOnboardingEmployee(onboarderAoid,team){return _.remove(team,function(member){return member.aoid===onboarderAoid}),team}function markAlreadyChosenTeamMembers(onboarderAoid,team){return SocialService.getOnboardingTeamFor(onboarderAoid).then(function(selectedTeam){return _.forEach(team,function(member){member.setSelected(_.includes(selectedTeam,member.getAoid()))}),team})}function filterTeamMembers(onboarderAoid,team){return SocialService.getOnboardingTeamFor(onboarderAoid).then(function(selectedTeam){return _.filter(team,function(member){return _.includes(selectedTeam,member.aoid)})})}function getManagerAoid(){return WorkerInstanceService.getWorkerManager().then(function(manager){return _.get(manager,"associateOID")})}function getTeamForCurrentUser(){return UserIdentityService.getAoid().then(EmployeeSearchService.getTeamForManager).then(function(results){return _.map(results.employees,function(emp){return new Employee(emp)})})}function getTeamForAoid(aoid){return getTeamForManager(aoid).then(function(results){return _.map(results.employees,function(emp){return new Employee(emp)})})}function getTeamForManager(aoid){return EmployeeSearchService.getTeamForManager(aoid)}function addStatusMessages(team){var promises=_.map(team,function(member){return member.getStatusMessage()});return $q.all(promises).then(function(){return team})}function filterBuddyForEmployee(onboarderAoid,team){return SocialService.getOnboardingBuddyFor(onboarderAoid).then(function(selectedBuddy){return _.filter(team,function(member){return _.includes(selectedBuddy,member.aoid)})})}function getBuddysEmail(buddy){return void 0!==buddy?buddy.getWorkerProfile().then(function(result){return result.businessCommunication&&result.businessCommunication.emails[0]&&result.businessCommunication.emails[0].emailUri&&(buddy.businessEmail=result.businessCommunication.emails[0].emailUri),buddy}):$q.when(void 0)}function getManagerWithFormattedName(){return WorkerInstanceService.getWorkerManager().then(function(manager){return new Employee({aoid:_.get(manager,"associateOID"),name:parseFullName(_.get(manager,"reportsToWorkerName.formattedName"))})})}function getManagerStatusMessage(manager){return manager.getStatusMessage().then(function(){return manager})}function parseFullName(name){if(name){var names=name&&name.split(",")||[];return names[1]+" "+names[0]}return"Unknown"}return Team.prototype.clone=function(){return new Team(this.onboarderAoid,angular.copy(this.members))},Team.prototype.resetSelected=function(){_.forEach(this.members,function(employee){employee.resetSelected()})},Team.prototype.save=function(){return saveTeam(this.onboarderAoid,this.members)},Team.prototype.countSelected=function(){return _.reduce(this.members,function(total,employee){return total+employee.isSelected()},0)},{getOnboardingTeamForManager:getOnboardingTeamForManager,getOnboardingTeamForEmployee:getOnboardingTeamForEmployee,getOnboardingBuddyForEmployee:getOnboardingBuddyForEmployee,getOnboardingManagerForEmployee:getOnboardingManagerForEmployee,getTeamForAoid:getTeamForAoid,Team:Team}}]),angular.module("redbox.onboarding.template").factory("redbox.onboarding.template.AdminTemplateService",["$http","$q","adp.ng.logging.LoggerFactory","redbox.onboarding.template.DefaultVersionService",function($http,$q,LoggerFactory,DefaultTemplateVersionService){function updateClientTemplate(results){if(""!==_.get(results,"data")){var template=results.data,updatedTemplate=DefaultTemplateVersionService.upgradeToLatest(template);return template.version!==updatedTemplate.version&&saveTemplate(updatedTemplate).then(function(){
logger.info("Updated client template to latest: "+updatedTemplate.version)}).catch(function(){logger.info("Failed to update client template to latest: "+updatedTemplate.version)}),updatedTemplate}return DefaultTemplateVersionService.getDefault()}function getClientTemplate(){return $http.get(TEMPLATE_URI).then(function(results){return updateClientTemplate(results)}).catch(function(error){var defaultTemplate=DefaultTemplateVersionService.getDefault();return 404===error.status&&postDefaultTemplate(defaultTemplate).catch(function(err){logger.error("Error trying to POST default template",JSON.stringify(err.data))}),defaultTemplate})}function saveTemplate(template){return $http.post(TEMPLATE_URI,template).catch(function(error){return logger.error("Error trying to POST template",JSON.stringify(error.data)),$q.reject({message:JSON.stringify(error.data)})})}function addTagToStep(stepName,tag){return getClientTemplate().then(function(template){var step=template.steps[stepName];return step?(step.tags=step.tags||[],step.tags.push(tag),step.tags=_.uniq(step.tags),saveTemplate(template)):$q.reject("Unknown step name:",stepName)})}function removeTagFromStep(stepName,tag){return getClientTemplate().then(function(template){var step=template.steps[stepName];return step.tags?step.tags=_.difference(step.tags,[tag]):step.tags=[],saveTemplate(template)})}function postDefaultTemplate(template){return $http.post(TEMPLATE_URI,template)}var logger=LoggerFactory.getLogger("redbox.onboarding.AdminTemplateService"),TEMPLATE_URI="/redboxapi/onboarding/v1/template";return{getClientTemplate:getClientTemplate,addTagToStep:addTagToStep,removeTagFromStep:removeTagFromStep}}]),angular.module("redbox.onboarding.template").factory("redbox.onboarding.template.DefaultVersionService",[function(){function getLatest(){return v1_10()}function upgradeToLatest(template){var updatedTemplate=angular.copy(template),latestTemplateVersion=getLatest().version;return(updatedTemplate&&!updatedTemplate.version||updatedTemplate&&updatedTemplate.version!==latestTemplateVersion)&&"1.10"!==updatedTemplate.version&&(updatedTemplate=to1_10(updatedTemplate)),updatedTemplate}function to1_10(template){return template.steps.neighborhood={sequence:7,tags:["all"]},template.steps.done.sequence=8,template.version="1.10",template}function v1_10(){var template=v1_9();return to1_10(template)}function v1_9(){var template=v1_8();return template.version="1.9",template}function v1_8(){return{steps:{welcome:{sequence:1,tags:["all"]},welcomevideo:{sequence:2,tags:["all"]},team:{sequence:3,tags:[]},about:{sequence:4,tags:[]},paperwork:{sequence:5,tags:["all"]},whatwedo:{sequence:6,tags:["all"]},done:{sequence:7,tags:["all"]}},version:"1.8"}}return{getDefault:getLatest,upgradeToLatest:upgradeToLatest}}]),angular.module("redbox.onboarding.template").factory("redbox.onboarding.template.TemplateFilterService",["$q","adp.ng.logging.LoggerFactory","redbox.shared.services.ClientService","redbox.onboarding.common.WorkerInstanceService","redbox.onboarding.socialRelationships.SocialRelationshipsService","redbox.onboarding.common.OnboardingService",function($q,LoggerFactory,ClientService,WorkerInstanceService,SocialRelationshipsService,OnboardingService){function filterSteps(steps){if(_.isEmpty(steps))return $q.reject("Oops no steps were found in the template!");var localSteps=angular.copy(steps);return processStepFilters(localSteps,stepFilters)}function processStepFilters(steps,filters){var stepFilterPromises={};return _.forEach(steps,function(value,key){filters[key]&&(stepFilterPromises[key]=filters[key](steps[key].tags))}),$q.all(stepFilterPromises).then(function(filterResults){return _.pick(steps,function(value,key){return filterResults[key]===!0})})}function welcomeStepFilter(){return $q.when(!0)}function aboutStepFilter(tags){return OnboardingService.hasOnboardingPremium().then(function(isOnboardingPremium){return!!isOnboardingPremium&&processStepTags(tags)})}function teamStepFilter(tags){return OnboardingService.hasOnboardingPremium().then(function(isOnboardingPremium){return!!isOnboardingPremium&&isTeamPageEnabled(tags)})}function paperworkStepFilter(){return $q.when(!0)}function whatwedoStepFilter(){return OnboardingService.hasOnboardingPremium().then(function(isOnboardingPremium){return!!isOnboardingPremium&&isCompanyPageEnabled()})}function welcomevideoStepFilter(){return OnboardingService.hasOnboardingPremium().then(function(isOnboardingPremium){return!!isOnboardingPremium&&isWelcomeVideoEnabled()})}function neighborhoodStepFilter(){return OnboardingService.hasOnboardingPremium()}function doneStepFilter(){return $q.when(!0)}function isTeamPageEnabled(tags){return getWorkerProfile().then(getWorkerAoid).then(SocialRelationshipsService.getOnboardingTeamFor).then(function(result){return!_.isEmpty(result)&&processStepTags(tags)})}function isWelcomeVideoEnabled(){return ClientService.hasOnboardingVideo()}function isCompanyPageEnabled(){return ClientService.getClient().then(function(response){return response&&_.get(response,"showCompanyPage",!1)}).catch(function(err){return logger.error('Error with ClientService.getClient(), hiding "Company" step',err),!1})}function processStepTags(tags){return tags&&!_.isEmpty(tags)?getWorkerProfile().then(function(worker){var isExempt=isWorkerExempt(worker);return isExempt&&_.includes(tags,"exempt")||!isExempt&&_.includes(tags,"nonexempt")}).catch(function(error){return logger.error("Error with workerService, hiding the step",error),!1}):$q.when(!1)}function getWorkerProfile(){return WorkerInstanceService.getWorkerProfile()}function isWorkerExempt(worker){var code=_.get(worker,"workAssignments[0].wageLawCoverage.coverageCode.codeValue");return"N"!==code}function getWorkerAoid(worker){var aoid=_.get(worker,"associateOID");return $q.when(aoid)}var logger=LoggerFactory.getLogger("redbox.onboarding.TemplateFilterService"),stepFilters={welcome:welcomeStepFilter,about:aboutStepFilter,team:teamStepFilter,paperwork:paperworkStepFilter,whatwedo:whatwedoStepFilter,welcomevideo:welcomevideoStepFilter,neighborhood:neighborhoodStepFilter,done:doneStepFilter};return{filterSteps:filterSteps}}]),angular.module("redbox.onboarding.template").factory("redbox.onboarding.template.TemplateService",["$http","$q","$language","redbox.onboarding.core.ONBOARDING_CONSTANT","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserIdentityService","redbox.onboarding.template.AdminTemplateService","redbox.onboarding.template.TemplateFilterService",function($http,$q,$language,OB,LoggerFactory,UserIdentity,AdminTemplateService,TemplateFilterService){function getTemplate(){return getTemplatePromise||(getTemplatePromise=UserIdentity.getAoid().then(getUserTemplate).then(function(template){return template.steps}).then(TemplateFilterService.filterSteps).then(handleTemplateResults).catch(function(error){return logger.error("Error trying to get template",JSON.stringify(error)),$q.reject({message:JSON.stringify(error)})})),getTemplatePromise}function getUnfilteredTemplate(){return UserIdentity.getAoid().then(getUserTemplate).then(function(template){return template.steps}).then(handleTemplateResults).catch(function(error){return logger.error("Error trying to get template",JSON.stringify(error)),$q.reject({message:JSON.stringify(error)})})}function getUserTemplate(aoid,bustCache){var myDeferred;return deferredUserTemplates[aoid]&&!bustCache||(myDeferred=deferredUserTemplates[aoid]=$q.defer(),AdminTemplateService.getClientTemplate().then(function(clientTemplate){$http.get("/redboxapi/onboarding/v1/associates/"+aoid+"/steps").then(function(response){var associateProgressResponse=response.data;_.forEach(associateProgressResponse.steps,function(step,stepName){_.get(clientTemplate,"steps."+stepName)&&(clientTemplate.steps[stepName].associate=associateProgressResponse.steps[stepName].associate)}),myDeferred.resolve(clientTemplate)}).catch(function(error){404===error.status?myDeferred.resolve(clientTemplate):(logger.error("Error getting template steps for "+aoid,JSON.stringify(error)),myDeferred.reject("Template API error."))})})),deferredUserTemplates[aoid].promise}function handleTemplateResults(results){var template=buildPagesArray(results);return templateStates=_.chain(template.pages).pluck("nav").pluck("state").value(),template}function currentStateIndex(state){return _.findIndex(templateStates,function(tstate){return state===tstate})}function showPreviousPageArrow(state){return previousPageExists(state)}function showNextPageArrow(state){var currentIndex=currentStateIndex(state);return currentIndex>0&&nextPageExists(state)}function nextPageExists(state){var currentIndex=currentStateIndex(state);return currentIndex<templateStates.length-1&&currentIndex!==-1}function nextPage(state){return nextPageExists(state)?templateStates[currentStateIndex(state)+1]:void 0}function previousPageExists(state){return currentStateIndex(state)>0}function previousPage(state){return previousPageExists(state)?templateStates[currentStateIndex(state)-1]:void 0}function relativeState(state1,state2){var p1=currentStateIndex(state1),p2=currentStateIndex(state2);return p1<p2?-1:p1>p2?1:0}function buildPagesArray(steps){var pages,page;return pages=_.map(steps,function(obj,key){var currentStep=OB.steps[key];if(currentStep)return page={key:key,title:currentStep.title,shortName:$language.get("onboarding."+currentStep.title),sequence:obj.sequence,nav:{state:currentStep.state,id:"ob-nav-"+key,icons:{incomplete:currentStep.icons.incomplete,complete:currentStep.icons.complete}},status:getStatus(obj)||"incomplete",welcomeScreen:{show:angular.isDefined(currentStep.welcomeScreen)},isStatus:function(statusName){return statusName===this.status},getIcon:function(){return this.nav.icons.incomplete},associate:obj.associate||{},tags:obj.tags},page.welcomeScreen.description=page.welcomeScreen.show&&currentStep.welcomeScreen.description,obj.associate&&obj.associate.message&&(page.message=obj.associate.message.value),page}),{pages:_.sortBy(_.compact(pages),"sequence")}}function getStatus(step){return step.associate&&step.associate.progress&&step.associate.progress.value}function postTemplate(step,status){return UserIdentity.getAoid().then(postUserTemplate.bind(void 0,step,{progress:status})).catch(function(error){return logger.error("Error trying to POST template",JSON.stringify(error)),$q.reject({message:JSON.stringify(error)})})}function postUserTemplate(step,config,aoid){var uri="/redboxapi/onboarding/v1/associates/"+aoid+"/steps/"+step;return $http.post(uri,config)}var getTemplatePromise,templateStates=[],deferredUserTemplates={},logger=LoggerFactory.getLogger("redbox.onboarding.template.TemplateService");return{getTemplate:getTemplate,getUnfilteredTemplate:getUnfilteredTemplate,getUserTemplate:getUserTemplate,postTemplate:postTemplate,postUserTemplate:postUserTemplate,nextPageExists:nextPageExists,nextPage:nextPage,previousPageExists:previousPageExists,previousPage:previousPage,showPreviousPageArrow:showPreviousPageArrow,showNextPageArrow:showNextPageArrow,currentStateIndex:currentStateIndex,relativeState:relativeState}}]),angular.module("redbox.shared.constants").constant("redbox.shared.constants.AllowedUploadableFileExtensionsConstant",{documents:["pdf","msword","vnd.openxmlformats-officedocument.wordprocessingml.document","vnd.ms-powerpoint","vnd.openxmlformats-officedocument.presentationml.presentation","vnd.openxmlformats-officedocument.spreadsheetml.sheet","vnd.ms-excel","xls"],documentExtensionLabels:["pdf","doc","docx","ppt","pptx","xls","xlsx"]}),angular.module("redbox.shared.constants").constant("redbox.shared.constants.AppConstant",{title:"My ADP",xsWidth:640,smWidth:768,mdWidth:992,lgWidth:1200,buildVersion:"1.18.0.1594",staticDomainUrl:"",sessionTimeout:{idleTime:108e4,dialogTime:18e4},serverPingService:{pingTime:12e4,events:"mousemove keydown DOMMouseScroll mousewheel mousedown touchstart".split(" ")},FADE_DURATION:3e3,modules:{"benefits":["benefits.min.js?1.18.0.1594&1472823321393","benefits.templates.min.js?1.18.0.1594&1472823321393","app/benefits/css/benefits.min.css?1.18.0.1594&1472823321393"],"retirement":["retirement.min.js?1.18.0.1594&1472823321393","retirement.templates.min.js?1.18.0.1594&1472823321393","app/retirement/css/retirement.min.css?1.18.0.1594&1472823321393"],"admin":["admin.min.js?1.18.0.1594&1472823321393","admin.templates.min.js?1.18.0.1594&1472823321393","app/admin/css/admin.min.css?1.18.0.1594&1472823321393"],"talent":["talent.min.js?1.18.0.1594&1472823321393","talent.templates.min.js?1.18.0.1594&1472823321393","app/talent/css/talent.min.css?1.18.0.1594&1472823321393"],"pay":["pay.min.js?1.18.0.1594&1472823321393","pay.templates.min.js?1.18.0.1594&1472823321393","app/pay/css/pay.min.css?1.18.0.1594&1472823321393"],"aline":["aline.min.js?1.18.0.1594&1472823321393","aline.templates.min.js?1.18.0.1594&1472823321393","app/aline/css/aline.min.css?1.18.0.1594&1472823321393"],"time":["time.min.js?1.18.0.1594&1472823321393","time.templates.min.js?1.18.0.1594&1472823321393","app/time/css/time.min.css?1.18.0.1594&1472823321393"],"timeline":["timeline.min.js?1.18.0.1594&1472823321393","timeline.templates.min.js?1.18.0.1594&1472823321393?1.18.0.1594&1472823321393","app/timeline/css/timeline.min.css?1.18.0.1594&1472823321393"],"datacloud":["datacloud.min.js?1.18.0.1594&1472823321393","datacloud.templates.min.js?1.18.0.1594&1472823321393","app/datacloud/css/datacloud.min.css?1.18.0.1594&1472823321393"],"settings":["settings.min.js?1.18.0.1594&1472823321393","settings.templates.min.js?1.18.0.1594&1472823321393","app/settings/css/settings.min.css?1.18.0.1594&1472823321393"],"tour":["vendor/bootstrap-tour/build/js/bootstrap-tour.js?0.9.3.9","tour.min.js?1.18.0.1594&1472823321393","tour.templates.min.js?1.18.0.1594&1472823321393","app/tour/css/tour.min.css?1.18.0.1594&1472823321393"],"manageractions":["manageractions.min.js?1.18.0.1594&1472823321393","manageractions.templates.min.js?1.18.0.1594&1472823321393","app/manageractions/css/manageractions.min.css?1.18.0.1594&1472823321393"]}}),angular.module("redbox.shared.constants").constant("redbox.shared.constants.RoleConstant",{ROLE_MANAGER:"manager",ROLE_EMPLOYEE:"employee"}),angular.module("redbox.shared.constants").factory("redbox.shared.constants.TALENT_OPERATIONS",["redbox.ext.shared.constants.SFFOConstant",function(SFFO){return{certificationManagement:{read:SFFO.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_read,add:SFFO.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_add,change:SFFO.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_change,remove:SFFO.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_remove},competencyManagement:{read:SFFO.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_read,add:SFFO.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_add,change:SFFO.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_change,remove:SFFO.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_remove},educationalDegreeManagement:{read:SFFO.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_read,add:SFFO.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_add,change:SFFO.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_change,remove:SFFO.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_remove},languageManagement:{read:SFFO.workerTalentManagement.workerKSAOCManagement.languageManagement.language_read,add:SFFO.workerTalentManagement.workerKSAOCManagement.languageManagement.language_add,change:SFFO.workerTalentManagement.workerKSAOCManagement.languageManagement.language_change,remove:SFFO.workerTalentManagement.workerKSAOCManagement.languageManagement.language_remove},licenseManagement:{read:SFFO.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_read,add:SFFO.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_add,change:SFFO.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_change,remove:SFFO.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_remove},membershipManagement:{read:SFFO.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_read,add:SFFO.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_add,change:SFFO.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_change,remove:SFFO.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_remove},recognitionManagement:SFFO.workerTalentManagement.workerKSAOCManagement.recognitionManagement,performanceManagement:{read:SFFO.workerTalentManagement.performanceManagement},careerDevelopmentManagement:{read:SFFO.workerTalentManagement.careerDevelopmentManagement},learningManagement:{read:SFFO.workerTalentManagement.learningManagement},careerSearch:{read:SFFO.enterpriseInformationManagement.enterpriseSearchManagement.search.advanceSearch_execute}}}]).constant("redbox.shared.constants.TALENT_CONSTANTS",{tags:{doctorateDegree:"doctor",mastersDegree:"master",bachelorsDegree:"bachelor",associateDegree:"associate"}}),angular.module("redbox.shared.filters").filter("capitalize",function(){return function(str){return angular.isString(str)&&str.replace(/([^\W_]+[^\s-]*) */g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()})||""}}),angular.module("redbox.shared.filters").filter("contentUrlFilter",["$cookies",function($cookies){var contentUrlFilter=function(href){var filtered=href;return"proxy"===$cookies.apiData?filtered=href:"lisa"===$cookies.apiData?filtered="/lisa"+filtered:"localMock"===$cookies.apiData&&(filtered="/static/redbox/mock-api"+href),filtered};return contentUrlFilter}]),angular.module("redbox.shared.filters").filter("htmlToPlaintext",function(){var plainText=function(html){var temp=String(html).replace(/<[^>]+>/gm,"");return temp=temp.replace(/&amp;/gi,"&"),temp=temp.replace(/&lt;/gi,"<"),temp=temp.replace(/&gt;/gi,">"),temp=temp.replace(/&quot;/gi,'"'),temp=temp.replace(/&apos;/gi,"'"),temp=temp.replace(/&nbsp;/gi," ")};return plainText}),angular.module("redbox.shared.filters").filter("propsFilter",function(){return function(items,props){var out=[];return angular.isArray(items)?items.forEach(function(item){for(var itemMatches=!1,keys=Object.keys(props),i=0;i<keys.length;i++){var prop=keys[i],text=props[prop].toLowerCase();if(item&&item[prop].toString().toLowerCase().indexOf(text)!==-1){itemMatches=!0;break}}itemMatches&&out.push(item)}):out=items,out}}),angular.module("redbox.shared.filters").filter("ssnFilter",function(){var filter=function(value){var formatted,regex=new RegExp("^(\\d{3})(\\d{2})(\\d{4})$");return String(value).replace(regex,function($0,$1,$2,$3){formatted=$1+"-"+$2+"-"+$3}),formatted};return filter}),function(){function gaErrorLoggingInterceptor($window,$analytics,$q){return{responseError:function(response){function trackEvent(){var event={errorCode:_.get(response,"data.response.responseCode"),date:moment(_.get(response,"data.response.serverRequestDateTime")).format("MMMM Do YYYY, h:mm:ss a"),deviceType:Detectizr.device.type};$analytics.eventTrack("SORError",{category:_.get(response,"data.response.resourceUri"),label:JSON.stringify(event)})}return $window.ga&&_.has(response,"data.response.resourceUri")&&trackEvent(),$q.reject(response)}}}angular.module("redbox.shared.interceptors").factory("redbox.shared.interceptors.GAErrorLoggingInterceptor",gaErrorLoggingInterceptor),gaErrorLoggingInterceptor.$inject=["$window","$analytics","$q"]}(),function(){function jsonInterceptor($q,appConstant,staticUrlService){return{request:function(request){return appConstant.buildVersion&&appConstant.buildVersion.indexOf("_")===-1&&"GET"===request.method&&request.url.indexOf(".json")>-1&&(request.url=staticUrlService.format(request.url)),request||$q.when(request)}}}angular.module("redbox.shared.interceptors").factory("redbox.shared.interceptors.JSONInterceptor",jsonInterceptor),jsonInterceptor.$inject=["$q","redbox.shared.constants.AppConstant","redbox.shared.services.StaticUrlService"]}(),function(){function localMockApiInterceptor($q){var intercept={};return/apiData=localMock/.test(window.document.cookie)&&(intercept.request=function(config){if("POST"!==config.method&&"PUT"!==config.method&&"DELETE"!==config.method||(config.method="GET"),config.url.indexOf("worker.us-i9-screening.section1.complete")!==-1)try{"submit"===config.data.events[0].data.transform.eventStatusCode.codeValue&&(config.url="/events/hr/v1/worker.us-i9-screening.section1.complete/submit")}catch(e){}var found=_.find(["/v1_0/","/wf/","/hr/","/redboxapi/","/payroll/","/core/","/scim","/v2/","/benefits/","/codelists/","/events/","/time/","/RSRestfulService/"],function(rootDir){return 0===config.url.indexOf(rootDir)});return found&&(config.params&&delete config.params,config.url="mock-api"+config.url.replace(/\?.*/,"")+".json",config.url=config.url.replace(/\/workers\/.*?\/policy-acknowledgements.json/,"/workers/A/policy-acknowledgements.json"),config.url=config.url.replace(/\/associates\/.*?\/personal-contacts.json/,"/associates/A/personal-contacts.json"),config.url=config.url.replace(/\/countryvalues\/\.json/,"/countryvalues.json"),config.url=config.url.replace(/\/statenamevalues\/\.json/,"/statenamevalues.json"),config.url=config.url.replace(/\/directdepositdeductioncodevalues\/\.json/,"/directdepositdeductioncodevalues.json"),config.url=config.url.replace(/\/bio\/(..-..)\.json/,"/bio/en-US.json")),config||$q.when(config)}),intercept}angular.module("redbox.shared.interceptors").factory("redbox.shared.interceptors.LocalMockApiInterceptor",localMockApiInterceptor),localMockApiInterceptor.$inject=["$q"]}(),function(){function roleInterceptor($q,$injector){return{request:function(config){var defer=$q.defer();if(config.aoid){var objectEntitlementsService=$injector.get("redbox.ext.shared.services.ObjectEntitlementsService");objectEntitlementsService.getManagerEntitlements().then(function(){if(objectEntitlementsService.verifyManagerEntitlements(config.aoid)){var ROLE=$injector.get("redbox.ext.shared.constants.Role");config.headers.rolecode=ROLE.MANAGER}}).finally(function(){defer.resolve(config)})}else defer.resolve(config);return defer.promise}}}angular.module("redbox.shared.interceptors").factory("redbox.shared.interceptors.ROLEInterceptor",roleInterceptor),roleInterceptor.$inject=["$q","$injector"]}(),function(undefined){function clamp(val,length){return val=0|val||0,val<0?Math.max(val+length,0):Math.min(val,length)}"undefined"==typeof ArrayBuffer||"undefined"==typeof Uint8Array||ArrayBuffer.prototype.slice||(ArrayBuffer.prototype.slice=function(from,to){var length=this.byteLength,begin=clamp(from,length),end=length;if(to!==undefined&&(end=clamp(to,length)),begin>end)return new ArrayBuffer(0);var num=end-begin,target=new ArrayBuffer(num),targetArray=new Uint8Array(target),sourceArray=new Uint8Array(this,begin,num);return targetArray.set(sourceArray),target})}(),angular.module("redbox.shared.services").service("redbox.shared.services.ClientService",["$rootScope","$http","$q","$window","redbox.shared.constants.AppConstant","adp.ng.logging.LoggerFactory","redbox.ext.shared.utils.QueryParamUtils","adp.ng.utilities.LocalStorageService",function($rootScope,$http,$q,$window,appConstant,loggerFactory,queryParamUtils,localStorageService){function hasVideo(videoKey){return getClient().then(function(client){return!(!client.videos||!client.videos[videoKey])}).catch(function(error){return logger.error("Call to getClient() failed in getVideo(): "+error),!1})}function getLoginUrlWithoutVersion(){var url=$window.location.href.replace(/#.*$/,"")+"login.html?alias=";return url.replace(appConstant.buildVersion+"/","")}function clearClient(){clientDetailsDeferred=null}var clientDetailsDeferred,logger=loggerFactory.getLogger("redbox.shared.services.ClientService"),CLIENT_ALIAS_KEY="CLIENT_ALIAS",MAX_COMPANY_LINKS_PER_TILE=30,getAliasFromCache=function(){return localStorageService.getLocalStorage().getItem(CLIENT_ALIAS_KEY)},addAliasToCache=function(alias){_.isEmpty(alias)||localStorageService.getLocalStorage().setItem(CLIENT_ALIAS_KEY,alias)},removeAliasFromCache=function(){localStorageService.getLocalStorage().removeItem(CLIENT_ALIAS_KEY)},hasAliasInCache=function(){return null!==localStorageService.getLocalStorage().getItem(CLIENT_ALIAS_KEY)},hasMultipleLanguages=function(client){var multiple=!1;return client&&client.locales&&(multiple=client.locales.length>1),multiple},hasProductCode=function(client,code){var found=!1;return angular.isArray(client.products)&&(found=_.find(client.products,function(product){return product.toLowerCase()===code.toLowerCase()})),found},assertHasProductCode=function(code){var deferred=$q.defer(),self=this;return getClient().then(function(client){self.hasProductCode(client,code)?deferred.resolve():deferred.reject()}).catch(function(error){logger.warn("Could not getClient, hasProductCode returning false",JSON.stringify(error)),deferred.reject()}),deferred.promise},getPublicClient=function(){var alias=getAliasFromCache()||queryParamUtils.getParameterValue("alias");return alias?(logger.info("Retrieving public client"),$http.get("/redboxapi/public/core/v1/client",{params:{alias:alias}}).then(function(clientDetails){return logger.info("Public client retrieved successfully"),logger.debug("Public client?",JSON.stringify(clientDetails)),clientDetails.data}).catch(function(error){return logger.warn("Error occurred retrieving public client details",JSON.stringify(error)),$q.reject(error)})):(logger.warn("Client alias not found in cache"),$q.reject({}))},getMaxCompanyLinksPerTile=function(){return MAX_COMPANY_LINKS_PER_TILE},getClient=function(config){return clientDetailsDeferred?clientDetailsDeferred.promise:(clientDetailsDeferred=$q.defer(),$http.get("/redboxapi/core/v1/client",config).then(function(clientDetails){clientDetailsDeferred.resolve(clientDetails.data)}).catch(function(error){logger.error("Error occurred retrieving client details",JSON.stringify(error)),clientDetailsDeferred.reject(error)}),clientDetailsDeferred.promise)},getCompanyLinksTiles=function(client){var screensWithCompanyLinkTiles=["dashboard","companyPage","pay"],linkTilesByScreen={};return _.forEach(screensWithCompanyLinkTiles,function(screenId){var savedLinksForTileType=_.get(client,"linkTiles."+screenId+".links",[]);linkTilesByScreen[screenId]={links:[],label:_.get(client,"linkTiles."+screenId+".label",null)},_.forEach(savedLinksForTileType,function(link){var tempLink=_.find(client.links,"linkId",link);tempLink&&linkTilesByScreen[screenId].links.push(tempLink)})}),linkTilesByScreen},getCompanyBio=function(locale,config){return $http.get("/redboxapi/core/v1/client/bio/"+locale,config).then(function(clientDetails){return clientDetails.data}).catch(function(error){return logger.error("Error occurred retrieving client bio",JSON.stringify(error)),$q.reject(error)})},setClientLocales=function(clientLocales){var postData={locales:clientLocales};return $http.post("/redboxapi/core/v1/client/locales",postData).then(function(result){return logger.info("client locales updated successful"),clientDetailsDeferred=null,result.data}).catch(function(error){return logger.error("Error occurred updating client locales",JSON.stringify(error)),$q.reject(error)})},setCompanyPageFlag=function(showCompanyPageFlag){var postData={showCompanyPage:showCompanyPageFlag};return $http.post("/redboxapi/core/events/v1/client/showCompanyPage.change",postData).then(function(result){return logger.info("client company page flag updated successful"),clientDetailsDeferred=null,result.data}).catch(function(error){return logger.error("Error occurred changing company page flag",JSON.stringify(error)),$q.reject(error)})},setClientName=function(clientName){var postData={name:clientName};return $http.post("/redboxapi/core/v1/client/name",postData).then(function(result){return logger.info("client name updated successfully"),clientDetailsDeferred=null,$rootScope.$broadcast("companyInfoChanged"),result.data}).catch(function(error){return logger.error("Error occurred updating client name"+error),$q.reject(error)})},setClientAlias=function(clientAlias){var postData={alias:clientAlias};return $http.post("/redboxapi/core/v1/client/alias",postData).then(function(result){return logger.info("client alias updated successfully"),addAliasToCache(clientAlias),clientDetailsDeferred=null,$rootScope.$broadcast("companyInfoChanged"),result.data}).catch(function(error){return logger.error("Error occurred updating client alias",JSON.stringify(error)),$q.reject(error)})},setClientRssUrl=function(url){var postData={rssUrl:url};return $http.post("/redboxapi/core/events/v1/client/rssUrl.change",postData).then(function(result){return logger.info("client rss Url updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){return logger.error("Error occurred updating client rss Url",JSON.stringify(error)),$q.reject(error)})},setClientTwitter=function(userName){var postData={twitter:{userName:userName}};return $http.post("/redboxapi/core/events/v1/client/twitter.change",postData).then(function(result){return logger.info("client twitter updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){logger.error("Error occurred updating client twitter handle",JSON.stringify(error)),$q.reject(error)})},setClientRss=function(client){var postData={rssUrl:client.rssUrl};return $http.post("/redboxapi/core/events/v1/client/rssUrl.change",postData).then(function(result){return logger.info("client rss updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){logger.error("Error occurred updating client rss",JSON.stringify(error)),$q.reject(error)})},setCompanyBio=function(client){var postData={bio:{locale:client.locale,content:client.content}};return $http.post("/redboxapi/core/events/v1/client/bio.change",postData).then(function(result){return logger.info("client bio updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){logger.error("Error occurred updating client bio"+error),$q.reject(error)})},setCompanyLinks=function(client){return $http.post("/redboxapi/core/v1/client/links/"+client.links[0].linkId,client).then(function(result){return logger.info("company links updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){return logger.error("Error occurred updating company links"+error),$q.reject(error)})},setAllCompanyLinks=function(client){return $http.post("/redboxapi/core/v1/client/links",client).then(function(result){return logger.info("company links updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){return logger.error("Error occurred updating company links"+error),$q.reject(error)})},setLinkTiles=function(linkTile){return $http.post("/redboxapi/core/v1/client/linkTiles",linkTile).then(function(result){return logger.info("company links updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){return logger.error("Error occurred updating company links"+error),$q.reject(error)})},getFederatedSsoLinks=function(){return $http.get("/redboxapi/core/v1/client/ssoLinks").then(function(result){return logger.info("Federated SSO links retrieved successfully"),result.data}).catch(function(error){return logger.error("Error occurred retrieving federated SSO links",error),$q.reject(error)})},setCompanyLinksTitle=function(client){var postData={linksTitle:client};return $http.post("/redboxapi/core/events/v1/client/linksTitle.change",postData).then(function(result){return logger.info("company links title updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){logger.error("Error occurred updating company links title"+error),$q.reject(error)})},setClientVideo=function(postData,key,deleteFlag){return deleteFlag?$http.delete("/redboxapi/core/v1/client/videos/"+key,postData).then(function(result){return logger.info("client video url updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){return logger.error("Error occurred updating client video url",JSON.stringify(error)),$q.reject(error)}):$http.post("/redboxapi/core/v1/client/videos/"+key,postData).then(function(result){return logger.info("client video url updated successfully"),clientDetailsDeferred=null,result.data}).catch(function(error){return logger.error("Error occurred updating client video url",JSON.stringify(error)),$q.reject(error)})},hasCompanyVideo=function(){return hasVideo("company")},hasOnboardingVideo=function(){return hasVideo("onboarding")};this.CLIENT_ALIAS_KEY=CLIENT_ALIAS_KEY,this.getMaxCompanyLinksPerTile=getMaxCompanyLinksPerTile,this.addAliasToCache=addAliasToCache,this.removeAliasFromCache=removeAliasFromCache,this.getAliasFromCache=getAliasFromCache,this.assertHasProductCode=assertHasProductCode,this.hasProductCode=hasProductCode,this.hasAliasInCache=hasAliasInCache,this.hasMultipleLanguages=hasMultipleLanguages,this.getPublicClient=getPublicClient,this.getClient=getClient,this.getCompanyLinksTiles=getCompanyLinksTiles,this.getCompanyBio=getCompanyBio,this.setClientLocales=setClientLocales,this.setClientName=setClientName,this.setClientAlias=setClientAlias,this.setClientRssUrl=setClientRssUrl,this.setClientTwitter=setClientTwitter,this.setCompanyPageFlag=setCompanyPageFlag,this.setCompanyBio=setCompanyBio,this.setClientRss=setClientRss,this.setCompanyLinks=setCompanyLinks,this.setAllCompanyLinks=setAllCompanyLinks,this.setLinkTiles=setLinkTiles,this.getFederatedSsoLinks=getFederatedSsoLinks,this.setCompanyLinksTitle=setCompanyLinksTitle,this.setClientVideo=setClientVideo,this.getLoginUrlWithoutVersion=getLoginUrlWithoutVersion,this.hasOnboardingVideo=hasOnboardingVideo,
this.hasCompanyVideo=hasCompanyVideo,this.clearClient=clearClient}]),function(){function CompanyLinksService($http,$language,clientService,LoggerFactory){function prepareTiles(uiTiles){var apiTiles={tiles:[]};for(var key in uiTiles)if(uiTiles.hasOwnProperty(key)){var section=uiTiles[key];if(section.tile){var apiTile={tileId:key,label:section.tile.label,visible:section.tile.showTile,links:[]};section.tile.links.map(function(eachTileLink){apiTile.links.push(eachTileLink.linkId)}),apiTiles.tiles.push(apiTile)}}return apiTiles}function getClient(config){return clientService.getClient(config).then(function(response){var clientObj=buildCompanyTilesListForClientApiRsp(response);return clientObj}).catch(function(error){logger.error("Error occurred retrieving client details",error)})}function buildCompanyTilesListForClientApiRsp(clientObj){return clientObj.tiles||(clientObj.tiles=_.map(SUPPORTED_TILE_LOCATION_LIST,function(locationId){var idGetObjPropLabel="linkTiles['"+locationId+"'].label",idGetObjPropLinks="linkTiles['"+locationId+"'].links";return{tileId:locationId,label:_.get(clientObj,idGetObjPropLabel,DEFAULT_LABEL_CO_LINKS_TILE),links:_.get(clientObj,idGetObjPropLinks,[]),visible:!0}})),clientObj}function saveTiles(uiTiles){var url=SERVICE_URL+"tiles",tiles=prepareTiles(uiTiles);return $http.post(url,tiles).then(function(data){return data})}function getFullLinks(links,linkIds){var ret=[];return _.forEach(linkIds,function(id){var tempLink=_.find(links,"linkId",id);tempLink&&ret.push(tempLink)}),ret}function getTileById(tiles,tileId){var links=_.find(tiles,function(item){return item.tileId===tileId});return links||(links=[]),links}var logger=LoggerFactory.getLogger("redbox.shared.services.CompanyLinksService"),SUPPORTED_TILE_LOCATION_LIST=["dashboard","pay","profile","companyPage"],DEFAULT_LABEL_CO_LINKS_TILE=$language.get("framework.ADMIN_COMPANY_LINKS_TITLE"),SERVICE_URL="/redboxapi/core/v1/client/";return{getClient:getClient,saveTiles:saveTiles,getFullLinks:getFullLinks,getTileById:getTileById}}angular.module("redbox.shared.services").factory("redbox.shared.services.CompanyLinksService",CompanyLinksService),CompanyLinksService.$inject=["$http","$language","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory"]}(),angular.module("redbox.shared.services").service("redbox.shared.services.ConfigService",["$http","$q","adp.ng.logging.LoggerFactory",function($http,$q,loggerFactory){function init(){return initDeferred?initDeferred.promise:(initDeferred=$q.defer(),$http.get(CONFIG_URL).then(function(result){logger.debug("ConfigService: http.get success",JSON.stringify(result.data)),initDeferred.resolve(result.data)}).catch(function(data,status){logger.error("ConfigService: http.get error",status+data),initDeferred.reject(status+data)}),initDeferred.promise)}var initDeferred,CONFIG_URL="ext/config/config.json?1.18.0.1594&1472823321393",logger=loggerFactory.getLogger("redbox.shared.services.ConfigService");this.KEYS={LOGIN_ACTION:"loginAction",FIRST_TIME_USER_URL:"firstTimeUserUrl",PASSWORD_SMAGENT_NAME:"passwordSmagentname",R8_URL:"R8Url",ETIME_URL:"eetimeUrl",NET_SECURE:"netSecure",TWITTER_WIDGET_ID:"twitterWidgetId",GA_ID:"gaId",VERSIONING_ENABLED:"versioningEnabled",ISI_PASSWORD_URL:"isiPasswordUrl",ISI_SECURITY_QUESTIONS_URL:"isiSecurityQuestionsUrl",RECRUITING_URL:"recruitingUrl",VANTAGE_URL:"vantageUrl",MANAGER_TIMEOFF_ENABLED:"managerTimeoffEnabled",ALINE_ENROLLMENT_ENABLED:"alineEnrollmentEnabled"},this.get=function(key){var deferred=$q.defer();return logger.debug("Retrieving config with key",key),init().then(function(configs){logger.debug("Configs returned",JSON.stringify(configs)),key in configs?deferred.resolve(configs[key]):(logger.error("Config for key not found ",key),deferred.resolve())}).catch(function(){deferred.reject()}),deferred.promise},this.getAll=function(){var deferred=$q.defer();return logger.debug("Retrieving configs"),init().then(function(configs){logger.debug("Configs retrieved"),deferred.resolve(configs)}).catch(function(){deferred.reject()}),deferred.promise}}]),angular.module("redbox.shared.services").factory("redbox.shared.services.DataTransformService",[function(){function getFromObject(obj,keyArray,config){var i,key;for(config=angular.extend(defaultTransformOptions(),config),i=0;i<keyArray.length&&angular.isDefined(obj);i++)if(key=keyArray[i],"string"==typeof key?obj=obj[keyArray[i]]:angular.isObject(key)&&(obj=_.find(obj,key)),i<keyArray.length-1&&config.throwErrorOnMissing&&!angular.isDefined(obj))throw new TypeError(keyArray.join(".")+" not found in obj.");return obj}function setInObject(obj,keyArray,target,config){var i,key;for(config=angular.extend(defaultTransformOptions(),config),i=0;i<keyArray.length&&angular.isDefined(obj);i++)if(key=keyArray[i],i<keyArray.length-1)"string"==typeof key?(!angular.isDefined(obj[key])&&config.create&&(obj[key]={}),obj=obj[key]):obj=_.find(obj,key);else if(!angular.isDefined(obj[key])||config.override)return obj[key]=target,!0;return!1}function defaultTransformOptions(){return{override:!0,create:!0,throwErrorOnMissing:!0}}function filterConstant(toObject,fromObject,instructionKeys,transformData){_.forEach(_.filter(transformData,function(instruction){return instruction[instructionKeys[0]]&&instruction[instructionKeys[1]]}),function(instruction){var subObject,objectToSet;subObject=getFromObject(fromObject,instruction[instructionKeys[0]],{throwErrorOnMissing:!instruction.optional}),instruction.skipOnUndefined&&!angular.isDefined(subObject)||(objectToSet=(instruction[instructionKeys[2]]||angular.identity)(subObject),setInObject(toObject,instruction[instructionKeys[1]],objectToSet))})}return{getFromObject:getFromObject,setInObject:setInObject,filterConstant:filterConstant}}]),angular.module("redbox.shared.services").factory("redbox.shared.services.FlexgraphService",["$http","$q","adp.ng.logging.LoggerFactory",function($http,$q,loggerFactory){function getAssociatesDetail(aoids){function buildDetails(response){_.forEach(response.data,function(detail){details[detail.associate]={name:detail.details.name,position:detail.details.position,department:detail.details.department}})}function rejectPromise(error){var message=_.get(error,"data.confirmMessage.resourceMessages[0].processMessages[0].userMessage.messageTxt");return logger.error("getAssociatesDetail failed: "+message),$q.reject(error)}var aoidChunks=_.chunk(aoids,20),details={},httpPromises=[];return _.forEach(aoidChunks,function(aoidChunk){var url=DETAILS_URL+aoidChunk.join(",");httpPromises.push($http.get(url).then(buildDetails).catch(rejectPromise))}),$q.all(httpPromises).then(function(){return details})}var DETAILS_URL="/redboxapi/flexgraph/v1/associate-details?associateoids=",logger=loggerFactory.getLogger("redbox.shared.services.FlexgraphService");return{getAssociatesDetail:getAssociatesDetail}}]),function(){function IEBannerService(loggerFactory,localStorageService){function setIsIeBannerVisible(isIeBannerVisible){localStorageService.getLocalStorage().setItem(LS_KEY_IS_IE_BANNER_VISIBLE,isIeBannerVisible)}function getIsIeBannerVisible(){var isIeBannerVisible=localStorageService.getLocalStorage().getItem(LS_KEY_IS_IE_BANNER_VISIBLE);return isIeBannerVisible=null===isIeBannerVisible||"true"===isIeBannerVisible,logger.debug("getIsIeBannerVisible: "+isIeBannerVisible),isIeBannerVisible}function getIsUsingUnsupportedIeVersion(){var isUsingUnsupportedIeVersion=Detectizr.browser.name===DETECTIZR_BROWSER_IE&&("9"===Detectizr.browser.major||"10"===Detectizr.browser.major);return logger.debug("getIsUsingUnsupportedIeVersion: "+isUsingUnsupportedIeVersion),isUsingUnsupportedIeVersion}var logger=loggerFactory.getLogger("redbox.shared.services.IEBannerService"),LS_KEY_IS_IE_BANNER_VISIBLE="isIeBannerVisible",DETECTIZR_BROWSER_IE="ie";return{getIsUsingUnsupportedIeVersion:getIsUsingUnsupportedIeVersion,getIsIeBannerVisible:getIsIeBannerVisible,setIsIeBannerVisible:setIsIeBannerVisible}}angular.module("redbox.shared.services").factory("redbox.shared.services.IEBannerService",IEBannerService),IEBannerService.$inject=["adp.ng.logging.LoggerFactory","adp.ng.utilities.LocalStorageService"]}(),function(){function impersonationService($q,$window,$http,loggerFactory,userIdentityService){function addActingSessionIdHeader(){isImpersonating()&&($http.defaults.headers.common[ACTING_SESSION_ID]=parseSessionId())}function addActingSessionIdParam(url){var sessionId,_url=url;return isImpersonating()&&(sessionId=_.get(impersonationSession,"sessionId",parseSessionId()),_url+=_url.match(PARAMS_REGEX)?"&":"?",_url+=ACTING_SESSION_ID+"="+sessionId),logger.debug("url?",_url),_url}function cacheSession(userIdentity){return impersonationSession={sessionStarted:!1,actingAs:!1,actingOnBehalfOf:!1},userIdentity.mode===ACT_AS?(impersonationSession.sessionId=parseSessionId(),impersonationSession.sessionStarted=!0,impersonationSession.actingAs=!0):userIdentity.mode===ON_BEHALF_OF&&(impersonationSession.sessionId=parseSessionId(),impersonationSession.sessionStarted=!0,impersonationSession.actingOnBehalfOf=!0),logger.debug("impersonationSession?",impersonationSession),impersonationSession}function endSession(){var url,deferred=$q.defer();return _.get(impersonationSession,"sessionStarted")?(impersonationSession.actingAs?url=ACT_AS_STOP_URL:impersonationSession.actingOnBehalfOf&&(url=ON_BEHALF_OF_STOP_URL),url?$http.post(url,{events:[{}]}).then(function(){impersonationSession.sessionStarted=!1,impersonationSession.actingAs=!1,impersonationSession.actingOnBehalfOf=!1,delete impersonationSession.sessionId,deferred.resolve(impersonationSession)}).catch(function(e){logger.error("Error occurred ending impersonation session",e),deferred.reject(e)}):deferred.reject("Impersonation mode could not be determined")):deferred.reject("Impersonation session has not started"),deferred.promise}function getSession(){return impersonationSession?$q.when(impersonationSession):userIdentityService.get().then(cacheSession)}function isImpersonating(){return void 0!==parseSessionId()}function parseSessionId(){var sessionId,url=decodeURIComponent($window.location.href).replace(/#(.*)/,""),actingSessionIdParam=ACTING_SESSION_ID_REGEX.exec(url);return actingSessionIdParam&&(sessionId=url.substring(actingSessionIdParam.index+22)),sessionId}var impersonationSession,logger=loggerFactory.getLogger("redbox.shared.services.ImpersonationService"),ACT_AS="ACT_AS",ACT_AS_STOP_URL="/redboxapi/events/core/v1/act-as.stop",ON_BEHALF_OF="ON_BEHALF_OF",ON_BEHALF_OF_STOP_URL="/redboxapi/events/core/v1/on-behalf-of.stop",ACTING_SESSION_ID="ADP-Acting-SessionID",ACTING_SESSION_ID_REGEX=/\?ADP-Acting-SessionID=/,PARAMS_REGEX=/\?.+=/;return{ACT_AS:ACT_AS,ON_BEHALF_OF:ON_BEHALF_OF,ACTING_SESSION_ID:ACTING_SESSION_ID,addActingSessionIdHeaderSync:addActingSessionIdHeader,addActingSessionIdParamSync:addActingSessionIdParam,endSession:endSession,getSession:getSession}}angular.module("redbox.shared.services").factory("redbox.shared.services.ImpersonationService",impersonationService),impersonationService.$inject=["$q","$window","$http","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserIdentityService"]}(),angular.module("redbox.shared.services").service("redbox.shared.services.NaturalLanguageFormService",["$http","$q",function($http,$q){var SERVICE_GET_URL="/redboxapi/core/v1/profile/associates/{associateoid}/forms/{type}",SERVICE_POST_URL="/redboxapi/core/events/v1/profile/associates/{associateoid}/forms.change",SERVICE_DELETE_URL="/redboxapi/core/events/v1/profile/associates/{associateoid}/forms.delete?type={type}",formCache={},promiseCache={},forms=[{type:"whatIDo",templateId:10005,selected:!1,text:"The one thing people don’t know about me is that //[secret]",options:[{id:"secret",type:"text",value:"I’m a world-champion dodgeball player"}],validation:{maxlength:140}},{type:"whatIDo",templateId:10001,selected:!1,text:"I work in //[department]//, I am responsible for //[jobDescription]",options:[{id:"department",type:"text",value:"my department"},{id:"jobDescription",type:"text",value:"my responsibilities"}],validation:{maxlength:140}},{type:"whatIDo",templateId:10002,selected:!1,text:"In the next //[time]// I want to //[accomplishment]// so that I can //[goal]",options:[{id:"time",type:"select",value:0,list:[{value:0,label:"week"},{value:1,label:"month"},{value:2,label:"year"}]},{id:"accomplishment",type:"text",value:"accomplish some goal"},{id:"goal",type:"text",value:"get a promotion"}],validation:{maxlength:140}},{type:"whatIDo",templateId:10003,selected:!1,text:"The best part about work is //[bestWorkPart]//, because //[motive]//",options:[{id:"bestWorkPart",type:"text",value:"the people"},{id:"motive",type:"text",value:"they are great"}],validation:{maxlength:140}},{type:"whatIDo",templateId:10004,selected:!1,text:"I feel //[mood]// today because //[motive]",options:[{id:"mood",type:"select",value:0,list:[{value:0,label:"great"},{value:1,label:"optimistic"},{value:2,label:"prepared"}]},{id:"motive",type:"text",value:"I set a company sales record yesterday"}],validation:{maxlength:140}}],clearGetCache=function(aoid,type){formCache[type]&&formCache[type][aoid]&&delete formCache[type][aoid],promiseCache[type]&&promiseCache[type][aoid]&&delete promiseCache[type][aoid]},readForm=function(){var marker,form=this,temp=form.text.replace(/\/\//g,"");return angular.forEach(form.options,function(option,index){marker="["+option.id+"]",temp="select"===option.type?temp.replace(marker,option.list[option.value].label):temp.replace(marker,option.value)}),temp},readFormOnTheFly=function(optionId,optionValue){var marker,tempValue,form=this,temp=form.text.replace(/\/\//g,"");return angular.forEach(form.options,function(option,index){marker="["+option.id+"]",tempValue="select"===option.type?option.id===optionId?optionValue:option.list[option.value].label:option.id===optionId?optionValue:option.value,temp=temp.replace(marker,tempValue)}),temp},API={getForms:function(type){var deferred=$q.defer(),promise=deferred.promise,returnForms=[];return angular.forEach(forms,function(form,index){form.type===type&&returnForms.push(angular.copy(form))}),deferred.resolve(returnForms),promise},getUserFormByType:function(aoid,type){var deferred=$q.defer();if(formCache[type]&&formCache[type][aoid])deferred.resolve(formCache[type][aoid]);else{if(promiseCache[type]&&promiseCache[type][aoid])return promiseCache[type][aoid].promise;formCache[type]||(formCache[type]={}),promiseCache[type]||(promiseCache[type]={}),promiseCache[type][aoid]=deferred;var configuration={headers:{"if-none-match":"any","loading-indicator":!1},aoid:aoid},url=SERVICE_GET_URL.replace("{associateoid}",aoid).replace("{type}",type);$http.get(url,configuration).then(function(results){formCache[type][aoid]=results.data,deferred.resolve(formCache[type][aoid])}).catch(function(error){deferred.reject(error)})}return deferred.promise},postUserForm:function(aoid,type,templateId,options){var deferred=$q.defer(),configuration={headers:{"loading-indicator":!1},aoid:aoid},payload={type:type,templateId:templateId,options:options},url=SERVICE_POST_URL.replace("{associateoid}",aoid);return $http.post(url,payload,configuration).then(function(results){deferred.resolve(results.data),clearGetCache(aoid,type)}).catch(function(error){deferred.reject(error)}),deferred.promise},deleteUserForm:function(aoid,type){var deferred=$q.defer(),configuration={headers:{"loading-indicator":!1},aoid:aoid},url=SERVICE_DELETE_URL.replace("{associateoid}",aoid).replace("{type}",type);return $http.delete(url,configuration).then(function(results){deferred.resolve(results.data),clearGetCache(aoid,type)}).catch(function(error){deferred.reject(error)}),deferred.promise}};return{getFormsByType:function(aoid,type){var deferred=$q.defer(),promise=deferred.promise;return API.getForms(type).then(function(formsResult){API.getUserFormByType(aoid,type).then(function(userForm){angular.forEach(formsResult,function(form,formIndex){form.templateId===userForm.templateId&&(angular.forEach(form.options,function(option,index){angular.forEach(userForm.options,function(value,key){option.id===key&&(formsResult[formIndex].options[index].value=value)})}),form.selected=!0),form.readForm=readForm,form.readFormOnTheFly=readFormOnTheFly}),deferred.resolve(formsResult)},function(_error){angular.forEach(formsResult,function(form,formIndex){form.readForm=readForm,form.readFormOnTheFly=readFormOnTheFly}),deferred.resolve(formsResult)})},function(error){deferred.resolve([])}),promise},getFormattedUserForm:function(aoid,type){var deferred=$q.defer(),promise=deferred.promise,getFormsPromise=API.getForms(type),getUserFormPromise=API.getUserFormByType(aoid,type);return $q.all([getFormsPromise,getUserFormPromise]).then(function(results){var formsResults=results[0],userForm=results[1],found=!1;angular.forEach(formsResults,function(form,formIndex){form.templateId===userForm.templateId&&(angular.forEach(form.options,function(option,index){angular.forEach(userForm.options,function(value,key){option.id===key&&(form.options[index].value=value)})}),form.readForm=readForm,form.readFormOnTheFly=readFormOnTheFly,found=!0,deferred.resolve(form))}),found===!1&&deferred.reject(null)},function(error){deferred.reject(error)}),promise},saveUserForm:function(aoid,form){var deferred=$q.defer(),promise=deferred.promise,templateId=form.templateId,type=form.type,options={};return angular.forEach(form.options,function(option,index){options[option.id]=option.value}),API.postUserForm(aoid,type,templateId,options).then(function(result){deferred.resolve(result)},function(error){deferred.reject(error)}),promise},clearUserForm:function(aoid,type){var deferred=$q.defer(),promise=deferred.promise;return API.deleteUserForm(aoid,type).then(function(result){deferred.resolve(result)},function(error){deferred.reject(error)}),promise}}}]),angular.module("redbox.shared.services").service("redbox.shared.services.ProfileService",["$http","$q","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserIdentityService",function($http,$q,loggerFactory,userIdentity){function resetProfileCache(){profileDeferred=null,profileWithImageDeferred=null,self.associateoid=null}function refreshProfileImageMeta(updateTypeStr){var logMsgPrefix="Profile image change type ("+updateTypeStr+").";resetProfileCache(),self.get().then(function(rsp){logger.info(logMsgPrefix+" Refreshed profile for image meta")},function(err){logger.info(logMsgPrefix+" Error refreshing profile for image meta: ",JSON.stringify(err,null,""))})}var profileDeferred,profileWithImageDeferred,PROFILE_URL="/redboxapi/core/profile/v1/associates/{associateoid}",PROFILE_IMAGE_URL="/redboxapi/core/profile/v1/associates/{associateoid}/images/{imageId}/bin",PROFILE_SILHOUETTE_URL="app/framework/img/silhouette-profile.jpg",TOUR_URL="/redboxapi/core/events/v1/profile/tour.change",logger=loggerFactory.getLogger("redbox.shared.services.ProfileService"),self=this;this.ImageType={PROFILE:"profile",SELF:"self",THUMBNAIL:"thumbnail",BACKGROUND:"background"},this.ImageMeta={PROPERTIES:{IMAGE_ID:"imageId",CONTENT_TYPE:"contentType",LAST_MOD:"lastModified",CONTENT:"content",CONTENT_LEN:"contentLength",SELECTED:"selected",HREF:"href",BIN_HREF:"binaryHref"}},this.get=function(){return profileDeferred?profileDeferred.promise:(profileDeferred=$q.defer(),logger.info("Retrieving user identity"),userIdentity.getAoid().then(function(aoid){return logger.info("User identity retrieved successfully. Retrieving user's profile."),$http.get(PROFILE_URL.replace("{associateoid}",aoid))}).then(function(result){logger.info("Profile retrieved successfully"),profileDeferred.resolve(result.data),self.associateoid=result.data.associateoid}).catch(function(error){logger.error("Error occurred retrieving profile",JSON.stringify(error)),profileDeferred.reject(error)}),profileDeferred.promise)},this.getWithImage=function(imageId){var profile,url;return imageId=imageId||this.ImageType.PROFILE,profileWithImageDeferred?profileWithImageDeferred.promise:(profileWithImageDeferred=$q.defer(),this.get().then(function(result){return profile=result,url=PROFILE_IMAGE_URL.replace("{associateoid}",profile.associateoid).replace("{imageId}",imageId),$http.get(url)}).then(function(result){result.data&&!_.isEmpty(result.data)&&(profile.imageUrls={},profile.imageUrls[imageId]=url),profileWithImageDeferred.resolve(profile)}).catch(function(error){404===error.status?(logger.warn("Image request returned a 404",JSON.stringify(error)),profileWithImageDeferred.resolve(profile)):(logger.error("Error occurred retrieving profile with image",JSON.stringify(error)),profile=profile||{},profile.imageUrls={},profile.imageUrls[imageId]=PROFILE_SILHOUETTE_URL,profileWithImageDeferred.resolve(profile))}),profileWithImageDeferred.promise)},this.getProfileForAssociate=function(aoid){var deferred=$q.defer(),promise=deferred.promise;if(self.associateoid&&self.associateoid===aoid)return profileDeferred.promise;var configuration={headers:{"loading-indicator":!1}},SERVICE_URL="/redboxapi/core/profile/v1/associates/{associateoid}",url=SERVICE_URL.replace("{associateoid}",aoid);return void 0===aoid||0===aoid.length?(logger.error("aoid is undefined or missing"),deferred.reject("aoid is undefined or missing!")):$http.get(url,configuration).then(function(results){deferred.resolve(results.data)}).catch(function(error){deferred.reject(error)}),promise},this.getImagesForAssociates=function(aoids){var configuration={headers:{"loading-indicator":!1}},url="/redboxapi/core/profile/v1/images?associateoids="+aoids.join(",");return $http.get(url,configuration).then(function(results){return results.data})},this.getImage=function(aoid,type){var configuration={headers:{"loading-indicator":!1}},SERVICE_URL="/redboxapi/core/profile/v1/associates/{associateoid}/images/"+type,url=SERVICE_URL.replace("{associateoid}",aoid);return $http.get(url,configuration).then(function(results){return results.data})};var fetchHttpApi=function(dfd,url){var configuration={headers:{"loading-indicator":!1}};$http.get(url,configuration).then(function(results){dfd.resolve(results.data)}).catch(function(error){dfd.reject(error)})},getMyImage=function(aoid,type,ppty){var uri,deferred=$q.defer();return self.getProfileForAssociate(aoid).then(function(results){results&&results.images&&results.images[type]?(uri=results.images[type][ppty],fetchHttpApi(deferred,uri)):deferred.reject({})},function(error){deferred.reject(error)}),deferred.promise};this.getProfileImageMeta=function(aoid){return getMyImage(aoid,self.ImageType.PROFILE,self.ImageMeta.PROPERTIES.HREF)},this.getProfileImageBin=function(aoid){return getMyImage(aoid,self.ImageType.PROFILE,self.ImageMeta.PROPERTIES.BIN_HREF)},this.getBackgroundImageMeta=function(aoid){return getMyImage(aoid,self.ImageType.BACKGROUND,self.ImageMeta.PROPERTIES.HREF)},this.getBackgroundImageBin=function(aoid){return getMyImage(aoid,self.ImageType.BACKGROUND,self.ImageMeta.PROPERTIES.BIN_HREF)},this.setImage=function(aoid,type,dataUrl){var imageType=dataUrl.slice(dataUrl.indexOf(":")+1,dataUrl.indexOf(";")),imageUrl=dataUrl.slice(dataUrl.indexOf(",")+1),payload={content:imageUrl,contentType:imageType},SERVICE_URL="/redboxapi/core/profile/v1/associates/{associateoid}/images/"+type,url=SERVICE_URL.replace("{associateoid}",aoid);return $http.post(url,payload).then(function(results){return refreshProfileImageMeta("UPDATE"),results.data})},this.setTourStatus=function(data){var payload={tour:data};return $http.post(TOUR_URL,payload).then(function(results){return resetProfileCache(),results.data})},this.deleteImage=function(url){var configuration={headers:{"loading-indicator-delay":600}};return $http.delete(url,configuration).then(function(results){return refreshProfileImageMeta("REMOVE"),results.data})},this.getImageGallery=function(aoid,type){var configuration={headers:{"loading-indicator-delay":600}},SERVICE_URL="/redboxapi/core/profile/v1/associates/{associateoid}/images/"+type+"/gallery",url=SERVICE_URL.replace("{associateoid}",aoid);return $http.get(url,configuration).then(function(results){return results.data})}}]),function(){function serverPingService(Config,sessionStoreService,sessionTimeoutService){function startPingService(){stopPingService(),lastPingTime=new Date,$("body").on(getEventsString(),ping)}function stopPingService(){$("body").off(getEventsString())}function ping(){var curMoment=new Date;curMoment-lastPingTime>=Config.serverPingService.pingTime&&!sessionTimeoutService.dialogIsOpen()&&(lastPingTime=curMoment,sessionStoreService.ensureSessionIsValid())}function getEventsString(){return Config.serverPingService.events.map(function(evt){return evt+".serverPingService"}).join(" ")}var lastPingTime;return{start:startPingService,stop:stopPingService}}angular.module("redbox.shared.services").factory("redbox.shared.services.ServerPingService",serverPingService),serverPingService.$inject=["redbox.shared.constants.AppConstant","redbox.ext.shared.services.SessionService","redbox.shared.services.SessionTimeoutService"]}(),function(){function sessionTimeoutService($q,$adpModal,$language,sessionStoreService,loggerFactory){function openDialog(expectedLogoutDate){var templateUrl;return dateHasPassed(expectedLogoutDate)?(logger.info("timeout service - openDialog called but past logout time"),sessionStoreService.ensureSessionIsValid(),$q.reject()):timeoutDialogIsOpen?void 0:(templateUrl="app/framework/views/session-timeout-modal.html",$adpModal.fetchTemplate(templateUrl).then(function(template){var modal;return logger.info("timeout service - dialog opened"),timeoutDialogIsOpen=!0,modal=$adpModal.open({content:template,size:"",closeable:!1,title:$language.get("framework.SESSION_TIMEOUT_WARNING"),backdrop:"static",closeLabel:$language.get("framework.SESSION_TIMEOUT_CHOICE_YES"),dismissLabel:$language.get("framework.SESSION_TIMEOUT_CHOICE_NO"),resolve:{completionTime:function(){return expectedLogoutDate}},controllerAs:"SessionTimeoutDialogCtrl",controller:"redbox.shell.SessionTimeoutDialogCtrl"}),modal.result.then(sessionStoreService.ensureSessionIsValid.bind(sessionStoreService),sessionStoreService.logout.bind(sessionStoreService)).finally(function(){timeoutDialogIsOpen=!1}),modal}))}function dialogIsOpen(){return timeoutDialogIsOpen}function dateHasPassed(date){return moment().isAfter(moment(date))}var timeoutDialogIsOpen=!1,logger=loggerFactory.getLogger("redbox.shared.services.SessionTimeoutService");return{openDialog:openDialog,dialogIsOpen:dialogIsOpen}}angular.module("redbox.shared.services").factory("redbox.shared.services.SessionTimeoutService",sessionTimeoutService),sessionTimeoutService.$inject=["$q","adp.ng.ui.modal.adpModalService","$language","redbox.ext.shared.services.SessionService","adp.ng.logging.LoggerFactory"]}(),function(){function staticUrlService($window,appConstants){function format(url){var _url,versionParam="?"+appConstants.buildVersion;return url.indexOf(REDBOX_API)>-1||HTTP_REGEX.test(url)||url.indexOf(API_PROXY)>-1?_url=url:(url.indexOf(versionParam)>-1&&(versionParam=""),_url=$window.location.href.match(VERSION_REGEX)?appConstants.staticDomainUrl+url+versionParam:appConstants.buildVersion&&appConstants.buildVersion.indexOf("_")===-1?appConstants.staticDomainUrl+url+versionParam:url),_url}var VERSION_REGEX=/\d{1,2}\.\d{1,2}\.\d{1,2}(\.\d{1,2})?/,HTTP_REGEX=/^https?:\/\//,REDBOX_API="redboxapi",API_PROXY="v1_0/O";return{format:format}}angular.module("redbox.shared.services").factory("redbox.shared.services.StaticUrlService",staticUrlService),staticUrlService.$inject=["$window","redbox.shared.constants.AppConstant"]}(),angular.module("redbox.shared.services").factory("redbox.shared.services.TalentPermissionService",["$injector",function($injector){function TalentPermissions(){this.certificationManagement={},this.competencyManagement={},this.educationalDegreeManagement={},this.languageManagement={},this.licenseManagement={},this.membershipManagement={},this.recognitionManagement={},this.performanceManagement={},this.careerDevelopmentManagement={},this.learningManagement={},this.careerSearch={}}var $q=$injector.get("$q"),ups=$injector.get("redbox.ext.shared.services.UserPermissionService"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=loggerFactory.getLogger("redbox.shared.services.TalentPermissionService"),TALENT_OPERATIONS=$injector.get("redbox.shared.constants.TALENT_OPERATIONS"),API={getPermissions:function(aoid){var perms,deferred=$q.defer(),promise=deferred.promise;try{ups.init().then(function(){perms=new TalentPermissions,perms.certificationManagement.read=ups.hasPermission(TALENT_OPERATIONS.certificationManagement.read,aoid),perms.certificationManagement.add=ups.hasPermission(TALENT_OPERATIONS.certificationManagement.add,aoid),perms.certificationManagement.change=ups.hasPermission(TALENT_OPERATIONS.certificationManagement.change,aoid),perms.certificationManagement.remove=ups.hasPermission(TALENT_OPERATIONS.certificationManagement.remove,aoid),perms.competencyManagement.read=ups.hasPermission(TALENT_OPERATIONS.competencyManagement.read,aoid),perms.competencyManagement.add=ups.hasPermission(TALENT_OPERATIONS.competencyManagement.add,aoid),perms.competencyManagement.change=ups.hasPermission(TALENT_OPERATIONS.competencyManagement.change,aoid),perms.competencyManagement.remove=ups.hasPermission(TALENT_OPERATIONS.competencyManagement.remove,aoid),perms.educationalDegreeManagement.read=ups.hasPermission(TALENT_OPERATIONS.educationalDegreeManagement.read,aoid),perms.educationalDegreeManagement.add=ups.hasPermission(TALENT_OPERATIONS.educationalDegreeManagement.add,aoid),perms.educationalDegreeManagement.change=ups.hasPermission(TALENT_OPERATIONS.educationalDegreeManagement.change,aoid),perms.educationalDegreeManagement.remove=ups.hasPermission(TALENT_OPERATIONS.educationalDegreeManagement.remove,aoid),perms.languageManagement.read=ups.hasPermission(TALENT_OPERATIONS.languageManagement.read,aoid),perms.languageManagement.add=ups.hasPermission(TALENT_OPERATIONS.languageManagement.add,aoid),perms.languageManagement.change=ups.hasPermission(TALENT_OPERATIONS.languageManagement.change,aoid),perms.languageManagement.remove=ups.hasPermission(TALENT_OPERATIONS.languageManagement.remove,aoid),perms.licenseManagement.read=ups.hasPermission(TALENT_OPERATIONS.licenseManagement.read,aoid),perms.licenseManagement.add=ups.hasPermission(TALENT_OPERATIONS.licenseManagement.add,aoid),perms.licenseManagement.change=ups.hasPermission(TALENT_OPERATIONS.licenseManagement.change,aoid),perms.licenseManagement.remove=ups.hasPermission(TALENT_OPERATIONS.licenseManagement.remove,aoid),perms.membershipManagement.read=ups.hasPermission(TALENT_OPERATIONS.membershipManagement.read,aoid),perms.membershipManagement.add=ups.hasPermission(TALENT_OPERATIONS.membershipManagement.add,aoid),perms.membershipManagement.change=ups.hasPermission(TALENT_OPERATIONS.membershipManagement.change,aoid),perms.membershipManagement.remove=ups.hasPermission(TALENT_OPERATIONS.membershipManagement.remove,aoid),perms.recognitionManagement=ups.hasPermission(TALENT_OPERATIONS.recognitionManagement,aoid),perms.performanceManagement=ups.hasPermission(TALENT_OPERATIONS.performanceManagement.read,aoid),perms.careerDevelopmentManagement=ups.hasPermission(TALENT_OPERATIONS.careerDevelopmentManagement.read,aoid),perms.learningManagement=ups.hasPermission(TALENT_OPERATIONS.learningManagement.read,aoid),perms.careerSearch=ups.hasPermission(TALENT_OPERATIONS.careerSearch.read,aoid),deferred.resolve(perms)})}catch(e){logger.error("TalentPermissionService: exception caught",e),deferred.reject(e)}return promise}};return API}]),angular.module("redbox.shared.services").constant("redbox.shared.services.WINDOW_BREAKPOINT",{XS:"XS",SM:"SM",MD:"MD",LG:"LG"}).factory("redbox.shared.services.WindowResizeService",["$rootScope","$window","redbox.shared.constants.AppConstant","redbox.shared.services.WINDOW_BREAKPOINT",function($rootScope,$window,config,WINDOW_BREAKPOINT){function getWindowState(){return $window.innerWidth<config.smWidth?WINDOW_BREAKPOINT.XS:$window.innerWidth<config.mdWidth?WINDOW_BREAKPOINT.SM:$window.innerWidth<config.lgWidth?WINDOW_BREAKPOINT.MD:WINDOW_BREAKPOINT.LG;
}function visibleXS(){return windowState===WINDOW_BREAKPOINT.XS}function visibleSM(){return windowState===WINDOW_BREAKPOINT.SM}function visibleMD(){return windowState===WINDOW_BREAKPOINT.MD}function visibleLG(){return windowState===WINDOW_BREAKPOINT.LG}function hiddenXS(){return windowState!==WINDOW_BREAKPOINT.XS}function hiddenSM(){return windowState!==WINDOW_BREAKPOINT.SM}function hiddenMD(){return windowState!==WINDOW_BREAKPOINT.MD}function hiddenLG(){return windowState!==WINDOW_BREAKPOINT.LG}var windowState=getWindowState();return angular.element($window).resize(function(){return windowState=getWindowState(),$rootScope.$broadcast("window-changed",{view:windowState}),windowState}),{getWindowState:getWindowState,visibleXS:visibleXS,visibleSM:visibleSM,visibleMD:visibleMD,visibleLG:visibleLG,hiddenXS:hiddenXS,hiddenSM:hiddenSM,hiddenMD:hiddenMD,hiddenLG:hiddenLG}}]),angular.module("redbox.shared.utils").service("redbox.shared.utils.BackdropUtils",[function(){function buildConfig(configuration){return _.assign({targetElement:"body",borderHex:"#000",borderRGB:{r:0,g:0,b:0},shape:"rectangle",padding:[5,5,5,5],radius:5,clickThrough:!1,fadeIn:!0,endCallback:function(){}},configuration)}function getClickPosition(e){var parentPosition=getPosition(e.currentTarget),xPosition=e.clientX-parentPosition.x,yPosition=e.clientY-parentPosition.y;return{x:xPosition,y:yPosition}}function getPosition(element){for(var xPosition=0,yPosition=0;element;)xPosition+=element.offsetLeft-element.scrollLeft+element.clientLeft,yPosition+=element.offsetTop-element.scrollTop+element.clientTop,element=element.offsetParent;return{x:xPosition,y:yPosition}}var canvas,offset,elLeft,elTop,width,height,elRight,elBottom,self=this,mouseMoveFnc=function(e){var clickPosition={x:e.clientX+window.pageXOffset,y:e.clientY+window.pageYOffset};clickPosition.x>elLeft&&clickPosition.x<elRight&&clickPosition.y>elTop&&clickPosition.y<elBottom?$(canvas).css("pointer-events","none"):$(canvas).css("pointer-events","all")};this.showBackdrop=function(configuration){var config=buildConfig(configuration);canvas=document.createElement("canvas");var ctx=canvas.getContext("2d"),windowWidth=_.get(config,"customSize.width",$(document).width()),windowHeight=_.get(config,"customSize.height",$(document).height()),$body=$("body"),$el=$(config.targetElement);canvas.id="canvas-backdrop",canvas.width=windowWidth,canvas.height=windowHeight,canvas.style.opacity=0,$body.append(canvas),offset=$el.offset(),elLeft=offset.left,elTop=offset.top,width=$el.outerWidth(),height=$el.outerHeight(),elRight=elLeft+width,elBottom=elTop+height;var elDiameter=Math.sqrt(Math.pow(width,2)+Math.pow(height,2)),padding=config.padding,circlePadding=padding?padding[0]:0,paddingTop=padding?padding[0]:0,paddingRight=padding?padding[1]:0,paddingBottom=padding?padding[2]:0,paddingLeft=padding?padding[3]:0,xCenter=(elLeft+elRight)/2,yCenter=(elBottom+elTop)/2,elShape=config.shape;if(ctx.beginPath(),ctx.moveTo(-4,-4),ctx.lineTo(windowWidth+8,-4),ctx.lineTo(windowWidth+8,windowHeight+8),ctx.lineTo(-4,windowHeight+8),ctx.lineTo(-4,-4),ctx.closePath(),"circle"===elShape){var paddedRadius=elDiameter/2+circlePadding;ctx.moveTo(xCenter+paddedRadius,elTop+height/2),ctx.arc(xCenter,yCenter,paddedRadius,0,2*Math.PI,!0);var grd=ctx.createRadialGradient(xCenter,yCenter,paddedRadius-2,xCenter,yCenter,paddedRadius+2);grd.addColorStop(0,"rgba("+config.borderRGB.r+","+config.borderRGB.g+","+config.borderRGB.b+",.0)"),grd.addColorStop(1,config.borderHex),ctx.strokeStyle=grd,ctx.lineWidth=4,ctx.stroke(),ctx.closePath()}else if("rectangle"===elShape){var radius=config.radius,elRadius=elDiameter/2,top=elTop-paddingTop,right=elRight+paddingRight,bottom=elBottom+paddingBottom,left=elLeft-paddingLeft;ctx.moveTo(left,top+radius),ctx.lineTo(left,bottom-radius),ctx.quadraticCurveTo(left,bottom,left+radius,bottom),ctx.lineTo(right-radius,bottom),ctx.quadraticCurveTo(right,bottom,right,bottom-radius),ctx.lineTo(right,top+radius),ctx.quadraticCurveTo(right,top,right-radius,top),ctx.lineTo(left+radius,top),ctx.quadraticCurveTo(left,top,left,top+radius);var gradient=ctx.createRadialGradient(xCenter,yCenter,.05*elRadius,xCenter,yCenter,1.5*elRadius);gradient.addColorStop(0,"rgba("+config.borderRGB.r+","+config.borderRGB.g+","+config.borderRGB.b+",.0)"),gradient.addColorStop(1,"rgba("+config.borderRGB.r+","+config.borderRGB.g+","+config.borderRGB.b+",1)"),ctx.strokeStyle="rgba("+config.borderRGB.r+","+config.borderRGB.g+","+config.borderRGB.b+",.75)",ctx.lineWidth=2,ctx.stroke(),ctx.closePath()}ctx.fillStyle="rgba(0,0,0,.8)",ctx.fill(),config.fadeIn?$(canvas).animate({opacity:100},500,function(){config.endCallback()}):($(canvas).css("opacity",100),config.endCallback()),config.clickThrough&&($(document).on("mousemove",mouseMoveFnc),$(canvas).on("click",function(e){var clickPosition=getClickPosition(e);if(clickPosition.x>elLeft&&clickPosition.x<elRight&&clickPosition.y>elTop&&clickPosition.y<elBottom){$(canvas).hide();var element=document.elementFromPoint(e.clientX,e.clientY);$(canvas).show(),$(element).trigger("click")}}))},this.hideBackdrop=function(){$("#canvas-backdrop").remove(),$(document).off("mousemove",mouseMoveFnc)},this.fadeBackdrop=function(callback){callback||(callback=function(){},$(document).off("mousemove",mouseMoveFnc)),$("#canvas-backdrop").animate({opacity:0},300,callback)},this.fadeAndHideBackdrop=function(){self.fadeBackdrop(self.hideBackdrop)},this.transparentBackdrop=function(){if(canvas=document.getElementById("canvas-backdrop")){var ctx=canvas.getContext("2d");ctx.clearRect(0,0,$(document).width(),$(document).height())}}}]),angular.module("redbox.shared.utils").constant("redbox.shared.utils.UPLOADABLE_IMAGE_IDS",{BRANDING_HEADER_BG:"headerBg",BRANDING_HEADER_LOGO:"headerLogo",BRANDING_LOGIN_BG:"loginBg",PROFILE_HEADSHOT:"profileHeadshot",PROFILE_HEADER_BG:"profileHeaderBg"}).factory("redbox.shared.utils.ImageUtils",["$q","$http","$language","adp.ng.logging.LoggerFactory","redbox.shared.utils.UPLOADABLE_IMAGE_IDS","redbox.shared.constants.AllowedUploadableFileExtensionsConstant",function($q,$http,$language,loggerFactory,UPLOADABLE_IMAGE_IDS,allowedFileExtensions){function isBrowserWithFileAPIs(){var rsp=!!(window.File&&window.FileReader&&window.FileList&&window.Blob);return rsp}function getSupportedFileTypesMessage(fileTypes){var supportedFileTypes=angular.copy(fileTypes),message=supportedFileTypes.join(", ");return message}function fetchImageWithHref(imageHref){return imageHref?$http.get(imageHref).then(function(imageObjResponse){return imageObjResponse}).catch(function(error){return logger.error("fetchImageWithHref get () error : ",error),$q.reject(error)}):(logger.error("fetchImageWithHref - missing imageHref"),$q.reject(new Error("missing imageHref")))}function getUploadableImageProperties(){function getImageUploadTip(sizeLimit,width,height){var imageRestrictions={LIMIT:sizeLimit+SIZE_MEASUREMENT,WIDTH:width+DIMENSION_MEASUREMENT,HEIGHT:height+DIMENSION_MEASUREMENT,FILE_TYPES:SUPPORTED_IMAGE_FILE_TYPES_STR};return $language.get("framework.ADMIN_BRANDING_IMAGE_TIPS",imageRestrictions)}return uploadableImageProperties||(uploadableImageProperties={},uploadableImageProperties[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_BG]=new function(){this.sizeLimitInMb=IMAGE_SIZE_LIMITS_MB.LG,this.uploadTipsMsg=getImageUploadTip(this.sizeLimitInMb,IMAGE_DIMENSIONS.LG.WIDTH,IMAGE_DIMENSIONS.LG.HEIGHT)},uploadableImageProperties[UPLOADABLE_IMAGE_IDS.BRANDING_LOGIN_BG]=new function(){this.sizeLimitInMb=IMAGE_SIZE_LIMITS_MB.LG,this.uploadTipsMsg=getImageUploadTip(this.sizeLimitInMb,IMAGE_DIMENSIONS.LG.WIDTH,IMAGE_DIMENSIONS.LG.HEIGHT)},uploadableImageProperties[UPLOADABLE_IMAGE_IDS.BRANDING_HEADER_LOGO]=new function(){this.sizeLimitInMb=IMAGE_SIZE_LIMITS_MB.MD,this.uploadTipsMsg=getImageUploadTip(this.sizeLimitInMb,IMAGE_DIMENSIONS.MD.WIDTH,IMAGE_DIMENSIONS.MD.HEIGHT)},uploadableImageProperties[UPLOADABLE_IMAGE_IDS.PROFILE_HEADSHOT]=new function(){this.sizeLimitInMb=IMAGE_SIZE_LIMITS_MB.MD,this.uploadTipsMsg=getImageUploadTip(this.sizeLimitInMb,IMAGE_DIMENSIONS.SM.WIDTH,IMAGE_DIMENSIONS.SM.HEIGHT)},uploadableImageProperties[UPLOADABLE_IMAGE_IDS.PROFILE_HEADER_BG]=new function(){this.sizeLimitInMb=IMAGE_SIZE_LIMITS_MB.LG,this.uploadTipsMsg=getImageUploadTip(this.sizeLimitInMb,IMAGE_DIMENSIONS.LG.WIDTH,IMAGE_DIMENSIONS.LG.HEIGHT)}),uploadableImageProperties}function pathStrUtilityHandler(label,pathStr,fn){var rsp="null";try{rsp=fn(pathStr)}catch(e){logger.error(label+" - exception : ",e)}return rsp}function getImageContentFromBase64Url(paramStr){var rsp="null";try{rsp=paramStr.slice(paramStr.indexOf(",")+1)}catch(e){logger.error("getImageContentFromBase64Url - exception : ",e)}return rsp}function getImageContentTypeFromBase64Url(paramStr){var rsp="null";try{rsp=paramStr.slice(paramStr.indexOf(":")+1,paramStr.indexOf(";"))}catch(e){logger.error("getImageContentTypeFromBase64Url - exception : ",e)}return rsp}function isUsingChromeMac(){return"chrome"===Detectizr.browser.name&&"mac os"===Detectizr.os.name}function getFilenameStrForBrowserEdgeCases(file){var fileName=file;return file.name&&(isUsingChromeMac()?fileName=file.name:logger.error("warning (getFilenameStrForBrowserEdgeCases) expecting filename string : ",file)),fileName}function getFileExtFromImagePath(imagePath){return imagePath=getFilenameStrForBrowserEdgeCases(imagePath),pathStrUtilityHandler("getFileExtFromImagePath",imagePath,function(paramStr){var extension=paramStr.substring(paramStr.lastIndexOf(".")+1).toLowerCase();return extension.indexOf("?")>-1&&(extension=extension.substring(0,extension.indexOf("?"))),extension})}function getFileExtFromImageTypeStr(imageType){return pathStrUtilityHandler("getFileExtFromImageTypeStr",imageType,function(paramStr){return paramStr.slice(paramStr.indexOf("/")+1)})}function getBase64ImageUrlFromContentAndType(imageType,imageContent){return"data:"+imageType+";base64,"+imageContent}function validateImageForUpload(selectedFileObj,imageId,sizeLimit,allowDocs){function validateImgTypeForFileObj(imgFile,isParamFileApiObj){var fileExtension,isImgOfValidType=!1,supportedFileExtensions=allowDocs?SUPPORTED_FILE_TYPES:SUPPORTED_IMAGE_FILE_TYPES;return(!isParamFileApiObj||imgFile.type.match("image.*")||allowDocs)&&(fileExtension=isParamFileApiObj?getFileExtFromImageTypeStr(imgFile.type):getFileExtFromImagePath(imgFile),logger.info("validateImgTypeForFileObj. check if supported fileExtension = ",fileExtension),_.contains(supportedFileExtensions,fileExtension)&&(isImgOfValidType=!0)),isImgOfValidType}var sizeLimitInMb,alertMsg=null,isSelFileParamFileApiObj=!angular.isString(selectedFileObj)&&selectedFileObj.type;return uploadableImageProperties||getUploadableImageProperties(),sizeLimitInMb=sizeLimit?sizeLimit:uploadableImageProperties[imageId].sizeLimitInMb,logger.info("validateImageForUpload. selectedFileObj = ",selectedFileObj),isSelFileParamFileApiObj&&selectedFileObj.size/1e6>sizeLimitInMb?alertMsg=allowDocs?$language.get("framework.ADMIN_COMPANY_DOCUMENTS_FILE_SIZE_ERROR",{LIMIT:sizeLimitInMb+SIZE_MEASUREMENT}):$language.get("framework.ADMIN_BRANDING_IMAGE_SIZE_ERROR",{LIMIT:sizeLimitInMb+SIZE_MEASUREMENT}):validateImgTypeForFileObj(selectedFileObj,isSelFileParamFileApiObj)||(alertMsg=allowDocs?$language.get("shared.FILE_TYPE_ERROR",{FILE_TYPES:SUPPORTED_IMAGE_FILE_TYPES_STR+", "+SUPPORTED_FILE_TYPES_STR}):$language.get("framework.ADMIN_BRANDING_IMAGE_TYPE_ERROR",{FILE_TYPES:SUPPORTED_IMAGE_FILE_TYPES_STR})),logger.info("validateImageForUpload. error found : ",alertMsg),alertMsg}function validateFileForUpload(selectedFileObj,sizeLimit){var sizeLimitInMb=sizeLimit?sizeLimit:32;return validateImageForUpload(selectedFileObj,null,sizeLimitInMb,!0)}function getBase64ImageUrlFromBrowserFileObj(selectedFileObj){var reader,deferred=$q.defer();return isBrowserWithFileAPIs()&&(reader=new window.FileReader,reader.onloadend=function(){var alertMsg;reader.error?(logger.error("getBase64ImageUrlFromBrowserFileObj() reader.error : ",reader.error),alertMsg=$language.get("framework.ADMIN_BRANDING_IMAGE_BROWSERAPI_ERROR",{IMAGE_NAME:selectedFileObj.name}),deferred.reject({error:reader.error,msg:alertMsg})):(logger.info("getBase64ImageUrlFromBrowserFileObj() success"),deferred.resolve(reader.result))},reader.readAsDataURL(selectedFileObj)),deferred.promise}function getDataUrlFromFile(imgUrl,contentType){var deferred=$q.defer();return contentType=contentType||"image/"+getFileExtFromImagePath(imgUrl),getBase64FromFile(imgUrl).then(function(base64){deferred.resolve(getBase64ImageUrlFromContentAndType(contentType,base64))}).catch(function(error){deferred.reject(error),logger.error("getDataUrlFromFile",error)}),deferred.promise}function getBase64FromFile(imgUrl){var _imgUrl,url,extension,params,deferred=$q.defer();return imgUrl.indexOf("?")>-1?(url=imgUrl.substring(0,imgUrl.indexOf("?")),params=imgUrl.substring(imgUrl.indexOf("?"))):(url=imgUrl,params=""),extension=url.substring(url.lastIndexOf(".")+1),_imgUrl=url.replace("."+extension,"-base64.txt")+params,logger.debug("_imgUrl",_imgUrl),$http.get(_imgUrl).then(function(response){deferred.resolve(response.data)}).catch(function(error){deferred.reject(error),logger.error("getBase64FromFile",error)}),deferred.promise}var uploadableImageProperties,logger=loggerFactory.getLogger("redbox.shared.utils.ImageUtils"),IMAGE_SIZE_LIMITS_MB={MD:1,LG:2},IMAGE_DIMENSIONS={SM:{WIDTH:200,HEIGHT:200},MD:{WIDTH:430,HEIGHT:100},LG:{WIDTH:1e3,HEIGHT:750}},SUPPORTED_IMAGE_FILE_TYPES=["png","jpeg","jpg","gif","svg"],SUPPORTED_FILE_TYPES=SUPPORTED_IMAGE_FILE_TYPES.concat(allowedFileExtensions.documents),SUPPORTED_IMAGE_FILE_TYPES_STR=getSupportedFileTypesMessage(SUPPORTED_IMAGE_FILE_TYPES),SUPPORTED_FILE_TYPES_STR=getSupportedFileTypesMessage(allowedFileExtensions.documentExtensionLabels),DIMENSION_MEASUREMENT="px",SIZE_MEASUREMENT="MB";return{fetchImageWithHref:fetchImageWithHref,getUploadableImageProperties:getUploadableImageProperties,getImageContentFromBase64Url:getImageContentFromBase64Url,getImageContentTypeFromBase64Url:getImageContentTypeFromBase64Url,getBase64ImageUrlFromContentAndType:getBase64ImageUrlFromContentAndType,getBase64ImageUrlFromBrowserFileObj:getBase64ImageUrlFromBrowserFileObj,validateImageForUpload:validateImageForUpload,validateFileForUpload:validateFileForUpload,getDataUrlFromFile:getDataUrlFromFile,getBase64FromFile:getBase64FromFile,isModernBrowserWithFileAPIs:isBrowserWithFileAPIs()}}]),function(){function AppCtrl($state,$injector,menuService,sessionStore,userPermissionService,loggerFactory,onboardingService,clientDeviceService){function startTour(){clientDeviceService.isNative()||$state.go("dashboard").finally(function(){tourService.initWithName("general").then(tourService.startTour)})}function logout(){sessionStore.logout()}var tourService,logger=loggerFactory.getLogger("redbox.shell.AppCtrl"),vm=this;vm.appHas={search:!1,dashboard:!1},vm.startTour=startTour,vm.logout=logout,vm.inOnboarding=onboardingService.inOnboarding,function(){vm.isNative=clientDeviceService.isNative(),clientDeviceService.isNative()||(tourService=$injector.get("redbox.tour.TourService")),userPermissionService.init().then(function(){vm.appHas.search=userPermissionService.hasSearch(),logger.debug("Has search?",vm.appHas.search)}).catch(function(errors){logger.error("Error occurred retrieving permissions",JSON.stringify(errors))}),menuService.hasDashboard().then(function(response){vm.appHas.dashboard=response,logger.debug("Has dashboard?",vm.appHas.dashboard)}).catch(function(errors){logger.error("Error occurred retrieving hasDashboard",JSON.stringify(errors))})}()}angular.module("redbox.shell").controller("redbox.shell.AppCtrl",AppCtrl),AppCtrl.$inject=["$state","$injector","redbox.framework.menu.MenuService","redbox.ext.shared.services.SessionService","redbox.ext.shared.services.UserPermissionService","adp.ng.logging.LoggerFactory","redbox.onboarding.common.OnboardingService","adp.ng.utilities.ClientDeviceService"]}(),function(){function FooterCtrl($rootScope,appConstants){var vm=this,COPYRIGHT_START="2014-",COPYRIGHT_END=" ADP, LLC.";vm.buildVersion=appConstants.buildVersion,vm.copyright=COPYRIGHT_START+moment().year()+COPYRIGHT_END,vm.lang=$rootScope.lang}angular.module("redbox.framework.footer",["adp.ng.language","redbox.shared.constants"]).controller("redbox.framework.footer.FooterCtrl",FooterCtrl),FooterCtrl.$inject=["$rootScope","redbox.shared.constants.AppConstant"]}(),function(){function HeaderProfileCtrl($q,$location,$state,profileService,loggerFactory,userPermissionService,userIdentity,impersonationService,menuService){function goToProfile(){userIdentity.getAoid().then(function(aoid){aoid&&($location.path().indexOf("/profile/")!==-1?$state.go("profile.view",{associateOID:aoid},{reload:!0}):$location.path("/profile/"+aoid))})}var logger=loggerFactory.getLogger("redbox.shell.HeaderProfileCtrl"),vm=this;vm.profile={},vm.goToProfile=goToProfile,vm.showSettings=!0,vm.showProfileMenu=!0,function(){$q.all([profileService.get(),impersonationService.getSession(),menuService.hasDashboard()]).then(function(response){logger.info("Profile retrieved successfully");var impersonationSession=response[1]||{},showDashboard=response[2];vm.profile=response[0],vm.profile.hasWorkerProfile=userPermissionService.hasWorkerProfile(),impersonationSession.actingOnBehalfOf&&(vm.showSettings=!1),logger.debug("showSettings?",vm.showSettings),logger.debug("impersonationSession?",impersonationSession),logger.debug("showDashboard?",showDashboard),!impersonationSession.actingOnBehalfOf||vm.showSettings||showDashboard||(vm.showProfileMenu=!1)}).catch(function(e){logger.error("Error occurred retrieving profile",e)})}()}angular.module("redbox.shell").controller("redbox.shell.HeaderProfileCtrl",HeaderProfileCtrl),HeaderProfileCtrl.$inject=["$q","$location","$state","redbox.ext.shared.services.ProfileService","adp.ng.logging.LoggerFactory","redbox.ext.shared.services.UserPermissionService","redbox.ext.shared.services.UserIdentityService","redbox.shared.services.ImpersonationService","redbox.framework.menu.MenuService"]}(),function(){function ImpersonationWarningCtrl($scope,$q,$window,$adpModal,$language,impersonationService,profileService,clientService,loggerFactory){function endSession(){logger.info("Ending impersonation session"),impersonationService.endSession().finally(function(){$window.close()})}function showEndSessionConfirmation(){var endSessionText=$language.get("framework.END_SESSION");$adpModal.open({scope:$scope,title:endSessionText,closeLabel:endSessionText,closeClick:endSession,dismissLabel:$language.get("shared.CANCEL"),content:'<div class="text-center"><h4>'+$language.get("framework.END_SESSION_CONFIRM")+"</h4></div>"})}function showActionNotAllowedMessage(){$adpModal.open({scope:$scope,title:$language.get("framework.IMPERSONATION_CHANGES_NOT_SAVED"),type:"warning",dismissButton:!1,closeLabel:$language.get("shared.OK_GOT_IT"),content:"<div>"+$language.get("framework.IMPERSONATION_ACTION_UPDATE_NOT_SAVED")+"</div>"})}function toggleWarning(){vm.expandWarning=!vm.expandWarning}var logger=loggerFactory.getLogger("redbox.shell.ImpersonationWarningCtrl"),vm=this;vm.showActingWarning=!1,vm.expandWarning=!0,vm.isActingAs=!1,vm.isActingOnBehalfOf=!1,vm.showEndSessionConfirmation=showEndSessionConfirmation,vm.toggleWarning=toggleWarning,function(){$q.all([profileService.get(),clientService.getClient(),impersonationService.getSession()]).then(function(response){vm.profileName=_.get(response[0],"name.formatted"),vm.clientName=_.get(response[1],"name"),response[2]&&(vm.isActingAs=response[2].actingAs,vm.isActingOnBehalfOf=response[2].actingOnBehalfOf,vm.isActingAs&&$scope.$on("ACT_AS_INTERCEPTOR_HTTP_REQUEST_BLOCKED",function(){showActionNotAllowedMessage()}))}).catch(function(e){logger.error("Error occurred retrieving username and client",e)})}()}angular.module("redbox.shell").controller("redbox.shell.ImpersonationWarningCtrl",ImpersonationWarningCtrl),ImpersonationWarningCtrl.$inject=["$scope","$q","$window","adp.ng.ui.modal.adpModalService","$language","redbox.shared.services.ImpersonationService","redbox.ext.shared.services.ProfileService","redbox.shared.services.ClientService","adp.ng.logging.LoggerFactory"]}(),function(){function SessionTimeoutDialogCtrl($interval,$modalInstance,completionTime){function getCountdownTime(curDate,time){var countdownObject={};return countdownObject.totalSeconds=Math.floor(moment.duration(time-curDate).asSeconds()),countdownObject.totalSeconds=countdownObject.totalSeconds<0?0:countdownObject.totalSeconds,countdownObject.minutes=Math.floor(countdownObject.totalSeconds/60),countdownObject.seconds=countdownObject.totalSeconds%60,countdownObject}function cancelInterval(){$interval.cancel(countdownInterval)}var countdownInterval,vm=this;vm.countdown=getCountdownTime(new Date,completionTime),vm.countdown.totalSeconds<=0?$modalInstance.close():countdownInterval=$interval(function(){vm.countdown=getCountdownTime(new Date,completionTime),vm.countdown.totalSeconds<=0&&$modalInstance.close()},1e3),$modalInstance.result.finally(cancelInterval)}angular.module("redbox.shell").controller("redbox.shell.SessionTimeoutDialogCtrl",SessionTimeoutDialogCtrl),SessionTimeoutDialogCtrl.$inject=["$interval","$modalInstance","completionTime"]}(),angular.module("redbox.supportlink").component("supportlinkSlideIn",{templateUrl:function($injector){if($injector){var clientDeviceService=$injector.get("adp.ng.utilities.ClientDeviceService");if(clientDeviceService&&clientDeviceService.isMobile())return"app/supportlink/views/mobile/support-link-template.html"}return"app/supportlink/views/support-link-template.html"},bindings:{isAdmin:"=?"},controller:["$rootScope","$scope","$language","$window","adp.ng.ui.slidein.FocusSlideIn","adp.ng.ui.modal.adpModalService","adp.ng.logging.LoggerFactory","redbox.supportlink.SupportlinkService","redbox.supportlink.SupportLinkConstants",function($rootScope,$scope,$language,$window,$slideIn,$adpModal,loggerFactory,supportlinkService,supportLinkConstants){var vm=this,logger=loggerFactory.getLogger("redbox.supportlink.supportlinkSlideIn");vm.lang=$language,vm.serviceError=!1,vm.hasSupportLinks=!1,vm.showLoading=!0,vm.supportLinks=[],vm.$onInit=function(){supportlinkService.getSupportLinks().then(function(supportLinks){addAdditionalProperties(supportLinks)}).catch(function(error){vm.serviceError=!0,logger.error("Error getting support links from service.",error)}).finally(function(){vm.showLoading=!1})},vm.toggleNote=function(supportLink){supportLink.showNote=!supportLink.showNote},vm.addContact=function(){return vm.supportLinks.length===supportLinkConstants.MAXIMUM_CONTACTS?void $adpModal.open({title:$language.get("framework.ADMIN_COMPANY_CONTACTS_MODAL_MAX_CONTACTS_TITLE"),content:$language.get("framework.ADMIN_COMPANY_CONTACTS_MODAL_MAX_CONTACTS"),dismissButton:!1,closeable:!1}):void $slideIn({contentTemplate:"app/admin/modules/company-contacts/views/add-contact-slidein.html",backButton:$language.get("ADMIN"),loadingIndicator:!1,scope:$scope})},vm.editContact=function(linkId){var contact=_.find(vm.supportLinks,"linkId",linkId);supportlinkService.editSupportLink=contact,$slideIn({contentTemplate:"app/admin/modules/company-contacts/views/add-contact-slidein.html",backButton:$language.get("ADMIN"),loadingIndicator:!1,scope:$scope})},vm.onDeleteContact=function(linkId){$adpModal.open({type:"warning",content:$language.get("framework.ADMIN_COMPANY_CONTACTS_MODAL_DELETE_TEXT"),title:$language.get("framework.ADMIN_COMPANY_CONTACTS_MODAL_DELETE_TITLE"),closeLabel:$language.get("shared.DELETE"),closeClick:function(){vm.deleteContact(linkId)},scope:$scope})},vm.deleteContact=function(linkId){supportlinkService.deleteSupportLink(linkId).then(function(supportLinks){addAdditionalProperties(supportLinks)}).catch(function(error){vm.serviceError=!0,logger.error("Error deleting support link from service.",error)})},vm.openWebsite=function(url){$window.open(url)},$rootScope.$on("supportLink-createdOrUpdated",function(event,supportLinks){addAdditionalProperties(supportLinks)});var addAdditionalProperties=function(supportLinks){vm.supportLinks=sortByName(_.forEach(supportLinks,function(supportLink){supportLink.showNote=!1})),vm.serviceError=!1,vm.hasSupportLinks=vm.supportLinks.length>0,vm.hasSupportLinks||$rootScope.$broadcast("supportLink-noSupportLinks")},sortByName=function(array){return _.sortBy(array,"title")}}],controllerAs:"supportlinkCtrl"}),angular.module("redbox.supportlink").component("supportlinkFooter",{templateUrl:function($injector){if($injector){var clientDeviceService=$injector.get("adp.ng.utilities.ClientDeviceService");if(clientDeviceService&&clientDeviceService.isMobile())return"app/supportlink/views/mobile/support-link-footer-template.html"}return"app/supportlink/views/support-link-footer-template.html"},controller:["$rootScope","$scope","$state","$language","adp.ng.ui.slidein.FocusSlideIn","adp.ng.logging.LoggerFactory","redbox.supportlink.SupportlinkService",function($rootScope,$scope,$state,$language,$slideIn,loggerFactory,supportlinkService){var vm=this,logger=loggerFactory.getLogger("redbox.supportlink");vm.showSupportLinkFooter=!1,vm.hasSupportLinks=!1,vm.$onInit=function(){supportlinkService.hasSupportLinks().then(function(hasContacts){vm.hasSupportLinks=hasContacts,vm.initFooter($state.current.name)}).catch(function(error){vm.initFooter(""),logger.error("Error getting support links from service.",error)})},$scope.$on("$stateChangeSuccess",function(event,toState){vm.initFooter(toState.name)}),$rootScope.$on("supportLink-createdOrUpdated",function(event,supportLinks){vm.hasSupportLinks=supportLinks.length>0,vm.initFooter($state.current.name)}),$rootScope.$on("supportLink-noSupportLinks",function(){vm.hasSupportLinks=!1,vm.initFooter($state.current.name)}),vm.openSupportLink=function(){$slideIn({contentTemplate:"app/supportlink/views/support-slidein-template.html"})},vm.isExcludedView=function(viewName){var excludedViews=["admin.companyContacts","connections.newhires"];return _.includes(excludedViews,viewName)||_.includes(viewName,"onboarding")},vm.initFooter=function(viewName){var showLinks=!(!vm.hasSupportLinks||""===viewName)&&!vm.isExcludedView(viewName);showLinks?(angular.element(".footer").addClass("show-supportlink"),angular.element("#footer-links").removeClass("links"),angular.element("#footer-links").addClass("show-supportlink-links"),angular.element("#footer-copyright").removeClass("copyright"),angular.element("#footer-copyright").addClass("show-supportlink-copyright"),vm.showSupportLinkFooter=!0):(angular.element(".footer").removeClass("show-supportlink"),angular.element("#footer-links").removeClass("show-supportlink-links"),angular.element("#footer-links").addClass("links"),angular.element("#footer-copyright").removeClass("show-supportlink-copyright"),angular.element("#footer-copyright").addClass("copyright"),vm.showSupportLinkFooter=!1)}}],controllerAs:"supportlinkFooterCtrl"}),angular.module("redbox.supportlink").constant("SUPPORT_LINK_API_URL","/redboxapi/core/v1/client/supportLinks").service("redbox.supportlink.SupportlinkService",["$http","$q","adp.ng.logging.LoggerFactory","SUPPORT_LINK_API_URL",function($http,$q,loggerFactory,apiUrl){var self=this,logger=loggerFactory.getLogger("redbox.supportlink.SupportLinksService");self.editSupportLink=null,self.getSupportLinks=function(){return $http.get(apiUrl).then(function(response){return _.get(response,"data.supportLinks",{})}).catch(function(error){return logger.error("Error in retrieving support links",error),$q.reject(error)})},self.hasSupportLinks=function(){return $http.get(apiUrl).then(function(response){var supportLinks=_.get(response,"data.supportLinks",{}),hasContacts=supportLinks.length>0;return hasContacts}).catch(function(error){return logger.error("Error getting support links from service.",error),$q.reject(error)})},self.supportLinkCreateOrUpdate=function(supportLinks){return $http.post(apiUrl,supportLinks).then(function(response){return _.get(response,"data.supportLinks",{})}).catch(function(error){return logger.error("Error in creating or updating support link",error),$q.reject(error)})},self.supportLinkUpdate=function(linkId,supportLink){return $http.post(apiUrl+"/"+linkId,supportLink).then(function(response){return _.get(response,"data.supportLinks",{})}).catch(function(error){return logger.error("Error updating support link",error),$q.reject(error)})},self.getSupportLink=function(linkId){return $http.get(apiUrl+"/"+linkId).then(function(response){return _.get(response,"data.supportLinks",{})}).catch(function(error){return logger.error("Error in retrieving support link for linkId: "+linkId,error),$q.reject(error)})},self.deleteAllSupportLinks=function(){return $http.delete(apiUrl).then(function(response){return _.get(response,"data.supportLinks",{})}).catch(function(error){return logger.error("Error in deleting all support links",error),$q.reject(error)})},self.deleteSupportLink=function(linkId){return $http.delete(apiUrl+"/"+linkId).then(function(response){return _.get(response,"data.supportLinks",{})}).catch(function(error){return logger.error("Error in deleting support link linkId: "+linkId,error),$q.reject(error)})}}]),angular.module("redbox.supportlink").constant("redbox.supportlink.SupportLinkConstants",{MAXIMUM_CONTACTS:50}),angular.module("redbox.wizard").constant("redbox.wizard.WizardConstant",{specialValues:{CLOSE_WIZARD:{}},animationDirections:{FORWARD:1,NONE:0,BACKWARD:-1}}),angular.module("redbox.wizard").directive("wzField",["adp.ng.ui.modal.adpModalService","$language","$rootScope","redbox.shared.services.DataTransformService","adp.ng.logging.LoggerFactory","$analytics",function($adpModal,$language,$rootScope,DataTransformService,loggerFactory,$analytics){function fieldController(){this.getTemplateUrl=function(key){return"app/wizard/views/fields/field-"+key+".html"}}function getParentScope(scope,key){for(var parentScope=scope.$parent;null!==parentScope&&!angular.isDefined(parentScope[key]);)parentScope=parentScope.$parent;return parentScope}function sendAnalytics(){var analytics=this.wzField.analytics;return analytics&&$analytics.eventTrack(analytics.event,{category:analytics.category,label:analytics.label}),!0}return{restrict:"A",scope:{wzField:"=",errors:"=",onChange:"&",submitted:"=",sendAnalytics:"&"},require:"ngModel",link:function(scope,elem,attrs,ngModel){var logger=loggerFactory.getLogger("redbox.wizard.wizardFieldDirective"),parentScope=getParentScope(scope,"wzField");scope.lang=$rootScope.lang,scope.sendAnalytics=sendAnalytics,scope.getModel=function(key,peer){function getterSetter(newVal){var newValCopy;return angular.isDefined(newVal)&&(keys.length?(newValCopy=angular.extend({},ngModel.$viewValue),DataTransformService.setInObject(newValCopy,keys,newVal)):newValCopy=newVal,ngModel.$setViewValue(newValCopy)),DataTransformService.getFromObject(ngModel.$viewValue,keys,{throwErrorOnMissing:!1})}var keys=key?key.split("."):[];return peer?parentScope.getModel(key):getterSetter},scope.showErrors=function(inputName,peer){return peer?parentScope.showErrors(inputName):(inputName&&!scope.wzFieldForm[inputName]&&logger.info("showErrors","inputName provided but not found in wzField; inputName "+inputName),scope.submitted||(inputName&&scope.wzFieldForm[inputName]?scope.wzFieldForm[inputName].$touched:scope.wzFieldForm.$touched))},scope.shouldDisplayOptional=function(){var displayOptional=!0,found=_.find(scope.wzField.validate,function(validationObj){return angular.isDefined(validationObj.optional)});if(found&&(displayOptional=found.optional),displayOptional){var modelValue=scope.getModel()();modelValue!==scope.wzField.key&&(displayOptional=void 0===modelValue||""===modelValue)}return displayOptional},scope.getErrors=function(modelName,peer){return peer?parentScope.getErrors(modelName):angular.isDefined(modelName)?scope.errors&&scope.errors.fields&&scope.errors.fields[modelName]:scope.errors},scope.getField=function(key,peer){
return peer?parentScope.getField(key):_.filter(scope.wzField.fields,{key:key})[0]},scope.openModal=function(config){var confirm=function(){window.open(config.url)};$adpModal.open({closeable:!1,closeClick:confirm,closeLabel:$language.get(config.buttons.ok),content:$language.get(config.description),dismissLabel:$language.get(config.buttons.cancel),size:"md",title:$language.get(config.title),analytics:config.analytics})},attrs.onChange&&ngModel.$viewChangeListeners.push(scope.onChange)},controller:fieldController,controllerAs:"FieldController",templateUrl:"app/wizard/views/wizard-field.html"}}]),angular.module("redbox.wizard").factory("redbox.wizard.WizardDriverService",["$q","adp.ng.logging.LoggerFactory","redbox.wizard.WizardConstant",function($q,loggerFactory,wizardConstant){function Driver(initialDataObject,pagemaker,hooks,renderer,Evaluator){function showPage(page,dataObject,hidePreviousViewCallback,animationDirection){function onChange(data){acceptViewCallbacks&&(unsavedDataDetected(),currentData=data,executeHook("onChange",page,data),Evaluator.validate(page,data).then(function(errors){var isErrorState=Evaluator.isErrorState(errors);view.setValidationErrors(errors,isErrorState),executeHook("onSetValidationErrors",page,data,errors,isErrorState)}))}function onSubmit(data){acceptViewCallbacks&&(currentData=data,currentView.setSubmitted(!0),executeHook("onSubmit",page,data).then(function(){Evaluator.validate(page,data).then(function(errors){var isErrorState=Evaluator.isErrorState(errors);return view.setValidationErrors(errors,isErrorState),executeHook("onSetValidationErrors",page,data,errors,isErrorState),isErrorState?void logger.warn("Validation errors exist"):void executeHook("onValidatedSubmit",page,data).then(Evaluator.next.bind(void 0,page,data)).then(preGetPageHook.bind(void 0,page,data)).then(pagemaker.get.bind(pagemaker)).then(function(newPage){makeNewPage(newPage,registerPageAndData(page,data),wizardConstant.animationDirections.FORWARD)})})}))}function makeNewPage(newPage,data,animationDir){acceptViewCallbacks=!1,view.setActive(!1),showPage(newPage,data,hideAndDestroyView,animationDir)}function hideAndDestroyView(newPage,data){var hidePromise=executeHook("preHide",page,data,newPage).then(view.hide).then(wrapHook("postHide",page,data,newPage));return hidePromise.then(wrapHook("preDestroy",page,data,newPage)).then(view.destroy).then(wrapHook("postDestroy",page,data,newPage)),hidePromise}function previous(){if(acceptViewCallbacks&&pageHistory.length&&dataHistory.length){var prevPage=pageHistory.pop(),prevData=dataHistory.pop();return indexOfPageOnWhichDataFirstChanged>pageHistory.length-1&&(indexOfPageOnWhichDataFirstChanged=void 0),makeNewPage(prevPage,prevData,wizardConstant.animationDirections.BACKWARD),!0}return!1}var view,acceptViewCallbacks=!1;return currentData=dataObject,exposedCallbacks.onSubmit=onSubmit,exposedCallbacks.previous=previous,exposedCallbacks.onChange=onChange,renderer.createView(page,dataObject,onChange,onSubmit,previous).then(function(viewInstance){return view=currentView=viewInstance,hidePreviousViewCallback(page,dataObject),executeHook("preShow",page,dataObject,animationDirection).then(function(){Evaluator.validate(page,dataObject).then(function(errors){var isErrorState=Evaluator.isErrorState(errors);view.setValidationErrors(errors,isErrorState),executeHook("onSetValidationErrors",page,dataObject,errors,isErrorState)})}).then(view.show).then(function(){view.setActive(!0),acceptViewCallbacks=!0}).then(wrapHook("postShow",page,dataObject))})}function executeHook(name,page){var pageHook=$q.when,driverHook=$q.when,args=arguments;return page&&page.hooks&&page.hooks[name]&&(pageHook=function(){return $q.when(page.hooks[name].apply(void 0,Array.prototype.slice.call(args,1))).then(checkForSpecialValues)}),hooks[name]&&(driverHook=function(){return $q.when(hooks[name].apply(void 0,Array.prototype.slice.call(args,1))).then(checkForSpecialValues)}),pageHook().then(driverHook)}function wrapHook(name){var outerArguments=arguments;return function(){return executeHook.apply(void 0,toArray(outerArguments).concat(toArray(arguments)))}}function preGetPageHook(currentPage,data,nextPageConstructor){return hooks.preGetHook?$q.when(hooks.preGetHook(currentPage,data,nextPageConstructor)):$q.when(nextPageConstructor)}function checkForSpecialValues(val){return val===wizardConstant.specialValues.CLOSE_WIZARD?(driverInstance.stop(),$q.reject()):val}function toArray(args,cutOff){return Array.prototype.slice.call(args,cutOff)}function registerPageAndData(page,data){return currentData=angular.copy(data),pageHistory.push(page),dataHistory.push(data),currentData}function unsavedDataDetected(){void 0===indexOfPageOnWhichDataFirstChanged&&(indexOfPageOnWhichDataFirstChanged=pageHistory.length-1)}var currentView,indexOfPageOnWhichDataFirstChanged,exposedCallbacks,currentData=initialDataObject,pageHistory=[],dataHistory=[],driverInstance=this,driverIsRunning=!1;driverInstance.start=function(){return driverInstance.stop(),driverIsRunning=!0,pagemaker.get().then(function(page){return showPage(page,currentData,angular.noop,wizardConstant.animationDirections.NONE)})},driverInstance.stop=function(){exposedCallbacks={},currentView&&currentView.hide().then(currentView.destroy),driverIsRunning&&hooks&&hooks.onStopDriver&&hooks.onStopDriver(),driverIsRunning=!1},driverInstance.getCurrentView=function(){return currentView},driverInstance.getData=function(){return currentData},driverInstance.setData=function(newData){currentData=newData,currentView&&(currentView.update(),driverInstance.callbacks.onChange())},driverInstance.callbacks={onSubmit:function(data){driverIsRunning&&exposedCallbacks.onSubmit&&exposedCallbacks.onSubmit(data||driverInstance.getData())},previous:function(){driverIsRunning&&exposedCallbacks.previous&&exposedCallbacks.previous()},onChange:function(data){driverIsRunning&&exposedCallbacks.onChange&&exposedCallbacks.onChange(data?data:driverInstance.getData())}},driverInstance.unsavedDataExists=function(){return void 0!==indexOfPageOnWhichDataFirstChanged}}var logger=loggerFactory.getLogger("redbox.wizard.WizardDriverService");return Driver}]);angular.module("redbox.wizard").factory("redbox.wizard.WizardEvaluatorService",["$q","$rootScope",function($q,$rootScope){function validate(page,data){var errorObject={};return _validate(page,"",data,errorObject),$q.when(errorObject)}function _validate(field,pathSoFar,data,errorAccumulator){var skipValidation=[];pathSoFar=pathSoFar+"."+(field.key||""),errorAccumulator.errors=validateIndividualNode(field.validate,data,cleanPath(pathSoFar)),field.validateIf&&field.validateIf.forEach(function(validateIf){var scope=$rootScope.$new();scope.data=angular.copy(data),scope.$eval(validateIf.expr)||skipValidation.push(validateIf.key)}),field.fields&&(errorAccumulator.fields={},field.fields.forEach(function(subfield){errorAccumulator.fields[subfield.key]={},skipValidation.indexOf(subfield.key)===-1&&_validate(subfield,pathSoFar,data&&data[subfield.key],errorAccumulator.fields[subfield.key])}))}function validateIndividualNode(validationArray,data,pathSoFar){var errorArray=[],sortedValidationArray=_.sortBy(angular.copy(validationArray),"priority"),currentValidationLevel=sortedValidationArray.length?sortedValidationArray[0].priority:void 0;return _.forEach(sortedValidationArray,function(validation){if(errorArray.length&&(!angular.isDefined(validation.priority)&&angular.isDefined(currentValidationLevel)||validation.priority>currentValidationLevel))return!1;var isError=!1;_.forEach(validators,function(validatorFn){return isError=!validatorFn(validation,data),!isError}),isError&&errorArray.push(copyAndExtend(validation,{key:pathSoFar})),currentValidationLevel=validation.priority}),errorArray}function isErrorState(validationErrorObject){var errorState=!1;return _.forEach(validationErrorObject.fields,function(field){if(isErrorState(field))return errorState=!0,!1}),errorState||!(!validationErrorObject.errors||!validationErrorObject.errors.length)}function next(page,data){var scope=$rootScope.$new();return scope.data=data,$q.when(scope.$eval(page.next))}function copyAndExtend(object,key){return angular.extend({},object,key)}function cleanPath(str){return str.replace(/^[\\.]+/,"")}function validateRequired(validation,data){return angular.isDefined(validation.optional)?!!validation.optional||angular.isDefined(data)&&(!angular.isString(data)||data.length>0):!angular.isDefined(validation.required)||(!validation.required||!!data)}function validatePattern(validation,data){return!angular.isDefined(validation.pattern)||!!new RegExp(validation.pattern).exec(data)}function validateExpression(validation,data){var scope=$rootScope.$new();return scope.globals=validation.globals||{},scope.data=angular.copy(data),!validation.expr||scope.$eval(validation.expr)}function validateLength(validation,data){if(angular.isDefined(validation.minLength)){var minLength=parseInt(validation.minLength);return!minLength||!angular.isDefined(data)||data.toString().length>=minLength}return!angular.isDefined(validation.maxLength)||(!angular.isDefined(data)||angular.isDefined(data)&&data.toString().length<=parseInt(validation.maxLength))}var validators=[validateRequired,validateExpression,validateLength,validatePattern];return{validate:validate,validationIndividual:validateIndividualNode,next:next,isErrorState:isErrorState}}]);angular.module("redbox.wizard").factory("redbox.wizard.WizardPagemakerService",["$q",function($q){function Pagemaker(hash,options){options=angular.extend(getDefaultPagemakerOptions(),options),this.get=function(key){var page,deferred=$q.defer();return key=key||options.initialPageKey,page=angular.copy(hash[key]),page?(page.key=key,deferred.resolve(page)):(page=angular.copy(options.pageNotFound(key)),page?(page.key=key,deferred.resolve(page)):deferred.reject()),deferred.promise}}function getDefaultPagemakerOptions(){return{pageNotFound:function(key){},initialPageKey:"start"}}return Pagemaker}]),angular.module("redbox.wizard").factory("redbox.wizard.WizardRendererService",["$rootScope","$compile","$http","$q","$timeout","$animate",function($rootScope,$compile,$http,$q,$timeout,$animate){function Renderer(options){if(options=angular.extend({},getDefaultOptions(),options),this.options=options,!options||!options.target||!options.target.append)throw new Error("options.target must be defined and must have an append method.");this.createView=function(page,data,onChange,onSubmit,previous){function viewReady(err){err?deferred.reject(err):deferred.resolve(view)}var deferred=$q.defer(),view=new Renderer.View(page,data,onChange,onSubmit,previous,this.options,viewReady);return options.scrollTop&&deferred.promise.then(function(){$(options.scrollTop).animate({scrollTop:0},500)}),deferred.promise}}function View(page,data,onChange,onSubmit,previous,rendererOptions,viewReady){function setActive(newActive){active=newActive}function isActive(){return active&&!destroyed}function isVisible(){return visible}function update(){$timeout(angular.noop,0)}function show(){return hasBeenShown?$q.when():(hasBeenShown=!0,$animate.enter(outerTemplate,options.target).then(function(){showDeferred.resolve(),visible=!0}))}function hide(){return hasBeenHidden?$q.when():showDeferred.promise.then(function(){return hasBeenHidden=!0,$animate.leave(outerTemplate).then(function(){visible=!1})})}function destroy(){return scope.$destroy(),destroyed=!0,$q.when()}function setSubmitted(submitted){scope.submitted=submitted}function setValidationErrors(errorObject,isErrorState){scope.validationErrors=errorObject,scope.isErrorState=isErrorState,$timeout(angular.noop,0)}function ifActiveOnChange(){isActive()&&onChange(scope.model.data)}function ifActiveOnSubmit(){isActive()&&(onSubmit(scope.model.data),scope.submitted=!0)}var outerTemplate,innerTemplate,transcludeTarget,options=angular.extend(defaultOptions(),rendererOptions),scope=(options.scope||$rootScope).$new(),outerTemplateDeferred=$q.defer(),active=!1,destroyed=!1,visible=!1,showDeferred=$q.defer(),hasBeenShown=!1,hasBeenHidden=!1;angular.extend(this,{setActive:setActive,isActive:isActive,isVisible:isVisible,update:update,show:show,hide:hide,destroy:destroy,setValidationErrors:setValidationErrors,setSubmitted:setSubmitted}),data=data||{},scope.page=page,scope.model={data:data},scope.submitted=!1,scope.validationErrors={},scope.isErrorState=void 0,scope.onSubmit=ifActiveOnSubmit.bind(this),scope.onChange=ifActiveOnChange.bind(this),scope.previous=previous,options.template?outerTemplateDeferred.resolve(wrapDomNode($(options.template))):options.templateUrl?$http.get(options.templateUrl).then(function(httpResponse){outerTemplateDeferred.resolve(wrapDomNode(httpResponse.data).addClass(options.containerClass))}).catch(function(){var err=new Error("outerTemplate ("+options.templateUrl+") not found.");outerTemplateDeferred.reject(err),angular.isFunction(viewReady)&&viewReady(err)}):(outerTemplateDeferred.resolve(wrapDomNode($('<div class="transclude"></div>'))),options.transclude=".transclude"),innerTemplate=$('<div wz-field="page" ng-model="model.data" submitted="submitted" errors="validationErrors" on-change="onChange()"></div>'),outerTemplateDeferred.promise.then(function(template){if(outerTemplate=template,transcludeTarget=outerTemplate.find(options.transclude),!transcludeTarget.length)throw new Error("transclude target "+options.transclude+" not found in "+(options.templateUrl?"options.templateUrl":"options.template"));transcludeTarget.append(innerTemplate),$compile(outerTemplate)(scope),angular.isFunction(viewReady)&&viewReady()})}function defaultOptions(){return{transclude:".transclude",templateUrl:"app/wizard/views/all-pages-template.html",containerClass:""}}function wrapDomNode(node){var div=$('<div class="wizard-page-container"></div>');return div.append($(node)),div}function getDefaultOptions(){return{scrollTop:".adp-wizard"}}return Renderer.View=View,Renderer}]),angular.module("redbox.wizard").factory("redbox.wizard.WizardStyleService",["$timeout","$language",function($timeout,$language){function setErrorState(errorState){errorState!==pageInErrorState&&navButtonTimeout&&$timeout.cancel(navButtonTimeout),errorState&&!pageInErrorState?(navButtonStyleIndex=1,navButtonTimeout=$timeout(function(){navButtonStyleIndex=2},0)):!errorState&&pageInErrorState&&(navButtonStyleIndex=1,navButtonTimeout=$timeout(function(){navButtonStyleIndex=0},300)),pageInErrorState=errorState}function getNavButtonStyle(){return navButtonStyles[navButtonStyleIndex]}function setCurrentPage(page){currentPage=page}function getCurrentPage(){return currentPage}function displayNextArrow(){return!currentPage.displayStartButton&&!currentPage.displayCloseButtons&&"review-and-sign"!==currentPage.key}function closeButtonDetails(){return{show:(currentPage.displayStartButton||currentPage.displayCloseButtons||!1)&&currentPage.displayCancelButton,button:currentPage.displayStartButton&&"secondary"||"primary",actionType:currentPage.displayStartButton&&"cancel"||"",text:currentPage.displayStartButton&&$language.get("shared.CANCEL")||$language.get("shared.CLOSE")}}function getProgressBarStyle(){var scaleString=currentPage&&currentPage.progress?"scaleX("+currentPage.progress/100+")":"scaleX(0)";return{"-webkit-transform":scaleString,"-moz-transform":scaleString,"-ms-transform":scaleString,"-o-transform":scaleString,transform:scaleString}}var navButtonTimeout,navButtonStyleIndex=0,pageInErrorState=!1,currentPage={},navButtonStyles=["","nav-button-transition","nav-button-transition nav-button-disabled"];return{setErrorState:setErrorState,getNavButtonStyle:getNavButtonStyle,setCurrentPage:setCurrentPage,getCurrentPage:getCurrentPage,displayNextArrow:displayNextArrow,closeButtonDetails:closeButtonDetails,getProgressBarStyle:getProgressBarStyle}}]),function(){function WorkflowHtmlFieldController($scope,$injector){var ctrl=this,$rootScope=$injector.get("$rootScope");ctrl.$onChanges=function(changes){changes.action&&(ctrl.actionAdd="add"===ctrl.action,ctrl.actionChange="change"===ctrl.action,ctrl.actionRemove="remove"===ctrl.action)},ctrl.$onInit=function(){$scope.lang=$rootScope.lang}}angular.module("redbox.workflow").component("workflowHtmlField",{bindings:{action:"@",approverName:"@",label:"@",icon:"@",compactView:"@"},transclude:{current:"workflowHtmlFieldCurrentContent",pending:"workflowHtmlFieldPendingContent"},controller:WorkflowHtmlFieldController,templateUrl:"app/workflow/views/workflow-html-field.html"}),WorkflowHtmlFieldController.$inject=["$scope","$injector"]}(),angular.module("redbox.workflow").constant("redbox.workflow.CONSTANTS",{CODES:{SUCCESS:1e3},STATUS:{NONE:0,PENDING:1,BLOCKED:2},PENDING_ACTION:{ADD:"add",CHANGE:"change",REMOVE:"remove",START:"start",STOP:"stop"},EVENTS:{RECALL:{WORKER_LEGAL_ADDRESS_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.legal-address.change"},WORKER_PERSONAL_ADDRESS_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.personal-address.change"},WORKER_PERSONAL_EMAIL_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.business-communication.email.change"},WORKER_PERSONAL_LANDLINE_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.business-communication.landline.change"},WORKER_PERSONAL_MOBILE_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.business-communication.mobile.change"},WORKER_BUSINESS_LANDLINE_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.business-communication.landline.change"},WORKER_BUSINESS_MOBILE_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.business-communication.mobile.change"},WORKER_BUSINESS_FAX_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.business-communication.fax.change"},WORKER_BUSINESS_EMAIL_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.business-communication.email.change"},WORKER_PERSONAL_CONTACT_CHANGE:{HREF:"/wf/recall/events/hr/v1/worker.personal-contact.change"},WORKER_PAY_DISTRIBUTION_CHANGE:{HREF:"/wf/recall/events/payroll/v1/worker.pay-distribution.change"},WORKER_FEDERAL_TAX_WITHHOLDING_CHANGE:{HREF:"/wf/recall/events/payroll/v1/worker.us-federal.tax-withholding.election.change"},TALENT_LANGUAGE_CHANGE:{HREF:"/wf/recall/events/talent/v1/associate.ksaoc.language.change"},TALENT_MEMBERSHIP_CHANGE:{HREF:"/wf/recall/events/talent/v1/associate.ksaoc.membership.change"},TALENT_EDUCATIONAL_DEGREE_CHANGE:{HREF:"/wf/recall/events/talent/v1/associate.ksaoc.educational-degree.change"},TALENT_LICENSE_CHANGE:{HREF:"/wf/recall/events/talent/v1/associate.ksaoc.license.change"},TALENT_CERTIFICATION_CHANGE:{HREF:"/wf/recall/events/talent/v1/associate.ksaoc.certification.change"},TALENT_COMPETENCY_CHANGE:{HREF:"/wf/recall/events/talent/v1/associate.ksaoc.competency.change"},GENERAL_DEDUCTIONS_START:{HREF:"/wf/recall/events/payroll/v1/worker-general-deduction-instruction.start"},GENERAL_DEDUCTIONS_CHANGE:{HREF:"/wf/recall/events/payroll/v1/worker-general-deduction-instruction.change"},GENERAL_DEDUCTIONS_STOP:{HREF:"/wf/recall/events/payroll/v1/worker-general-deduction-instruction.stop"}}},URLS:{EVENT_MAPPINGS:"/wf/core/v1/event-mappings",PENDING_EVENTS:"/wf/core/v1/associates/{associateOID}/pending-events"},WORKER_WF_RECALL_URL:"/wf/recall/{operation}",WORKER_WF_RECALL_PAYLOAD:"events[0].data.eventContext.worker.associateOID"}),angular.module("redbox.workflow").directive("adpWorkflowAddress",["$injector",function($injector){var WORKFLOW_CONSTANTS=$injector.get("redbox.workflow.CONSTANTS");return{restrict:"A",scope:{},require:"ngModel",replace:!0,templateUrl:"app/workflow/views/address.html",link:function(scope,element,attrs,ctrl){function getFieldValue(field){var value;if(void 0!==field)switch(field.pending){case WORKFLOW_CONSTANTS.PENDING_ACTION.ADD:value="current"===scope.show?void 0:field.value;break;case WORKFLOW_CONSTANTS.PENDING_ACTION.CHANGE:value="current"===scope.show?field.prev:field.value;break;case WORKFLOW_CONSTANTS.PENDING_ACTION.REMOVE:value="current"===scope.show?field.value:void 0;break;default:value=field}return value}function getCityLine(modelValue){var addressArray=[],address=modelValue;return address?(getFieldValue(address.cityName)&&addressArray.push(getFieldValue(address.cityName)),address.countrySubdivisionLevel1&&getFieldValue(address.countrySubdivisionLevel1.codeValue)&&(getFieldValue(address.cityName)&&(addressArray[0]=addressArray[0]+","),addressArray.push(getFieldValue(address.countrySubdivisionLevel1.codeValue))),getFieldValue(address.postalCode)&&addressArray.push(getFieldValue(address.postalCode)),0===addressArray.length?"":addressArray.join(" ")):""}function updateView(modelValue){scope.address={},scope.mainClass={"adp-workflow-field":!0,"adp-workflow-field-pending":"pending"===scope.show},modelValue&&(scope.address.lineOne=getFieldValue(modelValue.lineOne),scope.address.lineTwo=getFieldValue(modelValue.lineTwo),scope.address.lineThree=getFieldValue(modelValue.lineThree),scope.address.lineFour=getFieldValue(modelValue.lineFour),scope.address.lineFive=getFieldValue(modelValue.lineFive),scope.address.cityLine=getCityLine(modelValue),scope.address.countryCode=getFieldValue(modelValue.countryCode))}scope.show=attrs.show?attrs.show:"current",attrs.$observe("show",function(newValue,oldValue){newValue&&scope.show!==newValue&&(scope.show=newValue,updateView(ctrl.$modelValue))}),ctrl.$formatters.push(function(modelValue){return updateView(modelValue),modelValue})}}}]),angular.module("redbox.workflow").directive("adpWorkflowEmailField",["$injector",function($injector){var $compile=$injector.get("$compile");return{restrict:"A",scope:{},require:"ngModel",replace:!0,template:'<a href="mailto:{{value}}"><div>{{value}}</div></a>',link:function(scope,element,attrs,ctrl){var iconTemplate='<i class="fa fa-fw fa-{{icon}}"></i>';scope.show=attrs.show?attrs.show:"current",attrs.icon&&element.prepend($compile(angular.element(iconTemplate.replace("{{icon}}",attrs.icon)))(scope)),ctrl.$formatters.push(function(modelValue){if(modelValue)switch(modelValue.pending){case"add":scope.value="pending"===scope.show?modelValue.value:void 0;break;case"change":scope.value="pending"===scope.show?modelValue.value:modelValue.prev;break;case"remove":scope.value="pending"===scope.show?void 0:modelValue.value;break;default:scope.value=modelValue}return modelValue})}}}]),angular.module("redbox.workflow").directive("adpWorkflowField",["$injector",function($injector){var $filter=$injector.get("$filter"),$compile=$injector.get("$compile"),$language=$injector.get("$language"),WORKFLOW_CONSTANTS=$injector.get("redbox.workflow.CONSTANTS");return{restrict:"A",scope:{},require:"ngModel",replace:!0,template:'<div data-ng-show="showValue" data-ng-class="mainClass"><div class="{{valueClass}}">{{value}}</div></div>',link:function(scope,element,attrs,ctrl){function displayValue(value){return _.isBoolean(value)?value?$language.get("shared.YES")||"Yes":$language.get("shared.NO")||"No":value}function updateView(modelValue){var compareValue,viewValue;if(scope.mainClass={"adp-workflow-field":!0,"adp-workflow-field-pending":"pending"===scope.show},"codelist"===attrs.type?(compareValue=_.get(modelValue,"codeValue"),viewValue=_.get(modelValue,"longName")||_.get(modelValue,"shortname")||_.get(modelValue,"codeValue")):(compareValue=modelValue,viewValue=modelValue),_.has(compareValue,"pending"))switch(compareValue.pending){case WORKFLOW_CONSTANTS.PENDING_ACTION.ADD:"pending"===scope.show?scope.value=displayValue(_.get(viewValue,"value")):scope.value=void 0;break;case WORKFLOW_CONSTANTS.PENDING_ACTION.CHANGE:"pending"===scope.show?scope.value=displayValue(_.get(viewValue,"value")):scope.value=displayValue(_.get(viewValue,"prev"));break;case WORKFLOW_CONSTANTS.PENDING_ACTION.REMOVE:"pending"===scope.show?scope.value=$language.get("shared.REMOVED")||"Removed":scope.value=displayValue(_.get(viewValue,"prev"))||displayValue(_.get(viewValue,"value"))}else scope.value="pending"===scope.show?void 0:displayValue(_.get(viewValue,"value"))||displayValue(viewValue);"date"===attrs.type&&scope.value&&(scope.value=$filter("amDateFormat")(scope.value,"ll")),"currency"!==attrs.type||_.isUndefined(scope.value)||(scope.value=$filter("adpCurrency")(scope.value,attrs.currencyCode)),"percent"===attrs.type&&scope.value&&(scope.value=scope.value+"%"),scope.showValue=void 0!==scope.value,scope.showLabel=!!scope.showValue}var iconTemplate='<i class="fa fa-fw {{icon}}"></i>',labelTemplate='<label data-ng-if="showLabel">{{label}}</label>';scope.show=attrs.show?attrs.show:"current",attrs.$observe("show",function(newValue,oldValue){newValue&&scope.show!==newValue&&(scope.show=newValue,updateView(ctrl.$modelValue))}),attrs.label&&element.prepend($compile(angular.element(labelTemplate.replace("{{label}}",attrs.label)))(scope)),attrs.icon&&(attrs.icon.indexOf("adp-")>-1||attrs.icon.indexOf("fa-")>-1?attrs.icon="fa "+attrs.icon:attrs.icon="fa fa-"+attrs.icon,element.prepend($compile(angular.element(iconTemplate.replace("{{icon}}",attrs.icon)))(scope))),attrs.label&&attrs.icon?scope.valueClass="adp-workflow-field-value adp-workflow-field-value-offset":scope.valueClass="adp-workflow-field-value",scope.$watch(function(){return ctrl.$modelValue},updateView,!0)}}}]),angular.module("redbox.workflow").directive("adpWorkflowPhoneField",["$injector",function($injector){var $compile=$injector.get("$compile");return{restrict:"A",scope:{},require:"ngModel",replace:!0,template:'<a href="tel:{{phoneObj | phoneNumberFilter:true}}"><div>{{phoneObj | phoneNumberFilter}}</div></a>',link:function(scope,element,attrs,ctrl){function helper(modelValue,key){switch(modelValue[key].pending){case"add":scope.phoneObj[key]="pending"===scope.show?modelValue[key].value:void 0;break;case"change":scope.phoneObj[key]="pending"===scope.show?modelValue[key].value:modelValue[key].prev;break;case"remove":scope.phoneObj[key]="pending"===scope.show?void 0:modelValue[key].value;break;default:scope.phoneObj[key]=modelValue[key]}}var iconTemplate='<i class="fa fa-fw fa-{{icon}}"></i>';scope.show=attrs.show?attrs.show:"current",scope.phoneObj={countryDialing:"",formattedNumber:"",extension:""},attrs.icon&&element.prepend($compile(angular.element(iconTemplate.replace("{{icon}}",attrs.icon)))(scope)),ctrl.$formatters.push(function(modelValue){return modelValue&&(modelValue.countryDialing&&helper(modelValue,"countryDialing"),modelValue.formattedNumber&&helper(modelValue,"formattedNumber"),modelValue.extension&&helper(modelValue,"extension")),modelValue})}}}]),angular.module("redbox.workflow").service("redbox.workflow.WorkflowMappingService",["$injector",function($injector){var eventMappings,eventMappingsPromise,CONSTANTS=$injector.get("redbox.workflow.CONSTANTS"),userPermissionService=$injector.get("redbox.ext.shared.services.UserPermissionService"),$q=$injector.get("$q"),$http=$injector.get("$http"),API={getEventMappings:function(){var eventGroupSffos,sffoForUrl,defer=$q.defer(),config={headers:{"loading-indicator":!1}};return eventMappingsPromise=defer.promise,$http.get(CONSTANTS.URLS.EVENT_MAPPINGS,config).then(function(eventGroups){eventGroups.data?(eventMappings=[],_.forEach(eventGroups.data,function(eventGroup){eventGroupSffos=[],_.forEach(eventGroup.urls,function(url){sffoForUrl=userPermissionService.getSffoForOperationHref(url),url&&eventGroupSffos.push({url:url,sffo:sffoForUrl})}),eventGroup.urls=eventGroupSffos,eventMappings.push(eventGroup)}),defer.resolve(eventMappings)):defer.reject("No event mappings found")}).catch(function(error){defer.reject(error.data)}),eventMappingsPromise},getEventGroup:function(eventName){return _.find(eventMappings,function(eventGroup){return eventGroup.event.name===eventName})}};return{getEventMappings:function(){return $q.when(eventMappings||eventMappingsPromise||API.getEventMappings())},getEventGroup:function(eventName){var defer=$q.defer();return eventName?$q.when(eventMappings||eventMappingsPromise||API.getEventMappings()).then(function(){defer.resolve(API.getEventGroup(eventName))},function(error){defer.reject(error)}):defer.reject("Missing required parameter eventName"),defer.promise}}}]),angular.module("redbox.workflow").service("redbox.workflow.WorkflowPendingEventsService",["$injector",function($injector){var pendingEvents,pendingEventsPromise,CONSTANTS=$injector.get("redbox.workflow.CONSTANTS"),$q=$injector.get("$q"),$http=$injector.get("$http"),lastBustCache=Date.now(),API={getPendingEvents:function(associateOID){var defer=$q.defer(),config={headers:{"loading-indicator":!1}},url=CONSTANTS.URLS.PENDING_EVENTS.replace("{associateOID}",associateOID);return pendingEventsPromise=defer.promise,$http.get(url,config).then(function(results){pendingEvents=results.data,defer.resolve(pendingEvents)}).catch(function(error){defer.reject(error.data)}),pendingEventsPromise}};return{getPendingEvents:function(associateOID,bustCache){return bustCache&&Math.floor((Date.now()-lastBustCache)/1e3)>2&&(pendingEvents=null,pendingEventsPromise=null,lastBustCache=Date.now()),$q.when(pendingEvents||pendingEventsPromise||API.getPendingEvents(associateOID))},getPendingEventsForAssociate:function(associateOID){return API.getPendingEvents(associateOID)}}}]),angular.module("redbox.workflow").service("redbox.workflow.WorkflowRecallService",["$injector","$stateParams",function($injector,$stateParams){var CONSTANTS=$injector.get("redbox.workflow.CONSTANTS"),$q=$injector.get("$q"),$http=$injector.get("$http"),API={recallEvent:function(eventId,config){var defer=$q.defer(),configuration={aoid:$stateParams.associateOID},recallEvent=CONSTANTS.EVENTS.RECALL[eventId];return recallEvent&&recallEvent.HREF?(_.has(config,"payload")||(config||(config={}),config.payload={events:[{data:{eventContext:{associateOID:$stateParams.associateOID}}}]}),$http.post(recallEvent.HREF,_.get(config,"payload"),configuration).then(function(results){results.data.wfStatusCode===CONSTANTS.CODES.SUCCESS?defer.resolve(results.data):defer.reject()}).catch(function(error){defer.reject(error.data)})):defer.reject("href for eventId not found: "+eventId),defer.promise}};return{recallEvent:function(eventId,config){return API.recallEvent(eventId,config)}}}]),angular.module("redbox.workflow").service("redbox.workflow.WorkflowStatusService",["$injector",function($injector){function setStatusHelper(sffo,status){for(var found=!1,i=0;i<eventStatuses.length;i++)if(_.isEqual(sffo,eventStatuses[i].sffo)){eventStatuses[i].status=status,found=!0;break}return found}function resetStatusHelper(){_.forEach(eventStatuses,function(eventStatus){eventStatus.status=CONSTANTS.STATUS.NONE})}function setPendingEvents(pendingEvents){var defer=$q.defer();return resetStatusHelper(),pendingEvents&&0!==pendingEvents.length?_.forEach(pendingEvents,function(pendingEvent){WorkflowMappingService.getEventGroup(pendingEvent.eventName).then(function(eventGroup){eventGroup&&_.forEach(eventGroup.urls,function(url){pendingEvent.eventData&&pendingEvent.eventData.resourcePath?_.isEqual(url.url,pendingEvent.eventData.resourcePath)?(setStatusHelper(url.sffo,CONSTANTS.STATUS.PENDING),logger.info("Workflow event PENDING for : "+JSON.stringify(url))):(setStatusHelper(url.sffo,CONSTANTS.STATUS.BLOCKED),logger.info("Workflow events BLOCKED for : "+JSON.stringify(url))):(setStatusHelper(url.sffo,CONSTANTS.STATUS.BLOCKED),logger.info("Workflow events externally BLOCKED for : "+JSON.stringify(url)))}),defer.resolve(eventStatuses)},function(error){defer.reject(error)})}):defer.resolve(eventStatuses),defer.promise}function sffoIsPendingOrBlocked(sffoObj){var toCheck=_.tail(arguments);return _.chain(sffoObj).filter(function(item){return _.some(item.sffo,function(sffoItem){return _.contains(toCheck,sffoItem)})}).map("status").some(function(status){return status===CONSTANTS.STATUS.PENDING||status===CONSTANTS.STATUS.BLOCKED}).valueOf()}var workflowStatusPromise,workflowStatus,$q=$injector.get("$q"),CONSTANTS=$injector.get("redbox.workflow.CONSTANTS"),SFFO_CONSTANTS=$injector.get("redbox.ext.shared.constants.SFFOConstant"),WorkflowMappingService=$injector.get("redbox.workflow.WorkflowMappingService"),WorkflowPendingEventsService=$injector.get("redbox.workflow.WorkflowPendingEventsService"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=loggerFactory.getLogger("redbox.workflow.WorkflowStatusService"),eventStatuses=[{
sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.addressManagement.worker_legalAddress_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.addressManagement.worker_personalAddress_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_email_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_landline_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_personalCommunication_mobile_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_email_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_landline_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_fax_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerInformationManagement.workerManagement.communicationManagement.worker_businessCommunication_mobile_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.certificationManagement.certification_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.competencyManagement.competency_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.educationalDegreeManagement.educationalDegree_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.languageManagement.language_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.languageManagement.language_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.languageManagement.language_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.licenseManagement.license_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.membershipManagement.membership_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.recognitionManagement.recognition_add.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.recognitionManagement.recognition_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.workerTalentManagement.workerKSAOCManagement.recognitionManagement.recognition_remove.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.payrollManagement.payrollInstructionManagement.workerGeneralDeductionInstructionManagement.workerGeneralDeductionInstruction_start.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.payrollManagement.payrollInstructionManagement.workerGeneralDeductionInstructionManagement.workerGeneralDeductionInstruction_change.sffo,status:CONSTANTS.STATUS.NONE},{sffo:SFFO_CONSTANTS.payrollManagement.payrollInstructionManagement.workerGeneralDeductionInstructionManagement.workerGeneralDeductionInstruction_stop.sffo,status:CONSTANTS.STATUS.NONE}],API={getWorkflowStatus:function(config){var defer=$q.defer();return workflowStatusPromise=defer.promise,WorkflowPendingEventsService.getPendingEvents(config.associateOID,config.bustCache).then(function(pendingEvents){setPendingEvents(pendingEvents).then(function(result){workflowStatus=result,defer.resolve(workflowStatus)},function(error){defer.reject(error)})},function(error){defer.reject(error)}),workflowStatusPromise}};return{getWorkflowStatus:function(config){var defaultConfig=config?config:{};return defaultConfig.bustCache&&(workflowStatus=null,workflowStatusPromise=null),$q.when(workflowStatus||workflowStatusPromise||API.getWorkflowStatus(defaultConfig))},sffoIsPendingOrBlocked:sffoIsPendingOrBlocked}}]),angular.module("redbox.workflow").service("redbox.workflow.WorkflowUtils",["$injector",function($injector){var WORKFLOW_CONSTANTS=$injector.get("redbox.workflow.CONSTANTS"),loggerFactory=$injector.get("adp.ng.logging.LoggerFactory"),logger=loggerFactory.getLogger("redbox.workflow.WorkflowUtils"),API={map:function(obj1,obj2){var key,value,value2,diff={};if(this.isFunction(obj1)||this.isFunction(obj2))throw"Invalid argument is function.";if(this.isValue(obj1)||this.isValue(obj2)){switch(this.compareValues(obj1,obj2)){case WORKFLOW_CONSTANTS.PENDING_ACTION.ADD:value={pending:"add",value:obj2};break;case WORKFLOW_CONSTANTS.PENDING_ACTION.CHANGE:value={pending:"change",prev:obj1,value:obj2};break;case WORKFLOW_CONSTANTS.PENDING_ACTION.REMOVE:value={pending:"remove",value:obj1};break;default:value=obj1}return value}for(key in obj1)if(obj1.hasOwnProperty(key)){if(this.isFunction(obj1[key]))continue;value2=void 0,obj2&&"undefined"!=typeof obj2[key]&&(value2=obj2[key]),diff[key]=this.map(obj1[key],value2)}for(key in obj2)if(obj2.hasOwnProperty(key)){if(this.isFunction(obj2[key])||"undefined"!=typeof diff[key])continue;diff[key]=this.map(void 0,obj2[key])}return diff},compareValues:function(value1,value2){return value1===value2||("undefined"==typeof value1?WORKFLOW_CONSTANTS.PENDING_ACTION.ADD:"undefined"==typeof value2||""===value2?WORKFLOW_CONSTANTS.PENDING_ACTION.REMOVE:WORKFLOW_CONSTANTS.PENDING_ACTION.CHANGE)},isFunction:function(obj){return"function"==typeof obj},isValue:function(obj){return"object"!=typeof obj&&void 0!==obj&&obj.constructor!==Array},getPendingAction:function(pendingData){var pendingAction;return pendingData&&(_.endsWith(pendingData.resourcePath,WORKFLOW_CONSTANTS.PENDING_ACTION.ADD)||_.endsWith(pendingData.resourcePath,WORKFLOW_CONSTANTS.PENDING_ACTION.START)?pendingAction=WORKFLOW_CONSTANTS.PENDING_ACTION.ADD:_.endsWith(pendingData.resourcePath,WORKFLOW_CONSTANTS.PENDING_ACTION.CHANGE)?pendingAction=WORKFLOW_CONSTANTS.PENDING_ACTION.CHANGE:_.endsWith(pendingData.resourcePath,WORKFLOW_CONSTANTS.PENDING_ACTION.REMOVE)||_.endsWith(pendingData.resourcePath,WORKFLOW_CONSTANTS.PENDING_ACTION.STOP)?pendingAction=WORKFLOW_CONSTANTS.PENDING_ACTION.REMOVE:logger.error("Invalid workflow pending resourcePath : ",pendingData.resourcePath)),pendingAction},getValue:function(obj,showPending){var value;switch(obj.pending){case WORKFLOW_CONSTANTS.PENDING_ACTION.ADD:value=showPending?obj.value:void 0;break;case WORKFLOW_CONSTANTS.PENDING_ACTION.CHANGE:value=showPending?obj.value:obj.prev;break;case WORKFLOW_CONSTANTS.PENDING_ACTION.REMOVE:value=showPending?void 0:obj.value;break;default:value=obj}return value}};return{map:function(obj1,obj2){return API.map(obj1,obj2)},getPendingAction:function(pendingData){return API.getPendingAction(pendingData)},getValue:function(obj,showPending){return API.getValue(obj,showPending)}}}]),!function(a){function b(a,b,c){a in h||(h[a]={name:a,declarative:!0,deps:b,declare:c,normalizedDeps:b})}function c(a){return l[a]||(l[a]={name:a,dependencies:[],exports:{},importers:[]})}function d(b){if(!b.module){var e=b.module=c(b.name),f=b.module.exports,i=b.declare.call(a,function(a,b){if(e.locked=!0,"object"==typeof a)for(var c in a)f[c]=a[c];else f[a]=b;for(var d=0,g=e.importers.length;g>d;d++){var h=e.importers[d];if(!h.locked)for(var i=0;i<h.dependencies.length;++i)h.dependencies[i]===e&&h.setters[i](f)}return e.locked=!1,b},b.name);e.setters=i.setters,e.execute=i.execute;for(var j=0,k=b.normalizedDeps.length;k>j;j++){var m,n=b.normalizedDeps[j],o=h[n],p=l[n];p?m=p.exports:o&&!o.declarative?m=o.esModule:o?(d(o),p=o.module,m=p.exports):m=g(n),p&&p.importers?(p.importers.push(e),e.dependencies.push(p)):e.dependencies.push(null),e.setters[j]&&e.setters[j](m)}}}function e(a){var b={};if("object"==typeof a||"function"==typeof a)if(j){var c;for(var d in a)(c=Object.getOwnPropertyDescriptor(a,d))&&k(b,d,c)}else{var e=a&&a.hasOwnProperty;for(var d in a)(!e||a.hasOwnProperty(d))&&(b[d]=a[d])}return b.default=a,k(b,"__useDefault",{value:!0}),b}function f(b,c){var d=h[b];if(d&&!d.evaluated&&d.declarative){c.push(b);for(var e=0,j=d.normalizedDeps.length;j>e;e++){var k=d.normalizedDeps[e];-1==i.call(c,k)&&(h[k]?f(k,c):g(k))}d.evaluated||(d.evaluated=!0,d.module.execute.call(a))}}function g(a){if(n[a])return n[a];if("@node/"==a.substr(0,6))return m(a.substr(6));var b=h[a];if(!b)throw"Module "+a+" not present.";return d(h[a]),f(a,[]),h[a]=void 0,b.declarative&&k(b.module.exports,"__esModule",{value:!0}),n[a]=b.declarative?b.module.exports:b.esModule}var h={},i=Array.prototype.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},j=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(a){j=!1}var k;!function(){try{Object.defineProperty({},"a",{})&&(k=Object.defineProperty)}catch(a){k=function(a,b,c){try{a[b]=c.value||c.get.call(a)}catch(a){}}}}();var l={},m="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,n={"@empty":{}};return function(a,c,d){return function(f){f(function(f){for(var h=0;h<c.length;h++)(function(a,b){b&&b.__esModule?n[a]=b:n[a]=e(b)})(c[h],arguments[h]);d({register:b});var i=g(a[0]);if(a.length>1)for(var h=1;h<a.length;h++)g(a[h]);return i.__useDefault?i.default:i})}}}("undefined"!=typeof self?self:global)(["1"],[],function(a){a.register("1",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){c=angular.module("redbox.onboarding"),c.requires=c.requires.slice(),a("onboardingModule",c)}}})})(function(a){"function"==typeof define&&define.amd?define([],a):"object"==typeof module&&module.exports&&"function"==typeof require?module.exports=a():a()}),!function(a){function b(a,b,c){a in h||(h[a]={name:a,declarative:!0,deps:b,declare:c,normalizedDeps:b})}function c(a){return l[a]||(l[a]={name:a,dependencies:[],exports:{},importers:[]})}function d(b){if(!b.module){var e=b.module=c(b.name),f=b.module.exports,i=b.declare.call(a,function(a,b){if(e.locked=!0,"object"==typeof a)for(var c in a)f[c]=a[c];else f[a]=b;for(var d=0,g=e.importers.length;g>d;d++){var h=e.importers[d];if(!h.locked)for(var i=0;i<h.dependencies.length;++i)h.dependencies[i]===e&&h.setters[i](f)}return e.locked=!1,b},b.name);e.setters=i.setters,e.execute=i.execute;for(var j=0,k=b.normalizedDeps.length;k>j;j++){var m,n=b.normalizedDeps[j],o=h[n],p=l[n];p?m=p.exports:o&&!o.declarative?m=o.esModule:o?(d(o),p=o.module,m=p.exports):m=g(n),p&&p.importers?(p.importers.push(e),e.dependencies.push(p)):e.dependencies.push(null),e.setters[j]&&e.setters[j](m)}}}function e(a){var b={};if("object"==typeof a||"function"==typeof a)if(j){var c;for(var d in a)(c=Object.getOwnPropertyDescriptor(a,d))&&k(b,d,c)}else{var e=a&&a.hasOwnProperty;for(var d in a)(!e||a.hasOwnProperty(d))&&(b[d]=a[d])}return b.default=a,k(b,"__useDefault",{value:!0}),b}function f(b,c){var d=h[b];if(d&&!d.evaluated&&d.declarative){c.push(b);for(var e=0,j=d.normalizedDeps.length;j>e;e++){var k=d.normalizedDeps[e];-1==i.call(c,k)&&(h[k]?f(k,c):g(k))}d.evaluated||(d.evaluated=!0,d.module.execute.call(a))}}function g(a){if(n[a])return n[a];if("@node/"==a.substr(0,6))return m(a.substr(6));var b=h[a];if(!b)throw"Module "+a+" not present.";return d(h[a]),f(a,[]),h[a]=void 0,b.declarative&&k(b.module.exports,"__esModule",{value:!0}),n[a]=b.declarative?b.module.exports:b.esModule}var h={},i=Array.prototype.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},j=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(a){j=!1}var k;!function(){try{Object.defineProperty({},"a",{})&&(k=Object.defineProperty)}catch(a){k=function(a,b,c){try{a[b]=c.value||c.get.call(a)}catch(a){}}}}();var l={},m="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,n={"@empty":{}};return function(a,c,d){return function(f){f(function(f){for(var h=0;h<c.length;h++)(function(a,b){b&&b.__esModule?n[a]=b:n[a]=e(b)})(c[h],arguments[h]);d({register:b});var i=g(a[0]);if(a.length>1)for(var h=1;h<a.length;h++)g(a[h]);return i.__useDefault?i.default:i})}}}("undefined"!=typeof self?self:global)(["1"],[],function(a){a.register("2",["3","4"],function(a,b){var c,d,e;return b&&b.id,{setters:[function(a){c=a},function(a){d=a}],execute:function(){e=function(){function a(a,b,c,d){this.$q=a,this.$http=b,this.$window=c,this.profileService=d}return a.prototype.getImage=function(a,b){var e=this.$q.defer(),f=b===c.PhotoEditorConstants.PHOTO_TYPES.PROFILE?this.profileService.getProfileImageMeta:this.profileService.getBackgroundImageMeta;return f(a).then(function(c){var f="data:"+c.contentType+";base64,"+c.content;e.resolve(new d.Photo(a,b,f))}).catch(function(a){e.reject(a)}),e.promise},a.prototype.uploadImage=function(a){return this.profileService.setImage(a.aoid,a.type,a.imageData)},a.prototype.deleteImage=function(a){var b=this,c=this.$q.defer();return this.profileService.getImageGallery(a.aoid,a.type).then(function(a){for(var d="",e=0;e<a.images.length;e++)if(a.images[e].selected===!0){d=a.images[e].href;break}""!==d?b.profileService.deleteImage(d).then(function(a){c.resolve(a)}).catch(function(a){c.reject(a)}):c.reject("Could not find photo to delete!")}).catch(function(a){c.reject(a)}),c.promise},a.prototype.uploadTempImage=function(a,b,e){var f=this.$q.defer(),g=this,h=$("#"+e),i=h[0];return i.action=c.PhotoEditorConstants.TEMP_URL.replace("{aoid}",a),h.ajaxSubmit({timeout:25e3,resetForm:!0,type:"post",success:function(c){g.getTempImage(a).then(function(c){var e="data:"+c.contentType+";base64,"+c.content;f.resolve(new d.Photo(a,b,e))}).catch(function(a){f.reject(a)})},error:function(a){f.reject(a)}}),f.promise},a.prototype.hasFileAPI=function(){return _.has(this.$window,"FileReader")},a.prototype.getUserMedia=function(){return this.$window.navigator.getUserMedia||this.$window.navigator.webkitGetUserMedia||this.$window.navigator.mozGetUserMedia||this.$window.navigator.msGetUserMedia},a.prototype.getTempImage=function(a){var b={headers:{"loading-indicator":!0}},d=c.PhotoEditorConstants.TEMP_URL.replace("{aoid}",a)+"?"+(new Date).getTime();return this.$http.get(d,b).then(function(a){return a.data})},a.$inject=["$q","$http","$window","redbox.ext.shared.services.ProfileService"],a}(),a("PhotoEditorService",e)}}}),a.register("5",["3","6","4"],function(a,b){var c,d,e,f,g=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a},function(a){d=a},function(a){e=a}],execute:function(){a("PhotoEditorProfileComponent",f={bindings:{aoid:"@",onUpdate:"&",onDelete:"&"},templateUrl:"app/connections/ts/modules/photo-editor/profile-image/photo-editor-profile-component.html",controller:function(a){function b(){a.apply(this,arguments)}return g(b,a),b.prototype.$onInit=function(){var b=this;a.prototype.$onInit.call(this),this.imageZoom=100,this.$scope.$on("adp-image-crop.image",function(a,c){b.photo=new e.Photo(b.aoid,b.getImageType(),c),b.savePhoto()}),this.$scope.$on("adp-image-crop.dirty",function(){b.enableSaveButton=!0})},b.prototype.$onChanges=function(b){a.prototype.$onChanges.call(this,b)},b.prototype.getImageType=function(){return c.PhotoEditorConstants.PHOTO_TYPES.PROFILE},b.prototype.cropAndSave=function(){this.$scope.$broadcast("adp-image-crop.crop"),this.$scope.$broadcast("adp-image-crop.allowEditing",!1)},b.prototype.onPhotoTaken=function(a){this.photo=a,this.imageZoom=100,this.enableSaveButton=!0,this.cameraSlidein.hide()},b.prototype.openCameraSlideIn=function(){this.cameraSlidein=this.focusSlideIn({scope:this.$scope,backButton:this.$language.get("shared.BACK"),contentTemplate:"app/connections/ts/modules/photo-editor/profile-image/profile-camera-slidein.html"})},b}(d.PhotoEditorComponent)})}}}),a.register("3",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){a("PhotoEditorConstants",c={PHOTO_TYPES:{PROFILE:"profile",BACKGROUND:"background"},TEMP_URL:"/redboxapi/core/profile/v1/associates/{aoid}/images/temp",NO_PHOTO:"NO_PHOTO",ERROR_MESSAGES:{TOO_LONG:"connections.PROFILE_IMAGE_UPLOAD_ERROR_TOO_LARGE",BAD_CONTENT:"connections.PROFILE_IMAGE_UPLOAD_ERROR_INVALID"}})}}}),a.register("6",["3","4"],function(a,b){var c,d,e;return b&&b.id,{setters:[function(a){c=a},function(a){d=a}],execute:function(){e=function(){function a(a,b,c,d,e,f,g){this.$scope=a,this.$window=b,this.$sce=c,this.$q=d,this.$language=e,this.focusSlideIn=f,this.photoEditorService=g}return a.prototype.$onInit=function(){this.enableSaveButton=!1,this.isLoading=!1,this.errorMessage=""},a.prototype.$onChanges=function(a){var b=this;this.aoid&&this.getImageType()&&(this.isLoading=!0,this.photoEditorService.getImage(this.aoid,this.getImageType()).then(function(a){b.photo=a,b.hasCurrentPhoto=!0}).catch(function(a){0===_.keys(a).length?b.hasCurrentPhoto=!1:b.processErrorMessage(a)}).finally(function(){b.isLoading=!1}))},a.prototype.savePhoto=function(){var a=this;this.isLoading=!0,this.errorMessage="",this.photoEditorService.uploadImage(this.photo).then(function(b){a.onUpdate({imageData:a.photo.imageData})}).catch(function(b){a.processErrorMessage(b)}).finally(function(){a.isLoading=!1})},a.prototype.removePhoto=function(){var a=this;this.isLoading=!0,this.errorMessage="",this.photoEditorService.deleteImage(this.photo).then(function(b){a.photo=null,a.onDelete()}).catch(function(b){a.processErrorMessage(b)}).finally(function(){a.isLoading=!1})},a.prototype.onPhotoSelected=function(a,b){if(a.errorMessage="",a.photoEditorService.hasFileAPI()){var c=new this.$window.FileReader;c.onloadend=function(){a.enableSaveButton=!0,a.photo=new d.Photo(a.aoid,a.getImageType(),c.result),a.$scope.$apply()};try{c.readAsDataURL(b.files[0])}catch(b){a.processErrorMessage(b),a.$scope.$apply()}}else a.isLoading=!0,a.photoEditorService.uploadTempImage(a.aoid,a.getImageType(),"photo-editor-form").then(function(b){a.photo=b,a.enableSaveButton=!0}).catch(function(b){a.processErrorMessage(b)}).finally(function(){a.isLoading=!1})},a.prototype.hasCamera=function(){return!_.isUndefined(this.photoEditorService.getUserMedia())},a.prototype.processErrorMessage=function(a){var b=_.get(a,"confirmMessage.resourceMessages[0].processMessages[0].userMessage.codeValue","");this.errorMessage=this.$language.get(_.get(c.PhotoEditorConstants.ERROR_MESSAGES,b,"shared.OOPS_TRYAGAIN"))},a.$inject=["$scope","$window","$sce","$q","$language","adp.ng.ui.slidein.FocusSlideIn","redbox.connections.photoeditor.PhotoEditorService"],a}(),a("PhotoEditorComponent",e)}}}),a.register("7",["3","6"],function(a,b){var c,d,e,f=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a},function(a){d=a}],execute:function(){a("PhotoEditorBackgroundComponent",e={bindings:{aoid:"@",onUpdate:"&",onDelete:"&"},templateUrl:"app/connections/ts/modules/photo-editor/background-image/photo-editor-background-component.html",controller:function(a){function b(){a.apply(this,arguments)}return f(b,a),b.prototype.$onChanges=function(b){a.prototype.$onChanges.call(this,b)},b.prototype.getImageType=function(){return c.PhotoEditorConstants.PHOTO_TYPES.BACKGROUND},b.prototype.getImageUrl=function(){return this.photo?{"background-image":"url("+this.photo.imageData+")"}:""},b.prototype.onPhotoTaken=function(a){this.photo=a,this.enableSaveButton=!0,this.cameraSlidein.hide()},b.prototype.openCameraSlideIn=function(){this.cameraSlidein=this.focusSlideIn({scope:this.$scope,backButton:this.$language.get("shared.BACK"),contentTemplate:"app/connections/ts/modules/photo-editor/background-image/background-camera-slidein.html"})},b}(d.PhotoEditorComponent)})}}}),a.register("4",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){c=function(){function a(a,b,c){this.aoid=a,this.type=b,this.imageData=c}return a}(),a("Photo",c)}}}),a.register("8",["4"],function(a,b){var c,d;return b&&b.id,{setters:[function(a){c=a}],execute:function(){a("PhotoEditorCameraComponent",d={bindings:{aoid:"@",imageType:"@",radialCanvas:"@",onPhotoTaken:"&"},templateUrl:"app/connections/ts/modules/photo-editor/camera/photo-editor-camera-component.html",controller:function(){function a(a,b,c,d,e){this.$scope=a,this.$window=b,this.$timeout=c,this.$language=d,this.photoEditorService=e,this.radialCanvas=this.radialCanvas}return a.prototype.$onDestroy=function(){this.videoStream&&_.forEach(this.videoStream.getTracks(),function(a){a.stop()})},a.prototype.enableCamera=function(){var a=this,b=this.photoEditorService.getUserMedia();b?b.call(this.$window.navigator,{video:!0,audio:!1},function(b){a.video=a.$window.document.querySelector("video"),a.videoStream=b,a.video.src=a.$window.URL.createObjectURL(b),a.video=a.$window.document.getElementById("camera-view"),a.video.addEventListener("play",function(){a.copyToCanvas()},!1)},function(b){a.showError=!0,a.$scope.$apply()}):this.showError=!0},a.prototype.takePhoto=function(){var a=this.$window.document.getElementById("canvas-view");this.onPhotoTaken({photo:new c.Photo(this.aoid,this.imageType,a.toDataURL())})},a.prototype.copyToCanvas=function(){var a=this;if(!this.video.paused&&!this.video.ended){var b=this.$window.document.getElementById("canvas-view");if(b){var c=b.getContext("2d");c&&c.drawImage(this.video,0,0,this.video.width,this.video.height)}this.$timeout(function(){a.copyToCanvas()},0)}},a.$inject=["$scope","$window","$timeout","$language","redbox.connections.photoeditor.PhotoEditorService"],a}()})}}}),a.register("9",["2","4","6","5","7","8"],function(a,b){var c,d,e,f,g,h,i;return b&&b.id,{setters:[function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a},function(a){h=a}],execute:function(){i=angular.module("redbox.connections.photoeditor",["redbox.shared.services"]),i.service("redbox.connections.photoeditor.PhotoEditorService",c.PhotoEditorService).factory("redbox.connections.photoeditor.model.Photo",d.Photo).component("conPhotoEditorProfile",f.PhotoEditorProfileComponent).component("conPhotoEditorBackground",g.PhotoEditorBackgroundComponent).component("conPhotoEditorCamera",h.PhotoEditorCameraComponent),a("PhotoEditorModule",i),a("PhotoEditorService",c.PhotoEditorService),a("Photo",d.Photo),a("PhotoEditorComponent",e.PhotoEditorComponent),a("PhotoEditorProfileComponent",f.PhotoEditorProfileComponent),a("PhotoEditorBackgroundComponent",g.PhotoEditorBackgroundComponent),a("PhotoEditorCameraComponent",h.PhotoEditorCameraComponent)}}}),a.register("a",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){c=function(){function a(a){this.config=a,this.inputFields={},this.businessRules=[],this.eventPayload={},_.set(this.eventPayload,"events[0].data.eventContext.worker.associateOID",a.aoid),_.set(this.eventPayload,"events[0].serviceCategoryCode.codeValue",a.sffo[0]),_.set(this.eventPayload,"events[0].eventNameCode.codeValue",a.sffo[3])}return a.prototype.getEventPayload=function(){var a=this,b=angular.copy(this.eventPayload);return _.forEach(this.inputFields,function(c,d){if(a.shouldIncludeInput(c,d)){var e=d.replace(/\//g,"."),f=_.set({},"events[0].data.transform"+e,c.value);b=_.merge(b,f)}}),b},a.prototype.setEventContextItemID=function(a,b){var c=a.replace(/\//g,".");_.set(this.eventPayload,"events[0].data.eventContext"+c,b)},a.prototype.evaluateBusinessRules=function(){var a=this.inputFields;_.forEach(this.businessRules,function(b){_.forEach(b.expressions,function(b){var c=_.get(a,b.sourceProperty.fieldName),d=_.get(a,b.targetProperty.fieldName),e=_.isArray(b.sourceProperty.value)?b.sourceProperty.value[0]:b.sourceProperty.value,f="pattern"===b.sourceProperty.comparison?new RegExp(e).test(c.value):_.isEqual(e+"",c.value+""),g=_.get(d,b.targetProperty.property);_.set(d,b.targetProperty.property,f?b.targetProperty.value:!b.targetProperty.value),_.set(d,"value","hidden"===b.targetProperty.property&&!g&&d.hidden?"":d.value)})}),_.forEach(this.inputFields,function(b){if(_.has(b,"codeList.hrefTemplate")){var c=b.codeList.hrefTemplate.match(/{#(.+)}/)[1];if(c){var d=_.get(a,c);b.codeList.href=b.codeList.hrefTemplate.replace("{#"+c+"}",d.value)}}})},a.prototype.shouldIncludeInput=function(a,b){var c=!a.hidden&&!_.isNull(a.value)&&!_.isUndefined(a.value);return c=c&&!_.includes(_.keys(this.inputFields),b+"/codeValue")},a}(),a("MetaForm",c)}}}),a.register("b",["a"],function(a,b){var c,d;return b&&b.id,{setters:[function(a){c=a}],execute:function(){d=function(){function a(a,b){this.$http=a,this.userPermissionService=b}return a.prototype.loadMeta=function(a,b){var c=this,d=this.userPermissionService.getOperationHref({sffo:b.sffo})+"/meta";return this.$http({url:d,method:"GET",aoid:b.aoid,cache:!0}).then(function(d){var e=d.data.meta;b.patch&&(e=c.patchMeta(e,b.patch));var f=c.digestMeta(e,b);return a&&c.applyModelValues(f.inputFields,a),f.evaluateBusinessRules(),f})},a.prototype.save=function(a){var b=a.getEventPayload(),c=this.userPermissionService.getOperationHref({sffo:a.config.sffo}),d=a.config.workflowEnabled?"/wf"+c:c;return this.$http({url:d,method:"POST",aoid:a.config.aoid,data:b})},a.prototype.digestMeta=function(a,b){var d=this,e=new c.MetaForm(b),f=_.get(a,"/data/transforms[0]",{});return _.forEach(f,function(a,b){d.digestInput(a,b,e)}),e},a.prototype.digestInput=function(a,b,c){var d={id:b,value:a.default||null};d=angular.extend(d,a),a.codeList?(a.codeList.links&&(d.codeList=_.get(a.codeList,"links[0]"),d.codeList.href.indexOf("{#")!==-1&&(d.codeList.hrefTemplate=d.codeList.href,d.codeList.href="")),a.codeList.listItems&&_.set(d,"codeList.listItems",a.codeList.listItems),d.dataType=a.dataType||"codelist"):d.dataType=a.dataType||"text",_.set(c.inputFields,b,d),_.has(a,"dependencies")&&this.digestDependencies(a,b,c)},a.prototype.digestDependencies=function(a,b,c){var d=this;_.forEach(a.dependencies,function(a,e){var f={expressionType:_.has(a,"allOf")?"allOf":"oneOf",expressions:Array()},g=_.get(a,f.expressionType);g=_.isArray(g)?g:[g],"pattern"!==e?(_.forEach(g,function(a){_.forEach(a.attributes,function(c,g){var h={},i=g,j=_.keys(a.attributes[i])[0],k=a.attributes[i][j];_.set(h,"sourceProperty.fieldName",d.normalizeFieldPath(i)),_.set(h,"sourceProperty.comparison",j),_.set(h,"sourceProperty.value",k),_.set(h,"targetProperty.fieldName",d.normalizeFieldPath(b)),_.set(h,"targetProperty.property",e),_.set(h,"targetProperty.value",a.value),f.expressions.push(h)})}),c.businessRules.push(f)):_.forEach(g,function(a){_.forEach(a.attributes,function(e,f){var g=_.has(c.inputFields,f)?_.get(c.inputFields,f):_.clone(e);_.set(g,"hidden",!0),_.set(g,"dependencies.hidden.oneOf.value",!1),_.set(g,"dependencies.hidden.oneOf.attributes."+b+".pattern",a.value),_.has(c.inputFields,f)||_.set(c.inputFields,f,g),d.digestInput(g,f,c)})})})},a.prototype.applyModelValues=function(a,b){_.forEach(a,function(a,c){var d=c.replace(/\//g,"."),e=_.get(b,d,null);a.value=angular.copy(e)})},a.prototype.normalizeFieldPath=function(a){return a.replace("//","/")},a.prototype.patchMeta=function(a,b){return _.merge(a,b.meta)},a.$inject=["$http","redbox.ext.shared.services.UserPermissionService"],a}(),a("MetaFormService",d)}}}),a.register("c",["d"],function(a,b){var c,d,e=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a}],execute:function(){a("MetaFormComponent",d={bindings:{metaForm:"<",formName:"@",onFormStateChange:"&",onBeforeSave:"&",onSuccess:"&",onCancel:"&",onError:"&",onLoading:"&"},transclude:!0,templateUrl:"app/connections/ts/modules/meta-forms/meta-form-component.html",
controller:function(a){function b(){a.apply(this,arguments)}return e(b,a),b.prototype.$onInit=function(){this.formName=this.formName||"metaForm",this.onFormStateChange({formState:this.ngFormCtrl})},b.prototype.$onChanges=function(a){this.onFormStateChange({formState:this.ngFormCtrl})},b}(c.MetaFormBaseComponent)})}}}),a.register("e",["f"],function(a,b){var c,d,e=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a}],execute:function(){a("MetaInputFieldCheckboxComponent",d={bindings:{inputField:"<",label:"@",type:"@",onUpdate:"&"},require:{formCtrl:"^conMetaForm"},templateUrl:"app/connections/ts/modules/meta-forms/input-fields/meta-input-field-checkbox-component.html",controller:function(a){function b(){a.apply(this,arguments)}return e(b,a),b.prototype.$onChanges=function(){this.type=this.type||""},b}(c.MetaInputFieldBaseComponent)})}}}),a.register("10",["f"],function(a,b){var c,d,e=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a}],execute:function(){a("MetaInputFieldCodelistComponent",d={bindings:{inputField:"<",codeList:"<",codeListUrl:"<",label:"@",onUpdate:"&",onError:"&"},require:{formCtrl:"^conMetaForm"},templateUrl:"app/connections/ts/modules/meta-forms/input-fields/meta-input-field-codelist-component.html",controller:function(a){function b(b){a.call(this),this.$http=b}return e(b,a),b.prototype.$onChanges=function(a){this.inputField&&!this.inputField.hidden&&this.loadCodelist()},b.prototype.loadCodelist=function(){var a=this;this.codeListUrl?this.$http.get(this.codeListUrl,{cache:!0}).then(function(b){var c=_.has(b,"data.codeLists[0]")?"data.codeLists[0].listItems":"data.listItems";a.codeList=_.get(b,c,[]),a.codeList[0]&&!a.codeList[0].shortName&&_.forEach(a.codeList,function(a){a.shortName=a.longName}),_.find(a.codeList,{codeValue:a.inputField.value})||(a.inputField.value=null)}).catch(function(b){a.onError({error:b})}):this.codeList&&(_.find(this.codeList,{codeValue:this.inputField.value})||(this.inputField.value=null))},b.$inject=["$http"],b}(c.MetaInputFieldBaseComponent)})}}}),a.register("11",["f"],function(a,b){var c,d,e,f=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a}],execute:function(){a("MetaInputFieldPhoneListComponent",d={bindings:{phoneListField:"<",nameCodeList:"<",nameCodeListUrl:"<",phoneListConfig:"<",onUpdate:"&"},require:{formCtrl:"^conMetaForm"},templateUrl:"app/connections/ts/modules/meta-forms/input-fields/meta-input-field-phone-list-component.html",controller:function(a){function b(b,c,d){a.call(this),this.$http=b,this.$q=c,this.$language=d}return f(b,a),b.prototype.$onChanges=function(){var a=this;this.isLoading=!0,this.loadCodelist().then(function(){a.setPhones()}).finally(function(){a.isLoading=!1})},b.prototype.addPhone=function(){var a=this,b=new e,c=_.filter(this.nameCodeList,function(b){var c=_.find(a.phoneListField.value,function(a){return a.nameCode.codeValue===b.codeValue});return!c});b.nameCode=_.head(c),this.phoneListField.value.push(b)},b.prototype.getLabel=function(a){var b=_.get(this.phoneListConfig.labelMappings,a.codeValue);return b?this.$language.get(b):a.longName},b.prototype.setPhones=function(){var a=this;for(this.minPhones=this.phoneListField.minItems||1,this.maxPhones=this.phoneListField.maxItems||1,_.set(this.phoneListField,"value",this.phoneListField.value||[]);this.phoneListField.value.length<this.maxPhones;)this.addPhone();this.phoneListField.value=_.sortBy(this.phoneListField.value,function(b){return a.phoneListConfig.preferredOrder.indexOf(b.nameCode.codeValue)})},b.prototype.loadCodelist=function(){var a=this,b=this.$q.when();return this.nameCodeListUrl&&(b=this.$http.get(this.nameCodeListUrl,{cache:!0}).then(function(b){var c=_.has(b,"data.codeLists[0]")?"data.codeLists[0].listItems":"data.listItems";a.nameCodeList=_.get(b,c,[]),a.nameCodeList[0]&&!a.nameCodeList[0].shortName&&_.forEach(a.nameCodeList,function(a){a.shortName=a.longName})})),b},b.$inject=["$http","$q","$language"],b}(c.MetaInputFieldBaseComponent)}),e=function(){function a(){this.nameCode={codeValue:""},this.formattedNumber="",this.countryDialing=""}return a}(),a("PhoneModel",e)}}}),a.register("12",["f"],function(a,b){var c,d,e=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a}],execute:function(){a("MetaInputFieldTextComponent",d={bindings:{inputField:"<",label:"@",type:"@",countryCode:"<",onUpdate:"&"},require:{formCtrl:"^conMetaForm"},templateUrl:"app/connections/ts/modules/meta-forms/input-fields/meta-input-field-text-component.html",controller:function(a){function b(){a.apply(this,arguments)}return e(b,a),b.prototype.$onInit=function(){this.type=this.type||"text"},b}(c.MetaInputFieldBaseComponent)})}}}),a.register("13",["f"],function(a,b){var c,d,e=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a}],execute:function(){a("MetaInputFieldRadioComponent",d={bindings:{inputField:"<",label:"@",value:"@",isDefault:"<",onUpdate:"&"},require:{formCtrl:"^conMetaForm"},templateUrl:"app/connections/ts/modules/meta-forms/input-fields/meta-input-field-radio-component.html",controller:function(a){function b(){a.apply(this,arguments)}return e(b,a),b.prototype.$onInit=function(){this.isDefault&&!this.inputField.value&&(this.inputField.value=this.value)},b}(c.MetaInputFieldBaseComponent)})}}}),a.register("d",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){c=function(){function a(a){this.metaFormService=a,this.inputValidators=[]}return a.prototype.save=function(){var a=this;this.onBeforeSave(),this.onLoading({loading:!0}),this.metaFormService.save(this.metaForm).then(function(b){a.onSuccess({result:b})}).catch(function(b){a.onError({error:b})}).finally(function(){a.onLoading({loading:!1})})},a.prototype.cancel=function(){this.onCancel()},a.prototype.validate=function(){var a=!0;return _.forEach(this.inputValidators,function(b){a=a&&b.validate()}),a},a.prototype.onUpdate=function(a){this.metaForm.evaluateBusinessRules()},a.prototype.onBeforeSave=function(){return!0},a.prototype.onValidate=function(){return!0},a.prototype.addInputValidator=function(a){this.inputValidators.push(a)},a.prototype.onInputChange=function(a){this.metaForm.evaluateBusinessRules();var b=this.validate();this.ngFormCtrl.$setValidity("inputs",b,this.ngFormCtrl),this.onFormStateChange({formState:this.ngFormCtrl})},a.prototype.isFormDirty=function(){return this.ngFormCtrl&&this.ngFormCtrl.$dirty},a.prototype.isFormValid=function(){return this.ngFormCtrl&&this.ngFormCtrl.$valid},a.prototype.isSaveEnabled=function(){return this.isFormDirty()&&this.isFormValid()},a.prototype.onLoading=function(a){},a.prototype.onError=function(a){},a.prototype.onSuccess=function(a){},a.prototype.onCancel=function(){},a.$inject=["redbox.connections.metaforms.MetaFormService"],a}(),a("MetaFormBaseComponent",c)}}}),a.register("14",["d"],function(a,b){var c,d,e=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a}],execute:function(){a("MetaFormRemoveSimpleComponent",d={bindings:{metaForm:"<",formName:"@",confirmationMessage:"@",onSuccess:"&",onCancel:"&",onError:"&",onLoading:"&"},templateUrl:"app/connections/ts/modules/meta-forms/form-layouts/meta-form-remove-simple-component.html",controller:function(a){function b(){a.apply(this,arguments)}return e(b,a),b.prototype.delete=function(){this.save()},b}(c.MetaFormBaseComponent)})}}}),a.register("15",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){a("MetaPagedFormComponent",c={bindings:{sizeToLargest:"<"},templateUrl:"app/connections/ts/modules/meta-forms/form-layouts/meta-paged-form-component.html",transclude:!0,require:{metaFormCtrl:"^conMetaForm"},controller:function(){function a(){this.currentSectionIndex=0,this.numSections=0,this.currentSection=null,this.showSave=!1,this.sections=[],this.showNext=!1,this.showPrevious=!1}return a.prototype.addSection=function(a){_.isUndefined(a.page)?this.sections.push(a):this.sections.splice(a.page,0,a),this.numSections++,1===this.sections.length&&this.setCurrentSection(a),this.setButtonStatuses()},a.prototype.moveToNextSection=function(){for(var a=0;a<this.sections.length-1;a++)if(this.sections[a].visible){this.sections[a].visible=!1,this.setCurrentSection(this.sections[a+1]);break}this.setButtonStatuses()},a.prototype.moveToPreviousSection=function(){for(var a=this.sections.length-1;a>0;a--)if(this.sections[a].visible){this.sections[a].visible=!1,this.setCurrentSection(this.sections[a-1]);break}this.setButtonStatuses()},a.prototype.setCurrentSection=function(a){for(var b=0;b<this.sections.length;b++)a===this.sections[b]&&(this.currentSectionIndex=b);this.currentSection=a,a.visible=!0},a.prototype.setButtonStatuses=function(){this.showNext=this.sections.length>0&&!this.sections[this.sections.length-1].visible,this.showSave=!this.showNext,this.showPrevious=this.sections.length>0&&!this.sections[0].visible},a}()})}}}),a.register("16",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){a("MetaPagedFormSectionComponent",c={bindings:{name:"@",page:"@"},templateUrl:"app/connections/ts/modules/meta-forms/form-layouts/meta-paged-form-section-component.html",transclude:!0,require:{metaPagedForm:"^conMetaPagedForm"},controller:function(){function a(){this.visible=!1}return a.prototype.$postLink=function(){this.metaPagedForm.addSection(this)},a.prototype.getPage=function(){return this.page},a}()})}}}),a.register("17",["d","a","b","c","f","e","10","11","12","13","14","15","16"],function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;return b&&b.id,{setters:[function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a},function(a){h=a},function(a){i=a},function(a){j=a},function(a){k=a},function(a){l=a},function(a){m=a},function(a){n=a},function(a){o=a}],execute:function(){p=angular.module("redbox.connections.metaforms",[]),p.service("redbox.connections.metaforms.MetaFormService",e.MetaFormService).service("redbox.connections.metaforms.MetaFormBase",c.MetaFormBaseComponent).component("conMetaForm",f.MetaFormComponent).component("conMetaInputFieldCheckbox",h.MetaInputFieldCheckboxComponent).component("conMetaInputFieldCodelist",i.MetaInputFieldCodelistComponent).component("conMetaInputFieldPhoneList",j.MetaInputFieldPhoneListComponent).component("conMetaInputFieldText",k.MetaInputFieldTextComponent).component("conMetaInputFieldRadio",l.MetaInputFieldRadioComponent).component("conMetaFormRemoveSimple",m.MetaFormRemoveSimpleComponent).component("conMetaPagedForm",n.MetaPagedFormComponent).component("conMetaPagedFormSection",o.MetaPagedFormSectionComponent),a("MetaFormService",e.MetaFormService),a("MetaFormBaseComponent",c.MetaFormBaseComponent),a("MetaForm",d.MetaForm),a("MetaFormComponent",f.MetaFormComponent),a("MetaInputFieldBaseComponent",g.MetaInputFieldBaseComponent),a("MetaInputFieldCheckboxComponent",h.MetaInputFieldCheckboxComponent),a("MetaInputFieldCodelistComponent",i.MetaInputFieldCodelistComponent),a("MetaInputFieldPhoneListComponent",j.MetaInputFieldPhoneListComponent),a("MetaFormsModule",p),a("MetaInputFieldTextComponent",k.MetaInputFieldTextComponent),a("MetaFormRemoveSimpleComponent",m.MetaFormRemoveSimpleComponent),a("MetaPagedFormComponent",n.MetaPagedFormComponent),a("MetaPagedFormSectionComponent",o.MetaPagedFormSectionComponent)}}}),a.register("18",["19","1a"],function(a,b){var c,d,e,f;return b&&b.id,{setters:[function(a){c=a},function(a){d=a}],execute:function(){!function(a){a[a.add=0]="add",a[a.change=1]="change",a[a.remove=2]="remove"}(e||(e={})),f=function(){function a(a,b,c){this.$q=a,this.$http=b,this.WORKFLOW_CONSTANTS=c}return a.prototype.recallWorkflow=function(a,b){var c=a.eventUri,d=this.WORKFLOW_CONSTANTS.WORKER_WF_RECALL_URL,e={};return d=d.replace("/{operation}",c),_.set(e,this.WORKFLOW_CONSTANTS.WORKER_WF_RECALL_PAYLOAD,b),this.$http({url:d,method:"POST",aoid:b,data:e})},a.prototype.getEmergencyContactsList=function(b,c){var d=this,e=this.$q.defer(),f=!c;return this.$http({url:a.SERVICE_URL.replace("{associateoid}",b),method:"GET",aoid:b,cache:f}).then(function(a){var c=[],g=a.data;g.currentData?(_.forEach(g.currentData.personalContacts,function(a){c.push(d.$http({url:a.links[0].href,method:"GET",aoid:b,cache:f}))}),d.$q.all(c).then(function(a){var b=[];_.forEach(a,function(a){var c=_.get(a,"data.personalContacts[0]",{});b.push(c)}),g.currentData.personalContacts=b,e.resolve(d.buildContactsList(g))}).catch(function(a){e.reject(a)})):e.resolve(d.buildContactsList(g))}).catch(function(a){e.reject(a)}),e.promise},a.prototype.buildContactsList=function(b){var e=new c.EmergencyContactsList,f=this.parsePendingContacts(b),g=_.get(b,"currentData.personalContacts",[]);return _.forEach(g,function(a){var b=_.get(f,a.personName.formattedName),c=d.EmergencyContact.fromJSON(a,b);e.pushContact(c)}),_.has(b,"error")&&_.get(b,"wfStatusCode")===a.NON_REDBOX_WF_CODE&&e.setNonRedboxWorkflowEvents(!0),e},a.prototype.parsePendingContacts=function(a){var b={},c=_.get(a,"pendingEvents",[]);return _.forEach(c,function(c){var d=_.get(c,"body.events[0].data.transform.personalContact"),f=_.get(d,"personName.formattedName")||_.get(c,"body.events[0].data.eventContext.personalContact.itemID"),g={submitter:_.get(c,"submitter"),assignedTo:_.get(c,"history[0].assignedTo"),pendingData:d,eventUri:c.resourcePath,eventType:c.resourcePath.substr(c.resourcePath.lastIndexOf(".")+1)};_.set(b,f,g),g.eventType===e[e.add]&&(_.has(a,"currentData.personalContacts")?a.currentData.personalContacts.push(d):_.set(a,"currentData.personalContacts",[d]))}),b},a.$inject=["$q","$http","redbox.workflow.CONSTANTS"],a.SERVICE_URL="/wf/hr/v2/associates/{associateoid}/personal-contacts",a.NON_REDBOX_WF_CODE=1002,a}(),a("EmergencyContactsService",f)}}}),a.register("1b",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){c=function(){function a(a,b,c,d){this.$q=a,this.SFFO=b,this.UserPermissionService=c,this.loggerFactory=d,this.logger=d.getLogger("redbox.connections.emergencycontacts.EmergencyContactsPermissionsService")}return a.prototype.getEmergencyContactsPermissions=function(a){var b=this,c=this.$q.defer();return this.UserPermissionService.init().then(function(){var d={read:!1,add:!1,change:!1,remove:!1};d.read=b.UserPermissionService.hasPermission(b.SFFO.workerInformationManagement.workerManagement.personalContactManagement.personalContact_read,a),d.add=b.UserPermissionService.hasPermission(b.SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_add,a),d.change=b.UserPermissionService.hasPermission(b.SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_change,a),d.remove=b.UserPermissionService.hasPermission(b.SFFO.workerInformationManagement.workerManagement.personalContactManagement.worker_personalContact_remove,a),c.resolve(d)}).catch(function(a){b.logger.error("workerProfilePermissions: exception caught",a),c.reject(a)}),c.promise},a.$inject=["$q","redbox.ext.shared.constants.SFFOConstant","redbox.ext.shared.services.UserPermissionService","adp.ng.logging.LoggerFactory"],a}(),a("EmergencyContactsPermissionsService",c)}}}),a.register("19",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){c=function(){function a(){this.contactsArray=[]}return a.prototype.getContactsLength=function(){return this.contactsArray.length},a.prototype.getAllContacts=function(){return _.sortBy(this.contactsArray,function(a){return(a.isPending()?0:10)+(a.isPrimary()?0:1)})},a.prototype.getPrimaryContact=function(){var a=_.find(this.contactsArray,function(a){return a.isPrimary()});return a||_.first(this.contactsArray)},a.prototype.getPendingContact=function(){return _.find(this.contactsArray,function(a){return a.isPending()})},a.prototype.pushContact=function(a){this.contactsArray.push(a)},a.prototype.checkDuplicateContacts=function(a){return _.find(this.contactsArray,function(b){return b.personName.formattedName===a})},a.prototype.isPendingWorkflow=function(){return this.nonRedboxWorkflowEvents||this.getPendingContact()},a.prototype.setNonRedboxWorkflowEvents=function(a){this.nonRedboxWorkflowEvents=a},a}(),a("EmergencyContactsList",c)}}}),a.register("1a",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){c=function(){function a(){}return a.fromJSON=function(b,c){var d=new a;for(var e in b)d[e]=b[e];return d.pendingEvent=c,d.pendingEvent&&_.has(c,"pendingData")&&(d.pendingContact=a.fromJSON(c.pendingData),d.wfSubmittedBy=_.get(c,"submitter.userOID")),d},a.prototype.isPending=function(){return!_.isUndefined(this.pendingEvent)},a.prototype.isPrimary=function(){return"Y"===_.get(this,"precedenceCode.codeValue")||"PRIM"===_.get(this,"precedenceCode.codeValue")},a.prototype.getDisplayName=function(){var a=this.personName.formattedName.split(",");return a[1]+" "+a[0]},a}(),a("EmergencyContact",c)}}}),a.register("1c",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){a("EmergencyContactsTileComponent",c={bindings:{associateOid:"@",worker:"<"},templateUrl:"app/connections/modules/emergency-contacts/ts/emergency-contacts-tile/emergency-contacts-tile-component.html",controller:function(){function a(a,b,c,d,e){this.$scope=a,this.$language=b,this.focusSlideIn=c,this.emergencyContactsService=d,this.contactsPermissionService=e,this.isLoading=!1,this.isError=!1}return a.prototype.$onInit=function(){this.loadPermissions()},a.prototype.onEmergencyContactsUpdated=function(a){null===a?this.isLoading=!0:(this.updateContactsList(a),this.isLoading=!1)},a.prototype.updateContactsList=function(a){this.contactsList=a,this.contactsList.getContactsLength()>0&&(this.contact=this.contactsList.getAllContacts()[0])},a.prototype.loadSlidein=function(){this.focusSlideIn({scope:this.$scope,backButton:this.$language.get("connections.PROFILE_PROFILE"),contentTemplate:"app/connections/modules/emergency-contacts/ts/emergency-contacts-tile/emergency-contacts-slidein.html"})},a.prototype.loadPermissions=function(){var a=this;this.isLoading=!0,this.contactsPermissionService.getEmergencyContactsPermissions(this.associateOid).then(function(b){a.permissions=b,a.isLoading=!1,a.loadContacts(!0)}).catch(function(b){a.isLoading=!1,a.isError=!0})},a.prototype.loadContacts=function(a){var b=this;this.isLoading=!0,this.emergencyContactsService.getEmergencyContactsList(this.associateOid,a).then(function(a){b.updateContactsList(a)}).catch(function(a){b.isError=!0}).finally(function(){b.isLoading=!1,b.$scope.$emit("showMe")})},a.$inject=["$scope","$language","adp.ng.ui.slidein.FocusSlideIn","redbox.connections.emergencycontacts.EmergencyContactsService","redbox.connections.emergencycontacts.EmergencyContactsPermissionsService"],a}()})}}}),a.register("1d",[],function(a,b){var c,d;return b&&b.id,{setters:[],execute:function(){!function(a){a[a.View=0]="View",a[a.Add=1]="Add",a[a.Edit=2]="Edit",a[a.Delete=3]="Delete",a[a.Pending=4]="Pending"}(c||(c={})),a("EmergencyContactsSlideinComponent",d={bindings:{associateOid:"@",onEmergencyContactsUpdated:"&",worker:"<"},templateUrl:"app/connections/modules/emergency-contacts/ts/emergency-contacts-slidein/emergency-contacts-slidein-component.html",controller:function(){function a(a,b,d,e){this.$scope=a,this.emergencyContactsService=b,this.UserIdentityService=d,this.contactsPermissionService=e,this.isLoading=!1,this.isError=!1,this.enuSlideInStatus=c,this.slideInStatus=c.View}return a.prototype.$onInit=function(){var a=this;this.UserIdentityService.getAoid().then(function(b){a.userOid=b}),this.loadPermissions(),this.setupFormListeners()},a.prototype.setAddCard=function(a){this.addCard=a},a.prototype.startEditing=function(a){this.slideInStatus=c.Edit,this.contactBeingEdited=a},a.prototype.startViewing=function(){this.slideInStatus=c.View},a.prototype.startAdding=function(){this.slideInStatus=c.Add},a.prototype.startDeleting=function(a){this.slideInStatus=c.Delete,this.contactBeingEdited=a},a.prototype.processAfterSuccessfulEdit=function(){this.loadContacts(!0)},a.prototype.isContactCardDisabled=function(a){var b=this.contactsList.getPendingContact();return this.contactsList.isPendingWorkflow()||b&&b!==a||this.slideInStatus===this.enuSlideInStatus.Add||(this.slideInStatus===this.enuSlideInStatus.Delete||this.slideInStatus===this.enuSlideInStatus.Edit)&&this.contactBeingEdited!==a},a.prototype.loadPermissions=function(){var a=this;this.isLoading=!0,this.contactsPermissionService.getEmergencyContactsPermissions(this.associateOid).then(function(b){a.permissions=b,a.isLoading=!1,a.loadContacts(!0)}).catch(function(b){a.isLoading=!1,a.isError=!0})},a.prototype.loadContacts=function(a){var b=this;this.isLoading=!0,this.onEmergencyContactsUpdated({list:null}),this.emergencyContactsService.getEmergencyContactsList(this.associateOid,a).then(function(a){b.onEmergencyContactsUpdated({list:a}),b.contactsList=a,b.contacts=a.getAllContacts(),b.slideInStatus=b.contactsList.isPendingWorkflow()?c.Pending:c.View}).catch(function(a){b.isError=!0}).finally(function(){b.isLoading=!1})},a.prototype.onAddFormLoading=function(a){this.addCardLoading=a},a.prototype.onAddFormSave=function(a){this.loadContacts(!0),this.changeAddCardState("default")},a.prototype.onAddFormCancel=function(){this.changeAddCardState("default")},a.prototype.setupFormListeners=function(){var a=this;this.$scope.$on("adp-meta-form-cancel",function(b,c){c&&c.formName&&a.onAddFormCancel()}),this.$scope.$on("adp-meta-form-success",function(b,c){a.onAddFormSave(c)}),this.$scope.$on("adp-meta-form-processing",function(b,c){a.onAddFormLoading(c.processing)})},a.prototype.changeAddCardState=function(a){"add"===a?this.startAdding():"default"===a&&this.startViewing(),this.addCard.scope.$gotoState(a)},a.$inject=["$scope","redbox.connections.emergencycontacts.EmergencyContactsService","redbox.ext.shared.services.UserIdentityService","redbox.connections.emergencycontacts.EmergencyContactsPermissionsService"],a}()})}}}),a.register("1e",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){a("EmergencyContactsDetailsComponent",c={bindings:{contact:"<"},templateUrl:"app/connections/modules/emergency-contacts/ts/shared/emergency-contacts-details-component.html",controller:function(){function a(){}return a}()})}}}),a.register("1f",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){a("EmergencyContactsCardComponent",c={bindings:{contact:"<",associateOid:"@",userOid:"@",worker:"<",isDisabled:"<",onStartEdit:"&",onStartView:"&",onStartDelete:"&",onStartConfirmRecall:"&",onSave:"&",onError:"&",permissions:"<"},replace:!0,templateUrl:"app/connections/modules/emergency-contacts/ts/emergency-contacts-slidein/emergency-contacts-card-component.html",controller:function(){function a(a,b,c){this.$scope=a,this.emergencyContactsService=b,this.$analytics=c,this.cardOptions={pictureShow:"true"}}return a.prototype.setCard=function(a){this.card=a},a.prototype.recallWorkflow=function(){var a=this;this.emergencyContactsService.recallWorkflow(this.contact.pendingEvent,this.associateOid).then(function(b){a.onSave&&a.onSave(),a.changeState("view")})},a.prototype.onFormLoading=function(a){this.isLoading=a},a.prototype.onFormSave=function(a){this.$analytics.eventTrack("Action",{category:"Category",label:"Label"}),this.onSave&&this.onSave(),this.changeState("view")},a.prototype.onFormCancel=function(){this.changeState("view")},a.prototype.onFormError=function(){},a.prototype.changeState=function(a){"edit"===a&&this.onStartEdit?this.onStartEdit():"view"===a&&this.onStartView?this.onStartView():"delete"===a&&this.onStartDelete?this.onStartDelete():"confirmRecall"===a&&this.onStartConfirmRecall&&this.onStartConfirmRecall(),this.card.scope.$gotoState(a)},a.$inject=["$scope","redbox.connections.emergencycontacts.EmergencyContactsService","$analytics"],a}()})}}}),a.register("20",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){a("META_PATCH",c={ENTERPRISE:{add:{meta:{"/data/transforms":[{"/personalContact/precedenceCode":{codeList:{codeListTitle:"Primary Contact Indicator",listItems:[{codeValue:"Y",longName:"Yes"},{codeValue:"N",longName:"No"}]}},"/personalContact/communication/landlines":{minItems:0,maxItems:2,uniqueItems:!0},"/personalContact/communication/landlines/nameCode":{readOnly:!0,optional:!1,hidden:!1,uniqueIndicator:!0,codeList:{codeListTitle:"Phone Types",listItems:[{codeValue:"Home Phone",longName:"Home Phone"},{codeValue:"Work Phone",longName:"Work Phone"}]}},"/personalContact/address/countrySubdivisionLevel1/codeValue":{readOnly:!1,optional:!0,hidden:!0,dependencies:{hidden:{oneOf:{value:!1,attributes:{"/personalContact/address/countryCode":{pattern:"(US|CA)"}}}}}},"/personalContact/address/cityName":{readOnly:!1,optional:!0,hidden:!1,maxLength:30},"/personalContact/address/postalCode":{readOnly:!1,optional:!0,hidden:!1,maxLength:10},"/personalContact/communication/landlines/countryDialing":{readOnly:!1,optional:!0,hidden:!1,maxLength:4},"/personalContact/communication/landlines/areaDialing":{readOnly:!1,optional:!0,hidden:!1,maxLength:5},"/personalContact/communication/landlines/formattedNumber":{readOnly:!1,optional:!0,hidden:!1,maxLength:15},"/personalContact/communication/landlines/nameCode/codeValue":{readOnly:!1,optional:!0,hidden:!1,maxLength:50}}]}},change:{meta:{"/data/transforms":[{"/personalContact/personName/formattedName":{readOnly:!0},"/personalContact/precedenceCode":{codeList:{codeListTitle:"Primary Contact Indicator",listItems:[{codeValue:"Y",longName:"Yes"},{codeValue:"N",longName:"No"}]}},"/personalContact/communication/landlines":{minItems:0,maxItems:2,uniqueItems:!0},"/personalContact/communication/landlines/nameCode":{readOnly:!0,optional:!1,hidden:!1,uniqueIndicator:!0,codeList:{codeListTitle:"Phone Types",listItems:[{codeValue:"Home Phone",longName:"Home Phone"},{codeValue:"Work Phone",longName:"Work Phone"}]}}}]}}},VANTAGE:{add:{meta:{"/data/transforms":[{"/personalContact/precedenceCode":{codeList:{codeListTitle:"Primary Contact Indicator",listItems:[{codeValue:"PRIM",longName:"Primary"},{codeValue:"",longName:"Not Primary"}]}}}]}},change:{meta:{"/data/transforms":[{"/personalContact/precedenceCode":{codeList:{codeListTitle:"Primary Contact Indicator",listItems:[{codeValue:"PRIM",longName:"Primary"},{codeValue:"",longName:"Not Primary"}]}}}]}}}})}}}),a.register("21",["20"],function(a,b){var c,d;return b&&b.id,{setters:[function(a){c=a}],execute:function(){a("EmergencyContactsMetaFormComponent",d={bindings:{fieldModel:"<",associateOid:"@",action:"@",worker:"<",contactList:"<",onLoading:"&",onSuccess:"&",onCancel:"&",onError:"&"},templateUrl:"app/connections/modules/emergency-contacts/ts/meta-form/emergency-contacts-meta-form-component.html",controller:function(){function a(a,b,c){this.MetaFormService=a,this.META_CONSTANTS=b,this.UserPermissionService=c,this.phoneFieldsConfig={preferredOrder:["PRIM","Home Phone","ALT","Work Phone"],labelMappings:{PRIM:"connections.PROFILE_EMERGENCY_CONTACTS_PRIMARY_PHONE",ALT:"connections.PROFILE_EMERGENCY_CONTACTS_ALTERNATE_PHONE","Home Phone":"connections.PROFILE_EMERGENCY_CONTACTS_PRIMARY_PHONE","Work Phone":"connections.PROFILE_EMERGENCY_CONTACTS_ALTERNATE_PHONE"}},this.FORMATTED_NAME_PATH="/personalContact/personName/formattedName",this.EVENTS={add:this.META_CONSTANTS.EVENTS.PERSONAL_CONTACT_ADD,change:this.META_CONSTANTS.EVENTS.PERSONAL_CONTACT_CHANGE,remove:this.META_CONSTANTS.EVENTS.PERSONAL_CONTACT_REMOVE},this.firstName={value:"",pattern:"^[a-zA-Z0-9 ]+$",required:!0,hidden:!1,maxLength:20},this.lastName={value:"",pattern:"^[a-zA-Z0-9 ]+$",required:!0,hidden:!1,maxLength:20}}return a.prototype.$onInit=function(){var a=this,b=this.UserPermissionService.getApplicationId("MobileESSWorkerProfile").toUpperCase(),d=_.get(c.META_PATCH,b+"."+this.action),e={};_.set(e,"personalContact",this.fieldModel),this.event=this.EVENTS[this.action],this.onLoading({loading:!0}),this.MetaFormService.loadMeta(e,{aoid:this.associateOid,sffo:this.event.SFFO,workflowEnabled:this.event.WORKFLOW_ENABLED,patch:d}).then(function(b){a.initCustomFields(b),a.metaForm=b,"change"!==a.action&&"remove"!==a.action||a.metaForm.setEventContextItemID("/personalContact/itemID",a.fieldModel.itemID)}).catch(function(b){a.onError(b)}).finally(function(){a.onLoading({loading:!1})})},a.prototype.onBeforeSave=function(){if(this.metaForm.inputFields["/personalContact/personName/formattedName"]){var a=this.lastName.value+","+this.firstName.value;this.metaForm.inputFields["/personalContact/personName/formattedName"].value=a}},a.prototype.getContactName=function(){return"add"===this.action?this.firstName.value+" "+this.lastName.value:this.fieldModel.personName.formattedName.split(",")[1]+" "+this.fieldModel.personName.formattedName.split(",")[0]},a.prototype.initCustomFields=function(a){var b=_.get(a.inputFields,this.FORMATTED_NAME_PATH);b&&(this.firstName.maxLength=b.maxLength?b.maxLength/2:this.firstName.maxLength,this.lastName.maxLength=b.maxLength?b.maxLength/2:this.lastName.maxLength,this.firstName.value=b.value?b.value.split(",")[1]:"",this.lastName.value=b.value?b.value.split(",")[0]:""),"change"===this.action&&(_.set(this.firstName,"readOnly",!0),_.set(this.lastName,"readOnly",!0))},a.$inject=["redbox.connections.metaforms.MetaFormService","redbox.framework.meta.META_CONSTANTS","redbox.ext.shared.services.UserPermissionService"],a}()})}}}),a.register("f",[],function(a,b){var c;return b&&b.id,{setters:[],execute:function(){c=function(){function a(){this.isLoading=!1}return a.prototype.dataChange=function(){this.formCtrl.onInputChange({field:this.inputField})},a}(),a("MetaInputFieldBaseComponent",c)}}}),a.register("22",["f"],function(a,b){var c,d,e=(b&&b.id,this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)});return{setters:[function(a){c=a}],execute:function(){a("EmergencyContactsContactNameInputComponent",d={bindings:{inputField:"<",firstName:"<",lastName:"<",contactList:"<",onUpdate:"&"},require:{formCtrl:"^conMetaForm"},templateUrl:"app/connections/modules/emergency-contacts/ts/meta-form/emergency-contacts-contact-name-input-component.html",controller:function(a){function b(){a.apply(this,arguments)}return e(b,a),b.prototype.$onInit=function(){var a=this;this.formCtrl.addInputValidator({validate:function(){var b=a.lastName.value+","+a.firstName.value,c=a.contactList&&!_.isUndefined(a.contactList.checkDuplicateContacts(b));return c?a.showDuplicateContactError=!0:a.showDuplicateContactError=!1,!c}})},b}(c.MetaInputFieldBaseComponent)})}}}),a.register("23",["18","1b","19","1a","1c","1d","1e","1f","21","22"],function(a,b){var c,d,e,f,g,h,i,j,k,l,m;return b&&b.id,{setters:[function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a},function(a){h=a},function(a){i=a},function(a){j=a},function(a){k=a},function(a){l=a}],execute:function(){m=angular.module("redbox.connections.emergencycontacts",[]),m.service("redbox.connections.emergencycontacts.EmergencyContactsService",c.EmergencyContactsService).service("redbox.connections.emergencycontacts.EmergencyContactsPermissionsService",d.EmergencyContactsPermissionsService).factory("redbox.connections.emergencycontacts.model.EmergencyContactsList",e.EmergencyContactsList).factory("redbox.connections.emergencycontacts.model.EmergencyContact",f.EmergencyContact).component("conEmergencyContactsTile",g.EmergencyContactsTileComponent).component("conEmergencyContactsSlidein",h.EmergencyContactsSlideinComponent).component("conEmergencyContactsDetails",i.EmergencyContactsDetailsComponent).component("conEmergencyContactsCard",j.EmergencyContactsCardComponent).component("conEmergencyContactsMetaForm",k.EmergencyContactsMetaFormComponent).component("conEmergencyContactsContactNameInput",l.EmergencyContactsContactNameInputComponent),
a("EmergencyContactsModule",m),a("EmergencyContactsService",c.EmergencyContactsService),a("EmergencyContactsPermissionsService",d.EmergencyContactsPermissionsService),a("EmergencyContactsList",e.EmergencyContactsList),a("EmergencyContact",f.EmergencyContact),a("EmergencyContactsTileComponent",g.EmergencyContactsTileComponent),a("EmergencyContactsSlideinComponent",h.EmergencyContactsSlideinComponent),a("EmergencyContactsDetailsComponent",i.EmergencyContactsDetailsComponent),a("EmergencyContactsCardComponent",j.EmergencyContactsCardComponent),a("EmergencyContactsMetaFormComponent",k.EmergencyContactsMetaFormComponent)}}}),a.register("1",["9","17","23"],function(a,b){var c,d,e,f;return b&&b.id,{setters:[function(a){c=a},function(a){d=a},function(a){e=a}],execute:function(){f=angular.module("redbox.connections"),f.requires=f.requires.concat([c.PhotoEditorModule.name,e.EmergencyContactsModule.name,d.MetaFormsModule.name]),a("ConnectionsModule",f)}}})})(function(a){"function"==typeof define&&define.amd?define([],a):"object"==typeof module&&module.exports&&"function"==typeof require?module.exports=a():a()});